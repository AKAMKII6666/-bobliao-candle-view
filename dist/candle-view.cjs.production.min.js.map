{"version":3,"file":"candle-view.cjs.production.min.js","sources":["../src/content/utils/consts.ts","../src/content/hooks/throttleHook.ts","../node_modules/regenerator-runtime/runtime.js","../src/content/utils/defaultValues.ts","../src/content/utils/languages.ts","../src/content/utils/timeFormatDefine.ts","../src/content/context/candleViewContext.ts","../node_modules/style-inject/dist/style-inject.es.js","../src/content/hooks/debounceHook.ts","../src/content/utils/basicShaps.ts","../src/content/com/xAxis.tsx","../src/content/com/dataToolTip.tsx","../src/content/com/yAxis.tsx","../src/content/com/data.tsx","../src/content/com/netLines.tsx","../src/content/com/volumChart.tsx","../src/content/com/info.tsx","../src/content/com/loadingLay.tsx","../src/content/index.tsx","../src/content/hooks/xAxisHook.ts","../src/content/hooks/yAxisHook.ts","../src/content/hooks/candleHook.ts"],"sourcesContent":["import _bigNumber from \"bignumber.js\";\r\nimport { IcandleData, jsonObjectType, numberScope, pointCoord, tickItem } from \"../interface/itemsInterFace\";\r\n\r\n/**\r\n * 格式化时间\r\n */\r\nexport const formatDate = function (date: Date, format: string): string {\r\n\tdate = date || new Date();\r\n\tformat = format || \"yyyy-MM-dd HH:mm:ss\";\r\n\tvar result = format\r\n\t\t.replace(\"yyyy\", date.getFullYear().toString())\r\n\t\t.replace(\"yy\", date.getFullYear().toString().substring(2, 4))\r\n\t\t.replace(\"MM\", (date.getMonth() < 9 ? \"0\" : \"\") + (date.getMonth() + 1).toString())\r\n\t\t.replace(\"dd\", (date.getDate() < 10 ? \"0\" : \"\") + date.getDate().toString())\r\n\t\t.replace(\"HH\", (date.getHours() < 10 ? \"0\" : \"\") + date.getHours().toString())\r\n\t\t.replace(\"mm\", (date.getMinutes() < 10 ? \"0\" : \"\") + date.getMinutes().toString())\r\n\t\t.replace(\"ss\", (date.getSeconds() < 10 ? \"0\" : \"\") + date.getSeconds().toString());\r\n\r\n\treturn result;\r\n};\r\n\r\n/**\r\n * 将本地时间时区换算成格林威治时间 GMT+0000\r\n * 例如输入时间为 GMT +0800\r\n * 它将会把时间换算成 GMT+0000  也就是减去八小时\r\n */\r\nexport const localTimeToGMT0000 = function (time: number | Date) {\r\n\tlet date = new Date(time);\r\n\tlet timeZone = Math.abs(date.getTimezoneOffset() / 60);\r\n\tdate.setHours(date.getHours() - timeZone);\r\n\treturn date.getTime();\r\n};\r\nexport const GMT0000TolocalTime = function (time: number | Date) {\r\n\tlet date = new Date(time);\r\n\tlet timeZone = Math.abs(date.getTimezoneOffset() / 60);\r\n\tdate.setHours(date.getHours() + timeZone);\r\n\treturn date.getTime();\r\n};\r\n\r\n/**\r\n * 将某个时间重置到GMT +0000 然后再变换到GMT +0n00\r\n */\r\nexport const anyTimeToGMT0000ToTarget = function (\r\n\ttime: number | Date,\r\n\tcurrentTimeZone: number | \"local\",\r\n\ttargetTimeZone: number | \"local\"\r\n) {\r\n\tlet date = new Date(time);\r\n\tlet localtimeZone = Math.abs(date.getTimezoneOffset() / 60);\r\n\tif (targetTimeZone === \"local\") {\r\n\t\ttargetTimeZone = localtimeZone;\r\n\t}\r\n\r\n\tif (currentTimeZone === \"local\") {\r\n\t\tcurrentTimeZone = localtimeZone;\r\n\t}\r\n\tdate.setHours(date.getHours() - currentTimeZone + targetTimeZone);\r\n\treturn date.getTime();\r\n};\r\n\r\n/**\r\n * 获得长度\r\n *@param  {number | string} arg 输入值\r\n *@param  {number} length 相对的长度\r\n *@returns {number}\r\n */\r\nexport const getSpaceSize = function (arg: number | string, length: number): number {\r\n\tif (typeof arg === \"string\" && arg === \"auto\") {\r\n\t\treturn length;\r\n\t}\r\n\r\n\tif (typeof arg === \"string\" && arg.indexOf(\"%\") !== -1) {\r\n\t\tlet value = Number(arg.replace(\"%\", \"\")) / 100;\r\n\t\treturn length * value;\r\n\t}\r\n\r\n\tif (typeof arg === \"string\" && arg.indexOf(\"px\") !== -1) {\r\n\t\treturn Number(arg.replace(\"px\", \"\"));\r\n\t}\r\n\r\n\tif (typeof arg === \"number\" || !isNaN(Number(arg))) {\r\n\t\treturn Number(arg);\r\n\t}\r\n\r\n\tconsole.log(\"no useful length !\");\r\n\treturn 0;\r\n};\r\n\r\n/**\r\n * 通过时间 计算点的坐标\r\n *@param  {number} value 值\r\n *@param  {number} length 数组长度\r\n *@param {number} pixWidth 像素长度\r\n */\r\nexport const getRangePosition = function (\r\n\t//\r\n\tvalue: number,\r\n\trange: numberScope,\r\n\tpixWidth: number\r\n): number {\r\n\treturn pixWidth * ((value - range.start) / (range.end - range.start));\r\n};\r\n\r\n/**\r\n * 求tick的交集\r\n */\r\nexport const findIntersection = function (tickArr: tickItem[], scope: numberScope): tickItem[] {\r\n\tlet result: tickItem[] = [];\r\n\r\n\tif (tickArr.length < 300) {\r\n\t\tfor (var item of tickArr) {\r\n\t\t\tif (Number(item.value) >= scope.start && Number(item.value) <= scope.end) {\r\n\t\t\t\tresult.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\tresult = findIntersectionByKey(tickArr as unknown as jsonObjectType[], scope, \"value\") as unknown as tickItem[];\r\n\t}\r\n\r\n\treturn result;\r\n};\r\n\r\n/**\r\n * 求candle的交集\r\n */\r\nexport const findIntersectionCandle = function (candle: IcandleData[], scope: numberScope): IcandleData[] {\r\n\tlet result: IcandleData[] = [];\r\n\t//for (var item of candle) {\r\n\t//\tif (Number(item.time) >= scope.start && Number(item.time) <= scope.end) {\r\n\t//\t\tresult.push(item);\r\n\t//\t}\r\n\t//}\r\n\r\n\tresult = findIntersectionByKey(candle as unknown as jsonObjectType[], scope, \"time\") as unknown as IcandleData[];\r\n\r\n\treturn result;\r\n};\r\n\r\n//换算区块链的数字单位\r\nexport const shiftNumber = function (_number: string | number, _shiftLength: number): string {\r\n\treturn new _bigNumber(_number).times(new _bigNumber(10).exponentiatedBy(_shiftLength)).toString();\r\n};\r\n\r\n/**\r\n * 将数组快速转换为hash表\r\n */\r\nexport const arrayToHash = function (arr: any[], keyProperty: string) {\r\n\treturn arr.reduce((hash, obj, index) => {\r\n\t\thash[obj[keyProperty]] = obj;\r\n\t\thash[obj[keyProperty]].index = index;\r\n\t\treturn hash;\r\n\t}, {});\r\n};\r\n\r\n/**\r\n * 获得某个数字的小数位数\r\n */\r\nexport const getDecimalOfLength = function (num: number): number {\r\n\treturn new _bigNumber(num).decimalPlaces() as number;\r\n};\r\n\r\n/**\r\n * 获得某个数字的整数位数\r\n */\r\nexport const getIntOfLength = function (num: number): number {\r\n\treturn new _bigNumber(num).toFixed(0).toString().length;\r\n};\r\n\r\n/**\r\n * 把任意整数的末尾数字算成整数例如 12345678  算成 12345680\r\n * “四舍五入”到最近的十的倍数 (N的倍数)\r\n */\r\nexport const roundToNearestTenBigNumber = function (num: string, intGetPar: number) {\r\n\t// 创建BigNumber实例\r\n\tconst bigNum = new _bigNumber(num);\r\n\r\n\t// 计算末尾数字（余数）\r\n\tconst remainder = bigNum.modulo(intGetPar);\r\n\r\n\t// 判断并进行相应的加减操作\r\n\t// 注意：BigNumber的运算需要使用其提供的方法，不能直接使用+-*/等运算符\r\n\tlet result;\r\n\t// 加（intGetPar - 余数）\r\n\t//永远往大推，不要往小推\r\n\tresult = bigNum.minus(remainder).plus(intGetPar);\r\n\r\n\t// 确保结果是整数，虽然一般操作结果已经是整数，但可做显式转换\r\n\treturn result.integerValue(_bigNumber.ROUND_FLOOR).toString();\r\n};\r\n\r\n//这是我自己写的\r\n\r\n///**\r\n// * 查找点\r\n// * @param inputArr 查找的数组\r\n// * @param target 目标数字\r\n// * @param key 目标字段\r\n// * @param targetType 找 起点<= 目标  还是 终点>= 目标\r\n// */\r\n//function binarySearchByKey(\r\n//\tinputArr: jsonObjectType[],\r\n//\ttarget: number,\r\n//\tkey: string,\r\n//\ttargetType: \"forStart\" | \"forEnd\"\r\n//): number | null {\r\n//\tif (targetType === \"forStart\" && target <= (inputArr[0][key] as number)) {\r\n//\t\treturn 0;\r\n//\t}\r\n//\tif (targetType === \"forEnd\" && target >= (inputArr[inputArr.length - 1][key] as number)) {\r\n//\t\treturn inputArr.length - 1;\r\n//\t}\r\n//\r\n//\tlet left = 0;\r\n//\tlet right = inputArr.length - 1;\r\n//\tlet mid: number;\r\n//\r\n//\twhile (left <= right) {\r\n//\t\tmid = left + Math.floor((right - left) / 2);\r\n//\r\n//\t\tif (inputArr[mid][key] === target) {\r\n//\t\t\tif (targetType === \"forStart\") {\r\n//\t\t\t\t// 查找起点，继续在左半边查找可能更小的索引\r\n//\t\t\t\tright = mid - 1;\r\n//\t\t\t} else {\r\n//\t\t\t\t// 查找终点，继续在右半边查找可能更大的索引\r\n//\t\t\t\tleft = mid + 1;\r\n//\t\t\t}\r\n//\t\t} else if ((inputArr[mid][key] as number) < target) {\r\n//\t\t\tleft = mid + 1;\r\n//\t\t} else {\r\n//\t\t\tright = mid - 1;\r\n//\t\t}\r\n//\t}\r\n//\r\n//\t// 根据targetType确定返回值\r\n//\tif (targetType === \"forStart\") {\r\n//\t\t// 如果是查找起点，返回第一个大于等于target的索引\r\n//\t\treturn left;\r\n//\t} else {\r\n//\t\t// 如果是查找终点，由于循环结束时left已经越过了目标，所以返回right\r\n//\t\treturn right;\r\n//\t}\r\n//}\r\n//\r\n///**\r\n// * 二分查找法求交集\r\n// * @param inputArr 输入数组\r\n// * @param scope 范围\r\n// * @param key 目标字段\r\n// * @returns 返回找到的数组范围\r\n// */\r\n//export const findIntersectionByKey = function (\r\n//\tinputArr: jsonObjectType[],\r\n//\tscope: numberScope,\r\n//\tkey: string\r\n//): jsonObjectType[] {\r\n//\tlet startIndex = binarySearchByKey(inputArr, scope.start, key, \"forStart\");\r\n//\tlet endIndex = binarySearchByKey(inputArr, scope.end, key, \"forEnd\");\r\n//\r\n//\t// 确保索引有效\r\n//\tstartIndex = startIndex === null ? 0 : startIndex;\r\n//\tendIndex = endIndex === null ? inputArr.length - 1 : endIndex;\r\n//\r\n//\t// 调整endIndex以确保包含等于scope.end的元素\r\n//\tif (endIndex < inputArr.length && inputArr[endIndex][key] < scope.end) {\r\n//\t\tendIndex++;\r\n//\t}\r\n//\r\n//\treturn inputArr.slice(startIndex, endIndex);\r\n//};\r\n\r\n/**\r\n * 查找点\r\n * @param inputArr 查找的数组\r\n * @param target 目标数字\r\n * @param key 目标字段\r\n * @param targetType 找 起点=== 目标  还是 终点=== 目标\r\n */\r\nexport function binarySearchByKeyStrictlyEqual(\r\n\tinputArr: jsonObjectType[] | number[],\r\n\ttarget: number,\r\n\ttargetType: \"forStart\" | \"forEnd\",\r\n\tkey?: string\r\n): number | null {\r\n\tlet getItem = function (arr: any[], index: any): number {\r\n\t\tif (typeof arr[index] === \"object\" || typeof key !== \"undefined\") {\r\n\t\t\treturn Number(arr[index][key!]);\r\n\t\t}\r\n\t\treturn Number(arr[index]);\r\n\t};\r\n\tif (targetType === \"forStart\" && target === (getItem(inputArr, 0) as number)) {\r\n\t\treturn 0;\r\n\t}\r\n\tif (targetType === \"forEnd\" && target === (getItem(inputArr, inputArr.length - 1) as number)) {\r\n\t\treturn inputArr.length - 1;\r\n\t}\r\n\r\n\tlet left = 0;\r\n\tlet right = inputArr.length - 1;\r\n\tlet mid: number;\r\n\r\n\twhile (left <= right) {\r\n\t\tmid = left + Math.floor((right - left) / 2);\r\n\r\n\t\tif (getItem(inputArr, mid) === target) {\r\n\t\t\tif (targetType === \"forStart\") {\r\n\t\t\t\t// 查找起点，继续在左半边查找可能更小的索引\r\n\t\t\t\tright = mid - 1;\r\n\t\t\t} else {\r\n\t\t\t\t// 查找终点，继续在右半边查找可能更大的索引\r\n\t\t\t\tleft = mid + 1;\r\n\t\t\t}\r\n\t\t} else if ((getItem(inputArr, mid) as number) < target) {\r\n\t\t\tleft = mid + 1;\r\n\t\t} else {\r\n\t\t\tright = mid - 1;\r\n\t\t}\r\n\t}\r\n\r\n\t// 根据targetType确定返回值\r\n\tif (targetType === \"forStart\") {\r\n\t\t// 如果是查找起点，返回第一个大于等于target的索引\r\n\t\treturn left;\r\n\t} else {\r\n\t\t// 如果是查找终点，由于循环结束时left已经越过了目标，所以返回right\r\n\t\treturn right;\r\n\t}\r\n}\r\n\r\n//ai帮忙优化的版本，确实优雅一些\r\n/**\r\n * 查找点\r\n * @param inputArr 查找的数组\r\n * @param target 目标数字\r\n * @param key 目标字段\r\n * @param targetType 找 起点<= 目标  还是 终点>= 目标\r\n */\r\nfunction binarySearchByKey(\r\n\tinputArr: jsonObjectType[],\r\n\ttarget: number,\r\n\tkey: string,\r\n\ttargetType: \"forStart\" | \"forEnd\"\r\n): number | null {\r\n\tif (typeof inputArr[0] === \"undefined\") {\r\n\t\treturn -1;\r\n\t}\r\n\tif (targetType === \"forStart\" && target <= (inputArr[0][key] as number)) {\r\n\t\treturn 0;\r\n\t}\r\n\tif (targetType === \"forEnd\" && target >= (inputArr[inputArr.length - 1][key] as number)) {\r\n\t\treturn inputArr.length - 1;\r\n\t}\r\n\r\n\tlet left = 0;\r\n\tlet right = inputArr.length - 1;\r\n\tlet mid: number;\r\n\r\n\twhile (left <= right) {\r\n\t\tmid = left + Math.floor((right - left) / 2);\r\n\r\n\t\tif (inputArr[mid][key] === target) {\r\n\t\t\tif (targetType === \"forStart\") {\r\n\t\t\t\t// 查找起点，继续在左半边查找可能更小的索引\r\n\t\t\t\tright = mid - 1;\r\n\t\t\t} else {\r\n\t\t\t\t// 查找终点，继续在右半边查找可能更大的索引\r\n\t\t\t\tleft = mid + 1;\r\n\t\t\t}\r\n\t\t} else if ((inputArr[mid][key] as number) < target) {\r\n\t\t\tleft = mid + 1;\r\n\t\t} else {\r\n\t\t\tright = mid - 1;\r\n\t\t}\r\n\t}\r\n\r\n\t// 根据targetType确定返回值\r\n\tif (targetType === \"forStart\") {\r\n\t\t// 如果是查找起点，返回第一个大于等于target的索引\r\n\t\treturn left;\r\n\t} else {\r\n\t\t// 如果是查找终点，由于循环结束时left已经越过了目标，所以返回right\r\n\t\treturn right;\r\n\t}\r\n}\r\n\r\n/**\r\n * 二分查找法求交集\r\n * @param inputArr 输入数组\r\n * @param scope 范围\r\n * @param key 目标字段\r\n * @returns 返回找到的数组范围\r\n */\r\nexport const findIntersectionByKey = function (\r\n\tinputArr: jsonObjectType[],\r\n\tscope: numberScope,\r\n\tkey: string\r\n): jsonObjectType[] {\r\n\tlet startIndex = binarySearchByKey(inputArr, scope.start, key, \"forStart\");\r\n\tlet endIndex = binarySearchByKey(inputArr, scope.end, key, \"forEnd\");\r\n\r\n\t// 确保索引有效\r\n\tstartIndex = startIndex === null ? 0 : startIndex;\r\n\tendIndex = endIndex === null ? inputArr.length - 1 : endIndex;\r\n\tif (typeof inputArr[endIndex] === \"undefined\") {\r\n\t\treturn [];\r\n\t}\r\n\tif (endIndex < inputArr.length && (inputArr[endIndex][key] as number) < scope.end) {\r\n\t\t// 调整endIndex以确保包含等于scope.end的元素\r\n\t\tendIndex++;\r\n\t}\r\n\r\n\treturn inputArr.slice(startIndex, endIndex);\r\n};\r\n\r\n/**\r\n * 获得正确的时间\r\n */\r\nexport const getRightDate = function (dateTime: number | string) {\r\n\tif (typeof dateTime === \"number\") {\r\n\t\treturn dateTime;\r\n\t}\r\n\treturn +new Date(dateTime);\r\n};\r\n\r\n//千分位分割\r\nexport const thousandsSplit = function (num: number): string {\r\n\tvar numStr = num.toString().trim().split(\".\")[0].split(\"\");\r\n\tvar output = \"\";\r\n\r\n\tvar j = 0;\r\n\tfor (var i = numStr.length - 1; i > -1; i--) {\r\n\t\tif (j % 3 == 0 && j != 0) {\r\n\t\t\toutput = numStr[i] + \",\" + output;\r\n\t\t} else {\r\n\t\t\toutput = numStr[i] + output;\r\n\t\t}\r\n\t\tj++;\r\n\t}\r\n\tif (num.toString().split(\".\")[1]) {\r\n\t\toutput += \".\" + num.toString().split(\".\")[1];\r\n\t}\r\n\treturn output;\r\n};\r\n\r\n//通过语言信息获得单位换算\r\nexport const getUnitNumber = function (_num: number, _lan: string, _fix: number): string {\r\n\tif (typeof _lan === \"undefined\") {\r\n\t\t_lan = \"en\";\r\n\t}\r\n\r\n\tif (typeof _fix === \"undefined\") {\r\n\t\t_fix = 0;\r\n\t}\r\n\r\n\tvar result: string = _num.toString();\r\n\r\n\tswitch (_lan) {\r\n\t\tcase \"en\":\r\n\t\t\tresult = translateNumberT(_num, _fix);\r\n\t\t\tbreak;\r\n\t\tcase \"ja\":\r\n\t\t\tresult = translateNumberF(_num, _fix);\r\n\t\t\tbreak;\r\n\t\tcase \"ko\":\r\n\t\t\tresult = translateNumberK(_num, _fix);\r\n\t\t\tbreak;\r\n\t\tcase \"zh\":\r\n\t\t\tresult = translateNumberF(_num, _fix);\r\n\t\t\tbreak;\r\n\t\tcase \"ru\":\r\n\t\t\tresult = translateNumberT(_num, _fix);\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\treturn result;\r\n};\r\n\r\n//韩文\r\nexport const translateNumberK = function (_num: number, _fix: number): string {\r\n\tif (typeof _fix === \"undefined\") {\r\n\t\t_fix = 0;\r\n\t}\r\n\tvar num = new _bigNumber(_num).toFixed().split(\".\");\r\n\tvar nIARR = num[0].split(\"\");\r\n\tvar nFARR = [];\r\n\tif (typeof num[1] !== \"undefined\") {\r\n\t\tnFARR = num[1].split(\"\");\r\n\t}\r\n\r\n\t/**\r\n\t * 万 = 10000\r\n\t * 亿 = 100000000\r\n\t * 兆 = 1000000000000\r\n\t */\r\n\r\n\t//兆 = 1000000000000\r\n\tif (nIARR.length >= 13) {\r\n\t\tlet num = new _bigNumber(_num).dividedBy(new _bigNumber(10).exponentiatedBy(12).toFixed()).toFixed(_fix, 1);\r\n\t\treturn num + \"조\";\r\n\t}\r\n\r\n\t//亿 = 100000000\r\n\tif (nIARR.length >= 9) {\r\n\t\tlet num = new _bigNumber(_num).dividedBy(new _bigNumber(10).exponentiatedBy(8).toFixed()).toFixed(_fix, 1);\r\n\t\treturn num + \"억\";\r\n\t}\r\n\r\n\t//万 = 10000\r\n\tif (nIARR.length >= 5) {\r\n\t\tlet num = new _bigNumber(_num).dividedBy(new _bigNumber(10).exponentiatedBy(4).toFixed()).toFixed(_fix, 1);\r\n\t\treturn num + \"만\";\r\n\t}\r\n\r\n\treturn new _bigNumber(_num).toFixed(_fix);\r\n};\r\n\r\n//中文\r\nexport const translateNumberF = function (_num: number, _fix: number): string {\r\n\tif (typeof _fix === \"undefined\") {\r\n\t\t_fix = 0;\r\n\t}\r\n\tvar num = new _bigNumber(_num).toFixed().split(\".\");\r\n\tvar nIARR = num[0].split(\"\");\r\n\tvar nFARR = [];\r\n\tif (typeof num[1] !== \"undefined\") {\r\n\t\tnFARR = num[1].split(\"\");\r\n\t}\r\n\r\n\t/**\r\n\t * 百 = 100\r\n\t * 千 = 1000\r\n\t * 万 = 10000\r\n\t * 百万 = 1000000\r\n\t * 千万 = 10000000\r\n\t * 亿 = 100000000\r\n\t * 兆 = 1000000000000\r\n\t */\r\n\r\n\t//兆 = 1000000000000\r\n\tif (nIARR.length >= 13) {\r\n\t\tlet num = new _bigNumber(_num).dividedBy(new _bigNumber(10).exponentiatedBy(12).toFixed()).toFixed(_fix, 1);\r\n\t\treturn num + \"兆\";\r\n\t}\r\n\r\n\t//亿 = 100000000\r\n\tif (nIARR.length >= 9) {\r\n\t\tlet num = new _bigNumber(_num).dividedBy(new _bigNumber(10).exponentiatedBy(8).toFixed()).toFixed(_fix, 1);\r\n\t\treturn num + \"亿\";\r\n\t}\r\n\r\n\t//千万 = 10000000\r\n\tif (nIARR.length >= 8) {\r\n\t\tlet num = new _bigNumber(_num).dividedBy(new _bigNumber(10).exponentiatedBy(7).toFixed()).toFixed(_fix, 1);\r\n\t\treturn num + \"千萬\";\r\n\t}\r\n\r\n\t//百万 = 1000000\r\n\tif (nIARR.length >= 7) {\r\n\t\tlet num = new _bigNumber(_num).dividedBy(new _bigNumber(10).exponentiatedBy(6).toFixed()).toFixed(_fix, 1);\r\n\t\treturn num + \"百萬\";\r\n\t}\r\n\r\n\t//万 = 10000\r\n\tif (nIARR.length >= 5) {\r\n\t\tlet num = new _bigNumber(_num).dividedBy(new _bigNumber(10).exponentiatedBy(4).toFixed()).toFixed(_fix, 1);\r\n\t\treturn num + \"萬\";\r\n\t}\r\n\r\n\treturn new _bigNumber(_num).toFixed(_fix);\r\n};\r\n\r\n//换算单位英文\r\nexport const translateNumberT = function (_num: number, _fix: number): string {\r\n\tif (typeof _fix === \"undefined\") {\r\n\t\t_fix = 0;\r\n\t}\r\n\tvar num = new _bigNumber(_num).toFixed().split(\".\");\r\n\tvar nIARR = num[0].split(\"\");\r\n\tvar nFARR = [];\r\n\tif (typeof num[1] !== \"undefined\") {\r\n\t\tnFARR = num[1].split(\"\");\r\n\t}\r\n\r\n\t/**\r\n\t * k = 1000\r\n\t * m = 10000000\r\n\t * b = 1000000000\r\n\t * t = 10000000000\r\n\t */\r\n\r\n\t//t = 10000000000\r\n\tif (nIARR.length >= 11) {\r\n\t\tlet num = new _bigNumber(_num).dividedBy(new _bigNumber(10).exponentiatedBy(10).toFixed()).toFixed(_fix, 1);\r\n\t\treturn num + \"T\";\r\n\t}\r\n\r\n\t//b = 1000000000\r\n\tif (nIARR.length >= 10) {\r\n\t\tlet num = new _bigNumber(_num).dividedBy(new _bigNumber(10).exponentiatedBy(9).toFixed()).toFixed(_fix, 1);\r\n\t\treturn num + \"B\";\r\n\t}\r\n\r\n\t//m = 1000000\r\n\tif (nIARR.length >= 7) {\r\n\t\tlet num = new _bigNumber(_num).dividedBy(new _bigNumber(10).exponentiatedBy(6).toFixed()).toFixed(_fix, 1);\r\n\t\treturn num + \"M\";\r\n\t}\r\n\r\n\t//k = 1000\r\n\tif (nIARR.length >= 4) {\r\n\t\tlet num = new _bigNumber(_num).dividedBy(new _bigNumber(10).exponentiatedBy(3).toFixed()).toFixed(_fix, 1);\r\n\t\treturn num + \"K\";\r\n\t}\r\n\treturn new _bigNumber(_num).toFixed(_fix);\r\n};\r\n\r\n/**\r\n * 求等差数列的个数\r\n * @param length 数组的长度\r\n * @param step 每隔几个元素取一个元素\r\n * @returns 返回共可取多少元素\r\n */\r\nexport const countSelectedElements = function (length: number, step: number): number {\r\n\t// 计算数组长度\r\n\tconst arrayLength = length;\r\n\tstep = step + 1;\r\n\r\n\t// 如果步长大于数组长度，则没有元素可以挑选\r\n\tif (step >= arrayLength) {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t// 计算挑选的元素数量\r\n\t// 使用整数除法向下取整\r\n\tconst count = Math.floor((arrayLength - 1) / step) + 1;\r\n\r\n\treturn count;\r\n};\r\n\r\n/**\r\n * 检查数组里的元素是否有重复\r\n */\r\nexport const hasDuplicates = function (arr: any) {\r\n\t// 创建一个Set对象，它会自动去除重复的元素\r\n\tconst uniqueSet = new Set(arr);\r\n\r\n\t// 如果Set的大小小于数组的长度，说明数组中有重复元素\r\n\treturn uniqueSet.size !== arr.length;\r\n};\r\n\r\n//获得两点之间的距离\r\nexport const getLength = function (p1: pointCoord, p2: pointCoord): number {\r\n\treturn Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));\r\n};\r\n","import { createContext, useState, useContext, useRef, useCallback, useEffect, FC, ReactElement } from \"react\";\r\n\r\n/**\r\n * 节流钩子\r\n */\r\nconst useThrottle = function () {\r\n\t/**\r\n\t * ============================state===========================\r\n\t */\r\n\tconst [isMounted, setIsMounted] = useState<boolean>(false);\r\n\r\n\tconst ThrottleFunction = useRef<(() => void) | null>(null);\r\n\tconst ThrottleTimeOut = useRef<NodeJS.Timeout | null>(null);\r\n\r\n\t/**\r\n\t * ==========================函数==============================\r\n\t */\r\n\r\n\tconst Throttle = function (_func: () => void, _time: number) {\r\n\t\tif (typeof _time === \"undefined\") {\r\n\t\t\t_time = 500;\r\n\t\t}\r\n\t\tif (_time === 0) {\r\n\t\t\t_func();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tThrottleFunction.current = _func;\r\n\t\tif (ThrottleTimeOut.current === null) {\r\n\t\t\tThrottleTimeOut.current = setTimeout(function () {\r\n\t\t\t\tif (ThrottleFunction.current !== null) {\r\n\t\t\t\t\tThrottleFunction.current!();\r\n\t\t\t\t\tThrottleFunction.current = null;\r\n\t\t\t\t\tThrottleTimeOut.current = null;\r\n\t\t\t\t}\r\n\t\t\t}, _time);\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * ==================================Effects===============================\r\n\t */\r\n\tuseEffect(function (): ReturnType<React.EffectCallback> {\r\n\t\tif (isMounted === false) {\r\n\t\t\tsetIsMounted(true);\r\n\t\t}\r\n\t\treturn function (): void {\r\n\t\t\tsetIsMounted(false);\r\n\t\t};\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, []);\r\n\r\n\treturn Throttle;\r\n};\r\n\r\nexport default useThrottle;\r\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","import { IPixiShapeRectangle } from \"../interface/basicShapesInterFace\";\r\nimport { ITooltipConfig, Iaxis, IdataConfig, IuseCandleView, Tlanguage } from \"../interface/configInterFaces\";\r\nimport { IToolTipItem, tickItem } from \"../interface/itemsInterFace\";\r\nimport { formatDate, getUnitNumber } from \"./consts\";\r\nimport * as PIXI from \"pixi.js\";\r\n\r\n/**\r\n *tooltip的初始值\r\n */\r\nexport const DEFAULTTOOLTIPVALUES: ITooltipConfig = {\r\n\tenabled: true,\r\n\tcolor: \"#02121c\",\r\n\tlineSize: 0.5,\r\n\tdashLength: 4,\r\n\tspaceLength: 3,\r\n\tlabel: {\r\n\t\tfontsize: 12,\r\n\t\tcolor: \"#ffffff\",\r\n\t\tbackGroundColor: \"#454545\",\r\n\t\tbackGroundAlpha: 1,\r\n\t\tformatter: function (axisItem: tickItem | IToolTipItem) {\r\n\t\t\t//yyyy-MM-dd HH:mm:ss\r\n\t\t\treturn formatDate(new Date(axisItem.value), \"yyyy-MM-dd HH:mm:ss\");\r\n\t\t},\r\n\t},\r\n};\r\n\r\n/**\r\n *轴组件的初始值\r\n */\r\nexport const DEFAULTAXISVALUES: Iaxis = {\r\n\tlabelSpace: \"90px\",\r\n\tfontColor: \"#454545\",\r\n\tfontSize: \"12px\",\r\n\tnetLineColor: \"#dedede\",\r\n\tlineColor: \"#454545\",\r\n\ttickColor: \"#454545\",\r\n\ttickLength: \"3px\",\r\n\tnetLineMaxCount: 34,\r\n\tnetLineMinCount: 3,\r\n\tnetLineSize: 1,\r\n\tlineSize: 1,\r\n\ttickSize: 1,\r\n\tbackgroundColor: \"#ffffff\",\r\n\ttooltip: DEFAULTTOOLTIPVALUES,\r\n\tinitTimePoint: \"now\",\r\n\tdisplayPadding: 0.1,\r\n};\r\n\r\n/**\r\n *数据组件的初始值\r\n */\r\nexport const DEFAULTDATAVALUES: IdataConfig = {\r\n\tstaticData: [],\r\n\tdynamicData: {\r\n\t\tenabled: false,\r\n\t\tshowLoading: false,\r\n\t\tstopUserOperateWhenLoading: false,\r\n\t\tdataFetchCountPreTime: 160,\r\n\t\tdataFetchCallback: async function (time, start, end) {\r\n\t\t\treturn [];\r\n\t\t},\r\n\t},\r\n\tcandleStyles: {\r\n\t\tcandleWidth: \"80%\",\r\n\t\twickWidth: \"1px\",\r\n\t\tcandleRiseColor: \"#7de17c\",\r\n\t\tcandleFallColor: \"#c85656\",\r\n\t\twickRiseColor: \"#7de17c\",\r\n\t\twickFallColor: \"#c85656\",\r\n\t\t//当前最末尾价格的tooltip设置\r\n\t\tcurrentPriceTooltip: {\r\n\t\t\tenabled: true,\r\n\t\t\tcolor: \"#b9b42c\",\r\n\t\t\tlineSize: 0.5,\r\n\t\t\tdashLength: 8,\r\n\t\t\tspaceLength: 3,\r\n\t\t\tlabel: {\r\n\t\t\t\tfontsize: 12,\r\n\t\t\t\tcolor: \"#ffffff\",\r\n\t\t\t\tbackGroundColor: \"#b9b42c\",\r\n\t\t\t\tbackGroundAlpha: 1,\r\n\t\t\t\tformatter: function (axisItem: tickItem | IToolTipItem) {\r\n\t\t\t\t\taxisItem = axisItem as IToolTipItem;\r\n\t\t\t\t\t//yyyy-MM-dd HH:mm:ss\r\n\t\t\t\t\treturn axisItem.displayValue!;\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\t//当前显示范围的最末尾的tooltip设置\r\n\t\tviewLastPriceTooltip: {\r\n\t\t\tenabled: true,\r\n\t\t\tcolor: \"#b9b42c\",\r\n\t\t\tlineSize: 0.5,\r\n\t\t\tdashLength: 8,\r\n\t\t\tspaceLength: 3,\r\n\t\t\tlabel: {\r\n\t\t\t\tfontsize: 12,\r\n\t\t\t\tcolor: \"#ffffff\",\r\n\t\t\t\tbackGroundColor: \"#826abe\",\r\n\t\t\t\tbackGroundAlpha: 0.5,\r\n\t\t\t\tformatter: function (axisItem: tickItem | IToolTipItem) {\r\n\t\t\t\t\taxisItem = axisItem as IToolTipItem;\r\n\t\t\t\t\t//yyyy-MM-dd HH:mm:ss\r\n\t\t\t\t\treturn axisItem.displayValue!;\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\t/**\r\n\t\t *交易量\r\n\t\t */\r\n\t\tvolumChart: {\r\n\t\t\t/**\r\n\t\t\t *是否显示交易量\r\n\t\t\t */\r\n\t\t\tenabled: true,\r\n\r\n\t\t\t/**\r\n\t\t\t *交易量图表高度\r\n\t\t\t */\r\n\t\t\tvolumeChartHeight: \"30%\",\r\n\r\n\t\t\t/**\r\n\t\t\t *交易量图表透明度\r\n\t\t\t */\r\n\t\t\talpha: 0.6,\r\n\t\t\t/**\r\n\t\t\t *上升时显示的颜色\r\n\t\t\t */\r\n\t\t\triseColor: \"#d6dfc5\",\r\n\t\t\t/**\r\n\t\t\t *下降时显示的颜色\r\n\t\t\t */\r\n\t\t\tfallColor: \"#c7c7c7\",\r\n\r\n\t\t\t//当前最末尾价格的tooltip设置\r\n\t\t\tcurrentPriceTooltip: {\r\n\t\t\t\tenabled: true,\r\n\t\t\t\tcolor: \"#b9b42c\",\r\n\t\t\t\tlineSize: 0.5,\r\n\t\t\t\tdashLength: 8,\r\n\t\t\t\tspaceLength: 3,\r\n\t\t\t\tlabel: {\r\n\t\t\t\t\tfontsize: 12,\r\n\t\t\t\t\tcolor: \"#ffffff\",\r\n\t\t\t\t\tbackGroundColor: \"#b9b42c\",\r\n\t\t\t\t\tbackGroundAlpha: 1,\r\n\t\t\t\t\tformatter: function (axisItem: tickItem | IToolTipItem, language: Tlanguage = \"en\") {\r\n\t\t\t\t\t\taxisItem = axisItem as IToolTipItem;\r\n\t\t\t\t\t\t//yyyy-MM-dd HH:mm:ss\r\n\t\t\t\t\t\treturn getUnitNumber(Number(axisItem.displayValue), language, 5);\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t//当前显示范围的最末尾的tooltip设置\r\n\t\t\tviewLastPriceTooltip: {\r\n\t\t\t\tenabled: true,\r\n\t\t\t\tcolor: \"#b9b42c\",\r\n\t\t\t\tlineSize: 0.5,\r\n\t\t\t\tdashLength: 8,\r\n\t\t\t\tspaceLength: 3,\r\n\t\t\t\tlabel: {\r\n\t\t\t\t\tfontsize: 12,\r\n\t\t\t\t\tcolor: \"#ffffff\",\r\n\t\t\t\t\tbackGroundColor: \"#826abe\",\r\n\t\t\t\t\tbackGroundAlpha: 0.5,\r\n\t\t\t\t\tformatter: function (axisItem: tickItem | IToolTipItem, language: Tlanguage = \"en\") {\r\n\t\t\t\t\t\taxisItem = axisItem as IToolTipItem;\r\n\t\t\t\t\t\t//yyyy-MM-dd HH:mm:ss\r\n\t\t\t\t\t\treturn getUnitNumber(Number(axisItem.displayValue), language, 5);\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n};\r\n\r\n/**\r\n *组件的初始值\r\n 初始值的定义和注释和可以去参看接口定义\r\n */\r\nexport const DEFAULTVALUES: IuseCandleView = {\r\n\ttitle: \"交易对:🚀BNB/USDT🚀这是CandleView组件示例V2⚡闪电版⚡\",\r\n\tenableTitle: true,\r\n\tenableinfo: true,\r\n\ttimeFormat: \"1h\",\r\n\twidth: \"auto\",\r\n\theight: \"500px\",\r\n\tbackgroundColor: \"#fff\",\r\n\tresizeDebounceTime: 100,\r\n\tlanguage: \"zh\",\r\n\ttimeZone: {\r\n\t\tdataSourceTimeZone: 0,\r\n\t\tfetchConditionTimeZone: 0,\r\n\t\tdisplayTimeZone: 0,\r\n\t},\r\n\tyAxis: {\r\n\t\tlabelSpace: \"90px\",\r\n\t\tformatter: function (axisItem: tickItem) {\r\n\t\t\treturn axisItem.displayValue!.toString();\r\n\t\t},\r\n\t\tfontColor: \"#454545\",\r\n\t\tfontSize: \"12px\",\r\n\t\tnetLineColor: \"#dedede\",\r\n\t\tlineColor: \"#454545\",\r\n\t\ttickColor: \"#454545\",\r\n\t\ttickLength: \"3px\",\r\n\t\tnetLineMaxCount: 14,\r\n\t\tnetLineMinCount: 3,\r\n\t\tdisplayPadding: 0.3,\r\n\t\ttooltip: {\r\n\t\t\tenabled: true,\r\n\t\t\tcolor: \"#02121c\",\r\n\t\t\tlineSize: 0.5,\r\n\t\t\tdashLength: 4,\r\n\t\t\tspaceLength: 3,\r\n\t\t\tlabel: {\r\n\t\t\t\tfontsize: 12,\r\n\t\t\t\tcolor: \"#ffffff\",\r\n\t\t\t\tbackGroundColor: \"#454545\",\r\n\t\t\t\tbackGroundAlpha: 1,\r\n\t\t\t\tformatter: function (axisItem: tickItem | IToolTipItem) {\r\n\t\t\t\t\taxisItem = axisItem as IToolTipItem;\r\n\t\t\t\t\t//yyyy-MM-dd HH:mm:ss\r\n\t\t\t\t\treturn axisItem.displayValue!;\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\txAxis: {\r\n\t\tlabelSpace: \"30px\",\r\n\t\tfontColor: \"#454545\",\r\n\t\tfontSize: \"12px\",\r\n\t\tnetLineColor: \"#dedede\",\r\n\t\tlineColor: \"#454545\",\r\n\t\ttickColor: \"#454545\",\r\n\t\ttickLength: \"4px\",\r\n\t\tnetLineMaxCount: 30,\r\n\t\tnetLineMinCount: 0,\r\n\t\tnetLineSize: 0.5,\r\n\t\tinitTimePoint: \"now\",\r\n\t\tdisplayPadding: 0,\r\n\t\ttooltip: {\r\n\t\t\tenabled: true,\r\n\t\t\tcolor: \"#02121c\",\r\n\t\t\tlineSize: 0.5,\r\n\t\t\tdashLength: 4,\r\n\t\t\tspaceLength: 3,\r\n\t\t\tlabel: {\r\n\t\t\t\tfontsize: 12,\r\n\t\t\t\tcolor: \"#ffffff\",\r\n\t\t\t\tbackGroundColor: \"#454545\",\r\n\t\t\t\tbackGroundAlpha: 1,\r\n\t\t\t\tformatter: function (axisItem: tickItem | IToolTipItem) {\r\n\t\t\t\t\t//yyyy-MM-dd HH:mm:ss\r\n\t\t\t\t\treturn formatDate(new Date(axisItem.value), \"yyyy-MM-dd HH:mm:ss\");\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tdata: DEFAULTDATAVALUES,\r\n};\r\n","export const LANGUAGES: any = {\r\n\tzh: {\r\n\t\ttimeFormat: {\r\n\t\t\ttoday: \"今天\",\r\n\t\t\tyesterday: \"昨天\",\r\n\t\t\tunitsecond: \"秒\",\r\n\t\t\tunitminute: \"分\",\r\n\t\t\tunithour: \"点\",\r\n\t\t\tunithalfOur: \"点半\",\r\n\t\t\tunitoclock: \"点整\",\r\n\t\t\tunitday: \"号\",\r\n\t\t\tunitdayst: \"号\",\r\n\t\t\tunitdaynd: \"号\",\r\n\t\t\tunitdayrd: \"号\",\r\n\t\t\tthisMonth: \"这个月\",\r\n\t\t\tnextMonth: \"上个月\",\r\n\t\t\tJanuary: \"一月份\",\r\n\t\t\tFebruary: \"二月份\",\r\n\t\t\tMarch: \"三月份\",\r\n\t\t\tApril: \"四月份\",\r\n\t\t\tMay: \"五月份\",\r\n\t\t\tJune: \"六月份\",\r\n\t\t\tJuly: \"七月份\",\r\n\t\t\tAugust: \"八月份\",\r\n\t\t\tSeptember: \"九月份\",\r\n\t\t\tOctober: \"十月份\",\r\n\t\t\tNovember: \"十一月份\",\r\n\t\t\tDecember: \"十二月份\",\r\n\t\t\tyear: \"年\",\r\n\t\t\tthisyear: \"今年\",\r\n\t\t\tlastyear: \"去年\",\r\n\t\t\toneMin: \"1分钟\",\r\n\t\t\ttwoMin: \"2分钟\",\r\n\t\t\tthreeMin: \"3分钟\",\r\n\t\t\tfiveMin: \"5分钟\",\r\n\t\t\ttenMin: \"10分钟\",\r\n\t\t\tfifteenMin: \"15分钟\",\r\n\t\t\thalfhour: \"半小时\",\r\n\t\t\toneHour: \"1小时\",\r\n\t\t\toneday: \"1天\",\r\n\t\t\toneWeek: \"1周\",\r\n\t\t\tonemonth: \"1个月\",\r\n\t\t\toneYear: \"1年\",\r\n\t\t},\r\n\t},\r\n\ten: {\r\n\t\ttimeFormat: {\r\n\t\t\ttoday: \"Today\",\r\n\t\t\tyesterday: \"Yesterday\",\r\n\t\t\tunitsecond: \"sec\",\r\n\t\t\tunitminute: \"min\",\r\n\t\t\tunithour: \"\",\r\n\t\t\tunithalfOur: \" O'clock past half\",\r\n\t\t\tunitoclock: \" O'clock\",\r\n\t\t\tunitday: \"th\",\r\n\t\t\tunitdayst: \"st\",\r\n\t\t\tunitdaynd: \"nd\",\r\n\t\t\tunitdayrd: \"rd\",\r\n\t\t\tthisMonth: \"This month\",\r\n\t\t\tnextMonth: \"Last month\",\r\n\t\t\tJanuary: \"Jan\",\r\n\t\t\tFebruary: \"Feb\",\r\n\t\t\tMarch: \"Mar\",\r\n\t\t\tApril: \"Apr\",\r\n\t\t\tMay: \"May\",\r\n\t\t\tJune: \"Jun\",\r\n\t\t\tJuly: \"Jul\",\r\n\t\t\tAugust: \"Aug\",\r\n\t\t\tSeptember: \"Sep\",\r\n\t\t\tOctober: \"Oct\",\r\n\t\t\tNovember: \"Nov\",\r\n\t\t\tDecember: \"Dec\",\r\n\t\t\tyear: \"\",\r\n\t\t\tthisyear: \"This year\",\r\n\t\t\tlastyear: \"Last year\",\r\n\t\t\toneMin: \"1 Minute\",\r\n\t\t\ttwoMin: \"2 Minute\",\r\n\t\t\tthreeMin: \"3 Minute\",\r\n\t\t\tfiveMin: \"5 Minute\",\r\n\t\t\ttenMin: \"10 Minute\",\r\n\t\t\tfifteenMin: \"15 Minute\",\r\n\t\t\thalfhour: \"Half Hour\",\r\n\t\t\toneHour: \"One Hour\",\r\n\t\t\toneday: \"One Day\",\r\n\t\t\toneWeek: \"One Week\",\r\n\t\t\tonemonth: \"One Month\",\r\n\t\t\toneYear: \"One Year\",\r\n\t\t},\r\n\t},\r\n};\r\n","import { findRoundTimeCountFromArrayDataItem, jsonObjectType } from \"../interface/itemsInterFace\";\r\nimport { ItimeFormat, TtimeType } from \"../interface/timeDefineInterFace\";\r\nimport { binarySearchByKeyStrictlyEqual, countSelectedElements } from \"./consts\";\r\nimport { LANGUAGES } from \"./languages\";\r\n\r\nexport const getshifttime = function (hourShift?: number | \"local\") {\r\n\tif (typeof hourShift === \"undefined\" || hourShift === 0) {\r\n\t\treturn 0;\r\n\t}\r\n\tlet date = new Date();\r\n\tlet localtimeZone = Math.abs(date.getTimezoneOffset() / 60);\r\n\tif (hourShift === \"local\") {\r\n\t\thourShift = localtimeZone;\r\n\t}\r\n\treturn 1000 * 60 * 60 * hourShift;\r\n};\r\n\r\n/**\r\n *1分钟\r\n */\r\nexport const ONEMIN: ItimeFormat = {\r\n\tname: \"1min\",\r\n\tlang: \"oneMin\",\r\n\ttimeGap: 1000 * 60,\r\n\t/* 取整 */\r\n\troundingFunction: function (timeStamp, hourShift) {\r\n\t\t// 获取当前时间\r\n\t\tconst now = new Date(timeStamp);\r\n\t\t// 求整\r\n\t\tnow.setSeconds(0);\r\n\t\tnow.setMilliseconds(0);\r\n\t\t// 获取当前整小时的时间戳（毫秒）\r\n\t\tlet result = now.getTime();\r\n\t\treturn result;\r\n\t},\r\n\t/* 往未来查找一个单位 */\r\n\tforwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 加15分钟\r\n\t\tdate.setMinutes(date.getMinutes() + 1);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往过去查找一个单位 */\r\n\tbackwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\t\t// 减15分钟\r\n\t\tdate.setMinutes(date.getMinutes() - 1);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往未来查找n个单位 */\r\n\tforwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 加15分钟\r\n\t\tdate.setMinutes(date.getMinutes() + 1 * times);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往过去查找n个单位 */\r\n\tbackwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\t\t// 减15分钟\r\n\t\tdate.setMinutes(date.getMinutes() - 1 * times);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\r\n\t/* 获得初始化的时间范围 */\r\n\tgetInitTimeScope: function (initTime: string) {\r\n\t\tif (initTime === \"now\") {\r\n\t\t\treturn { start: +new Date() - 1000 * 60 * 20, end: +new Date() + 1000 * 60 * 10 };\r\n\t\t} else {\r\n\t\t\treturn { start: +new Date(initTime) - 1000 * 60 * 20, end: +new Date(initTime) + 1000 * 60 * 10 };\r\n\t\t}\r\n\t},\r\n\tformatter: function (value, lan, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(value);\r\n\t\t//date.setHours(date.getHours() + plusTimeArea);\r\n\r\n\t\treturn date.getMinutes() + LANGUAGES[lan]!.timeFormat.unitminute;\r\n\t},\r\n};\r\n\r\n/**\r\n *2分钟\r\n */\r\nexport const TWO: ItimeFormat = {\r\n\tname: \"2min\",\r\n\tlang: \"twoMin\",\r\n\ttimeGap: 1000 * 60 * 2,\r\n\t/* 取整 */\r\n\troundingFunction: function (timeStamp, hourShift) {\r\n\t\t// 获取当前时间\r\n\t\tconst now = new Date(timeStamp);\r\n\r\n\t\tfor (let time = 0; time < 60; time += 2) {\r\n\t\t\tif (now.getMinutes() >= time) {\r\n\t\t\t\tnow.setMinutes(time);\r\n\t\t\t}\r\n\t\t}\r\n\t\tnow.setSeconds(0);\r\n\t\tnow.setMilliseconds(0);\r\n\t\t// 获取当前整小时的时间戳（毫秒）\r\n\t\tlet result = now.getTime();\r\n\t\treturn result;\r\n\t},\r\n\t/* 往未来查找一个单位 */\r\n\tforwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 加15分钟\r\n\t\tdate.setMinutes(date.getMinutes() + 2);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往过去查找一个单位 */\r\n\tbackwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\t\t// 减15分钟\r\n\t\tdate.setMinutes(date.getMinutes() - 2);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往未来查找n个单位 */\r\n\tforwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 加15分钟\r\n\t\tdate.setMinutes(date.getMinutes() + 2 * times);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往过去查找n个单位 */\r\n\tbackwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\t\t// 减15分钟\r\n\t\tdate.setMinutes(date.getMinutes() - 2 * times);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\r\n\t/* 获得初始化的时间范围 */\r\n\tgetInitTimeScope: function (initTime: string) {\r\n\t\tif (initTime === \"now\") {\r\n\t\t\treturn { start: +new Date() - 1000 * 60 * 2 * 2, end: +new Date() + 1000 * 60 * 10 * 2 };\r\n\t\t} else {\r\n\t\t\treturn { start: +new Date(initTime) - 1000 * 60 * 20 * 2, end: +new Date(initTime) + 1000 * 60 * 10 * 2 };\r\n\t\t}\r\n\t},\r\n\tformatter: function (value, lan, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(value);\r\n\t\t//date.setHours(date.getHours() + plusTimeArea);\r\n\r\n\t\treturn date.getMinutes() + LANGUAGES[lan]!.timeFormat.unitminute;\r\n\t},\r\n};\r\n\r\n/**\r\n *3分钟\r\n */\r\nexport const THREE: ItimeFormat = {\r\n\tname: \"3min\",\r\n\tlang: \"threeMin\",\r\n\ttimeGap: 1000 * 60 * 3,\r\n\t/* 取整 */\r\n\troundingFunction: function (timeStamp, hourShift) {\r\n\t\t// 获取当前时间\r\n\t\tconst now = new Date(timeStamp);\r\n\r\n\t\tfor (let time = 0; time < 60; time += 3) {\r\n\t\t\tif (now.getMinutes() >= time) {\r\n\t\t\t\tnow.setMinutes(time);\r\n\t\t\t}\r\n\t\t}\r\n\t\tnow.setSeconds(0);\r\n\t\tnow.setMilliseconds(0);\r\n\t\t// 获取当前整小时的时间戳（毫秒）\r\n\t\tlet result = now.getTime();\r\n\t\treturn result;\r\n\t},\r\n\t/* 往未来查找一个单位 */\r\n\tforwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 加15分钟\r\n\t\tdate.setMinutes(date.getMinutes() + 3);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往过去查找一个单位 */\r\n\tbackwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\t\t// 减15分钟\r\n\t\tdate.setMinutes(date.getMinutes() - 3);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往未来查找n个单位 */\r\n\tforwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 加15分钟\r\n\t\tdate.setMinutes(date.getMinutes() + 3 * times);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往过去查找n个单位 */\r\n\tbackwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\t\t// 减15分钟\r\n\t\tdate.setMinutes(date.getMinutes() - 3 * times);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\r\n\t/* 获得初始化的时间范围 */\r\n\tgetInitTimeScope: function (initTime: string) {\r\n\t\tif (initTime === \"now\") {\r\n\t\t\treturn { start: +new Date() - 1000 * 60 * 2 * 3, end: +new Date() + 1000 * 60 * 10 * 3 };\r\n\t\t} else {\r\n\t\t\treturn { start: +new Date(initTime) - 1000 * 60 * 20 * 3, end: +new Date(initTime) + 1000 * 60 * 10 * 3 };\r\n\t\t}\r\n\t},\r\n\tformatter: function (value, lan, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(value);\r\n\t\t//date.setHours(date.getHours() + plusTimeArea);\r\n\r\n\t\treturn date.getMinutes() + LANGUAGES[lan]!.timeFormat.unitminute;\r\n\t},\r\n};\r\n\r\n/**\r\n *5分钟\r\n */\r\nexport const FMIN: ItimeFormat = {\r\n\tname: \"5min\",\r\n\tlang: \"fiveMin\",\r\n\ttimeGap: 1000 * 60 * 5,\r\n\t/* 取整 */\r\n\troundingFunction: function (timeStamp, hourShift) {\r\n\t\t// 获取当前时间\r\n\t\tconst now = new Date(timeStamp);\r\n\t\t// 求整\r\n\t\tif (now.getMinutes() >= 55) {\r\n\t\t\tnow.setMinutes(55);\r\n\t\t} else if (now.getMinutes() >= 50) {\r\n\t\t\tnow.setMinutes(50);\r\n\t\t} else if (now.getMinutes() >= 45) {\r\n\t\t\tnow.setMinutes(45);\r\n\t\t} else if (now.getMinutes() >= 40) {\r\n\t\t\tnow.setMinutes(40);\r\n\t\t} else if (now.getMinutes() >= 35) {\r\n\t\t\tnow.setMinutes(35);\r\n\t\t} else if (now.getMinutes() >= 30) {\r\n\t\t\tnow.setMinutes(30);\r\n\t\t} else if (now.getMinutes() >= 25) {\r\n\t\t\tnow.setMinutes(25);\r\n\t\t} else if (now.getMinutes() >= 20) {\r\n\t\t\tnow.setMinutes(20);\r\n\t\t} else if (now.getMinutes() >= 15) {\r\n\t\t\tnow.setMinutes(15);\r\n\t\t} else if (now.getMinutes() >= 10) {\r\n\t\t\tnow.setMinutes(10);\r\n\t\t} else if (now.getMinutes() >= 5) {\r\n\t\t\tnow.setMinutes(5);\r\n\t\t} else if (now.getMinutes() >= 0) {\r\n\t\t\tnow.setMinutes(0);\r\n\t\t}\r\n\t\tnow.setSeconds(0);\r\n\t\tnow.setMilliseconds(0);\r\n\t\t// 获取当前整小时的时间戳（毫秒）\r\n\t\tlet result = now.getTime();\r\n\t\treturn result;\r\n\t},\r\n\t/* 往未来查找一个单位 */\r\n\tforwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 加15分钟\r\n\t\tdate.setMinutes(date.getMinutes() + 5);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往过去查找一个单位 */\r\n\tbackwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\t\t// 减15分钟\r\n\t\tdate.setMinutes(date.getMinutes() - 5);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往未来查找n个单位 */\r\n\tforwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 加15分钟\r\n\t\tdate.setMinutes(date.getMinutes() + 5 * times);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往过去查找n个单位 */\r\n\tbackwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\t\t// 减15分钟\r\n\t\tdate.setMinutes(date.getMinutes() - 5 * times);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\r\n\t/* 获得初始化的时间范围 */\r\n\tgetInitTimeScope: function (initTime: string) {\r\n\t\tif (initTime === \"now\") {\r\n\t\t\treturn { start: +new Date() - 1000 * 60 * 2 * 5, end: +new Date() + 1000 * 60 * 10 * 5 };\r\n\t\t} else {\r\n\t\t\treturn { start: +new Date(initTime) - 1000 * 60 * 20 * 5, end: +new Date(initTime) + 1000 * 60 * 10 * 5 };\r\n\t\t}\r\n\t},\r\n\tformatter: function (value, lan, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(value);\r\n\t\t//date.setHours(date.getHours() + plusTimeArea);\r\n\r\n\t\treturn date.getMinutes() + LANGUAGES[lan]!.timeFormat.unitminute;\r\n\t},\r\n};\r\n\r\n/**\r\n *10分钟\r\n */\r\nexport const TENMIN: ItimeFormat = {\r\n\tname: \"10min\",\r\n\tlang: \"tenMin\",\r\n\ttimeGap: 1000 * 60 * 10,\r\n\t/* 取整 */\r\n\troundingFunction: function (timeStamp, hourShift) {\r\n\t\t// 获取当前时间\r\n\t\tconst now = new Date(timeStamp);\r\n\t\t// 求整\r\n\t\tif (now.getMinutes() >= 50) {\r\n\t\t\tnow.setMinutes(50);\r\n\t\t} else if (now.getMinutes() >= 40) {\r\n\t\t\tnow.setMinutes(40);\r\n\t\t} else if (now.getMinutes() >= 30) {\r\n\t\t\tnow.setMinutes(30);\r\n\t\t} else if (now.getMinutes() >= 20) {\r\n\t\t\tnow.setMinutes(20);\r\n\t\t} else if (now.getMinutes() >= 10) {\r\n\t\t\tnow.setMinutes(10);\r\n\t\t} else if (now.getMinutes() >= 0) {\r\n\t\t\tnow.setMinutes(0);\r\n\t\t}\r\n\t\tnow.setSeconds(0);\r\n\t\tnow.setMilliseconds(0);\r\n\t\t// 获取当前整小时的时间戳（毫秒）\r\n\t\tlet result = now.getTime();\r\n\t\treturn result;\r\n\t},\r\n\t/* 往未来查找一个单位 */\r\n\tforwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 加15分钟\r\n\t\tdate.setMinutes(date.getMinutes() + 10);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往过去查找一个单位 */\r\n\tbackwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\t\t// 减15分钟\r\n\t\tdate.setMinutes(date.getMinutes() - 10);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往未来查找n个单位 */\r\n\tforwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 加15分钟\r\n\t\tdate.setMinutes(date.getMinutes() + 10 * times);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往过去查找n个单位 */\r\n\tbackwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\t\t// 减15分钟\r\n\t\tdate.setMinutes(date.getMinutes() - 10 * times);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\r\n\t/* 获得初始化的时间范围 */\r\n\tgetInitTimeScope: function (initTime: string) {\r\n\t\tif (initTime === \"now\") {\r\n\t\t\treturn { start: +new Date() - 1000 * 60 * 2 * 10, end: +new Date() + 1000 * 60 * 10 * 10 };\r\n\t\t} else {\r\n\t\t\treturn { start: +new Date(initTime) - 1000 * 60 * 20 * 10, end: +new Date(initTime) + 1000 * 60 * 10 * 10 };\r\n\t\t}\r\n\t},\r\n\tformatter: function (value, lan, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(value);\r\n\t\t//date.setHours(date.getHours() + plusTimeArea);\r\n\r\n\t\treturn date.getMinutes() + LANGUAGES[lan]!.timeFormat.unitminute;\r\n\t},\r\n};\r\n\r\n/**\r\n *15分钟\r\n */\r\nexport const FIFMIN: ItimeFormat = {\r\n\tname: \"15min\",\r\n\tlang: \"fifteenMin\",\r\n\ttimeGap: 1000 * 60 * 15,\r\n\t/* 取整 */\r\n\troundingFunction: function (timeStamp, hourShift) {\r\n\t\t// 获取当前时间\r\n\t\tconst now = new Date(timeStamp);\r\n\t\t// 求整\r\n\t\tif (now.getMinutes() >= 45) {\r\n\t\t\tnow.setMinutes(45);\r\n\t\t} else if (now.getMinutes() >= 30) {\r\n\t\t\tnow.setMinutes(30);\r\n\t\t} else if (now.getMinutes() >= 15) {\r\n\t\t\tnow.setMinutes(15);\r\n\t\t} else if (now.getMinutes() >= 0) {\r\n\t\t\tnow.setMinutes(0);\r\n\t\t}\r\n\t\tnow.setSeconds(0);\r\n\t\tnow.setMilliseconds(0);\r\n\t\t// 获取当前整小时的时间戳（毫秒）\r\n\t\tlet result = now.getTime();\r\n\t\treturn result;\r\n\t},\r\n\t/* 往未来查找一个单位 */\r\n\tforwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 加15分钟\r\n\t\tdate.setMinutes(date.getMinutes() + 15);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往过去查找一个单位 */\r\n\tbackwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\t\t// 减15分钟\r\n\t\tdate.setMinutes(date.getMinutes() - 15);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往未来查找n个单位 */\r\n\tforwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 加15分钟\r\n\t\tdate.setMinutes(date.getMinutes() + 15 * times);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往过去查找n个单位 */\r\n\tbackwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\t\t// 减15分钟\r\n\t\tdate.setMinutes(date.getMinutes() - 15 * times);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 获得初始化的时间范围 */\r\n\tgetInitTimeScope: function (initTime: string) {\r\n\t\tif (initTime === \"now\") {\r\n\t\t\treturn { start: +new Date() - 1000 * 60 * 15 * 18, end: +new Date() + 1000 * 60 * 15 * 6 };\r\n\t\t} else {\r\n\t\t\treturn { start: +new Date(initTime) - 1000 * 60 * 15 * 18, end: +new Date(initTime) + 1000 * 60 * 15 * 6 };\r\n\t\t}\r\n\t},\r\n\tformatter: function (value, lan, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(value);\r\n\t\t//date.setHours(date.getHours() + plusTimeArea);\r\n\r\n\t\treturn date.getMinutes() + LANGUAGES[lan]!.timeFormat.unitminute;\r\n\t},\r\n};\r\n\r\n/**\r\n *30分钟\r\n */\r\nexport const HALFHOUR: ItimeFormat = {\r\n\tname: \"30min\",\r\n\tlang: \"halfhour\",\r\n\ttimeGap: 1000 * 60 * 30,\r\n\t/* 取整 */\r\n\troundingFunction: function (timeStamp, hourShift) {\r\n\t\t// 获取当前时间\r\n\t\tconst now = new Date(timeStamp);\r\n\t\t// 设置分钟和秒数为0\r\n\t\tif (now.getMinutes() > 30) {\r\n\t\t\tnow.setMinutes(30);\r\n\t\t} else {\r\n\t\t\tnow.setMinutes(0);\r\n\t\t}\r\n\t\tnow.setSeconds(0);\r\n\t\tnow.setMilliseconds(0);\r\n\t\t// 获取当前整小时的时间戳（毫秒）\r\n\t\tlet result = now.getTime();\r\n\t\treturn result;\r\n\t},\r\n\t/* 往未来查找一个单位 */\r\n\tforwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 加半小时\r\n\t\tdate.setMinutes(date.getMinutes() + 30);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往过去查找一个单位 */\r\n\tbackwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\t\t// 减半小时\r\n\t\tdate.setMinutes(date.getMinutes() - 30);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往未来查找n个单位 */\r\n\tforwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 加半小时\r\n\t\tdate.setMinutes(date.getMinutes() + 30 * times);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往过去查找n个单位 */\r\n\tbackwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\t\t// 减半小时\r\n\t\tdate.setMinutes(date.getMinutes() - 30 * times);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 获得初始化的时间范围 */\r\n\tgetInitTimeScope: function (initTime: string) {\r\n\t\tif (initTime === \"now\") {\r\n\t\t\treturn { start: +new Date() - 1000 * 60 * 30 * 18, end: +new Date() + 1000 * 60 * 30 * 6 };\r\n\t\t} else {\r\n\t\t\treturn { start: +new Date(initTime) - 1000 * 60 * 30 * 18, end: +new Date(initTime) + 1000 * 60 * 30 * 6 };\r\n\t\t}\r\n\t},\r\n\tformatter: function (value, lan, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(value);\r\n\t\t//date.setHours(date.getHours() + plusTimeArea);\r\n\r\n\t\tif (date.getMinutes() === 30) {\r\n\t\t\treturn date.getHours() + LANGUAGES[lan]!.timeFormat.unithalfOur;\r\n\t\t}\r\n\r\n\t\treturn date.getHours() + LANGUAGES[lan]!.timeFormat.unitoclock;\r\n\t},\r\n};\r\n\r\n/**\r\n *x小时\r\n */\r\nexport const HOUR: ItimeFormat = {\r\n\tname: \"1h\",\r\n\tlang: \"oneHour\",\r\n\ttimeGap: 1000 * 60 * 60,\r\n\t/* 取整 */\r\n\troundingFunction: function (timeStamp, hourShift) {\r\n\t\t// 获取当前时间\r\n\t\tconst now = new Date(timeStamp);\r\n\r\n\t\t// 设置分钟和秒数为0\r\n\t\tnow.setMinutes(0);\r\n\t\tnow.setSeconds(0);\r\n\t\tnow.setMilliseconds(0);\r\n\t\t// 获取当前整小时的时间戳（毫秒）\r\n\t\tlet result = now.getTime();\r\n\t\treturn result;\r\n\t},\r\n\t/* 往未来查找一个单位 */\r\n\tforwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\t\t// 减去一个小时的毫秒数\r\n\t\tdate.setHours(date.getHours() + 1);\r\n\r\n\t\t// 设置分钟和秒数为0\r\n\t\tdate.setMinutes(0);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往过去查找一个单位 */\r\n\tbackwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\t\t// 减去一个小时的毫秒数\r\n\t\tdate.setHours(date.getHours() - 1);\r\n\r\n\t\t// 设置分钟和秒数为0\r\n\t\tdate.setMinutes(0);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往未来查找n个单位 */\r\n\tforwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\t\t// 减去一个小时的毫秒数\r\n\t\tdate.setHours(date.getHours() + 1 * times);\r\n\r\n\t\t// 设置分钟和秒数为0\r\n\t\tdate.setMinutes(0);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往过去查找n个单位 */\r\n\tbackwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\t\t// 减去一个小时的毫秒数\r\n\t\tdate.setHours(date.getHours() - 1 * times);\r\n\r\n\t\t// 设置分钟和秒数为0\r\n\t\tdate.setMinutes(0);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 获得初始化的时间范围 */\r\n\tgetInitTimeScope: function (initTime: string) {\r\n\t\tif (initTime === \"now\") {\r\n\t\t\treturn { start: +new Date() - 1000 * 60 * 60 * 18, end: +new Date() + 1000 * 60 * 60 * 6 };\r\n\t\t} else {\r\n\t\t\treturn { start: +new Date(initTime) - 1000 * 60 * 60 * 18, end: +new Date(initTime) + 1000 * 60 * 60 * 6 };\r\n\t\t}\r\n\t},\r\n\tformatter: function (value, lan, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(value);\r\n\t\t//date.setHours(date.getHours() + plusTimeArea);\r\n\r\n\t\treturn date.getHours() + LANGUAGES[lan]!.timeFormat.unithour;\r\n\t},\r\n};\r\n\r\n/**\r\n *天\r\n */\r\nexport const DAY: ItimeFormat = {\r\n\tname: \"1d\",\r\n\tlang: \"oneday\",\r\n\ttimeGap: 1000 * 60 * 60 * 24,\r\n\troundingFunction: function (timeStamp, hourShift) {\r\n\t\t// 获取当前时间\r\n\t\tconst now = new Date(timeStamp);\r\n\r\n\t\t// 设置分钟和秒数为0\r\n\t\tnow.setHours(0);\r\n\t\tnow.setMinutes(0);\r\n\t\tnow.setSeconds(0);\r\n\t\tnow.setMilliseconds(0);\r\n\t\t// 获取当前整小时的时间戳（毫秒）\r\n\t\tlet result = now.getTime() + getshifttime(hourShift);\r\n\t\treturn result;\r\n\t},\r\n\tforwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 获取当前时间\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 设置分钟和秒数为0\r\n\t\tdate.setDate(date.getDate() + 1);\r\n\t\tdate.setHours(0);\r\n\t\tdate.setMinutes(0);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\t\t// 获取当前整小时的时间戳（毫秒）\r\n\t\tlet result = date.getTime() + getshifttime(hourShift);\r\n\t\treturn result;\r\n\t},\r\n\tbackwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 获取当前时间\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 设置分钟和秒数为0\r\n\t\tdate.setDate(date.getDate() - 1);\r\n\t\tdate.setHours(0);\r\n\t\tdate.setMinutes(0);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\t\t// 获取当前整小时的时间戳（毫秒）\r\n\t\tlet result = date.getTime() + getshifttime(hourShift);\r\n\t\treturn result;\r\n\t},\r\n\t/* 往未来查找n个单位 */\r\n\tforwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 获取当前时间\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 设置分钟和秒数为0\r\n\t\tdate.setDate(date.getDate() + 1 * times);\r\n\t\tdate.setHours(0);\r\n\t\tdate.setMinutes(0);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\t\t// 获取当前整小时的时间戳（毫秒）\r\n\t\tlet result = date.getTime() + getshifttime(hourShift);\r\n\t\treturn result;\r\n\t},\r\n\t/* 往过去查找n个单位 */\r\n\tbackwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 获取当前时间\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 设置分钟和秒数为0\r\n\t\tdate.setDate(date.getDate() - 1 * times);\r\n\t\tdate.setHours(0);\r\n\t\tdate.setMinutes(0);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\t\t// 获取当前整小时的时间戳（毫秒）\r\n\t\tlet result = date.getTime() + getshifttime(hourShift);\r\n\t\treturn result;\r\n\t},\r\n\tgetInitTimeScope: function (initTime: string) {\r\n\t\tif (initTime === \"now\") {\r\n\t\t\treturn { start: +new Date() - 1000 * 60 * 60 * 24 * 20, end: +new Date() + 1000 * 60 * 60 * 24 * 10 };\r\n\t\t} else {\r\n\t\t\treturn {\r\n\t\t\t\tstart: +new Date(initTime) - 1000 * 60 * 60 * 24 * 20,\r\n\t\t\t\tend: +new Date(initTime) + 1000 * 60 * 60 * 24 * 10,\r\n\t\t\t};\r\n\t\t}\r\n\t},\r\n\tformatter: function (value, lan, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(value);\r\n\t\t//date.setHours(date.getHours() + plusTimeArea);\r\n\r\n\t\tif (date.getDate() === 1) {\r\n\t\t\treturn date.getDate() + LANGUAGES[lan]!.timeFormat.unitdayst;\r\n\t\t}\r\n\t\tif (date.getDate() === 2) {\r\n\t\t\treturn date.getDate() + LANGUAGES[lan]!.timeFormat.unitdaynd;\r\n\t\t}\r\n\t\tif (date.getDate() === 3) {\r\n\t\t\treturn date.getDate() + LANGUAGES[lan]!.timeFormat.unitdayrd;\r\n\t\t}\r\n\t\treturn date.getDate() + LANGUAGES[lan]!.timeFormat.unitday;\r\n\t},\r\n};\r\n\r\n/**\r\n *周\r\n */\r\nexport const WEEK: ItimeFormat = {\r\n\tname: \"1w\",\r\n\tlang: \"oneWeek\",\r\n\ttimeGap: 1000 * 60 * 60 * 24 * 7,\r\n\troundingFunction: function (timeStamp, hourShift) {\r\n\t\tconst today = new Date(timeStamp);\r\n\t\tconst currentDay = today.getDay(); // 获取今天是周几（0-6，0代表周日）\r\n\t\tconst offsetDays = currentDay === 0 ? -6 : 1 - currentDay; // 计算偏移天数，如果周日则减6天，其他情况加1减去当前天数\r\n\t\tconst monday = new Date(today.setDate(today.getDate() + offsetDays));\r\n\t\treturn monday.getTime() + getshifttime(hourShift);\r\n\t},\r\n\tforwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 将时间戳转换为Date对象\r\n\t\tconst date = new Date(timeStamp); // 注意：JavaScript时间戳是毫秒级，所以乘以1000\r\n\r\n\t\t// 设置日期到下周一\r\n\t\tdate.setDate(date.getDate() + 7);\r\n\t\t// 设置时间为下周一的凌晨0点\r\n\t\tdate.setHours(0, 0, 0, 0);\r\n\t\t// 返回下周一时间戳（转换回秒级时间戳）\r\n\t\treturn Math.floor(date.getTime()) + getshifttime(hourShift);\r\n\t},\r\n\tbackwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 将时间戳转换为Date对象\r\n\t\tconst date = new Date(timeStamp); // 注意：JavaScript时间戳是毫秒级，所以乘以1000\r\n\r\n\t\t// 设置日期到上周一\r\n\t\tdate.setDate(date.getDate() - 7);\r\n\t\t// 设置时间为上周一的凌晨0点\r\n\t\tdate.setHours(0, 0, 0, 0);\r\n\t\t// 返回上周一时间戳（转换回秒级时间戳）\r\n\t\treturn Math.floor(date.getTime()) + getshifttime(hourShift);\r\n\t},\r\n\t/* 往未来查找n个单位 */\r\n\tforwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 将时间戳转换为Date对象\r\n\t\tconst date = new Date(timeStamp); // 注意：JavaScript时间戳是毫秒级，所以乘以1000\r\n\r\n\t\t// 设置日期到下周一\r\n\t\tdate.setDate(date.getDate() + 7 * times);\r\n\t\t// 设置时间为下周一的凌晨0点\r\n\t\tdate.setHours(0, 0, 0, 0);\r\n\t\t// 返回下周一时间戳（转换回秒级时间戳）\r\n\t\treturn Math.floor(date.getTime()) + getshifttime(hourShift);\r\n\t},\r\n\t/* 往过去查找n个单位 */\r\n\tbackwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 将时间戳转换为Date对象\r\n\t\tconst date = new Date(timeStamp); // 注意：JavaScript时间戳是毫秒级，所以乘以1000\r\n\r\n\t\t// 设置日期到上周一\r\n\t\tdate.setDate(date.getDate() - 7 * times);\r\n\t\t// 设置时间为上周一的凌晨0点\r\n\t\tdate.setHours(0, 0, 0, 0);\r\n\t\t// 返回上周一时间戳（转换回秒级时间戳）\r\n\t\treturn Math.floor(date.getTime()) + getshifttime(hourShift);\r\n\t},\r\n\tgetInitTimeScope: function (initTime: string) {\r\n\t\tif (initTime === \"now\") {\r\n\t\t\treturn { start: +new Date() - 1000 * 60 * 60 * 24 * 7 * 5, end: +new Date() + 1000 * 60 * 60 * 24 * 7 * 5 };\r\n\t\t} else {\r\n\t\t\treturn {\r\n\t\t\t\tstart: +new Date(initTime) - 1000 * 60 * 60 * 24 * 7 * 5,\r\n\t\t\t\tend: +new Date(initTime) + 1000 * 60 * 60 * 24 * 7 * 5,\r\n\t\t\t};\r\n\t\t}\r\n\t},\r\n\tformatter: function (value, lan, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(value);\r\n\r\n\t\tif (date.getDate() === 1) {\r\n\t\t\treturn date.getDate() + LANGUAGES[lan]!.timeFormat.unitdayst;\r\n\t\t}\r\n\t\tif (date.getDate() === 2) {\r\n\t\t\treturn date.getDate() + LANGUAGES[lan]!.timeFormat.unitdaynd;\r\n\t\t}\r\n\t\tif (date.getDate() === 3) {\r\n\t\t\treturn date.getDate() + LANGUAGES[lan]!.timeFormat.unitdayrd;\r\n\t\t}\r\n\t\treturn date.getDate() + LANGUAGES[lan]!.timeFormat.unitday;\r\n\t},\r\n};\r\n\r\n/**\r\n *月\r\n */\r\nexport const MONTH: ItimeFormat = {\r\n\tname: \"1m\",\r\n\tlang: \"onemonth\",\r\n\ttimeGap: 1000 * 60 * 60 * 24 * 30,\r\n\troundingFunction: function (timeStamp, hourShift) {\r\n\t\t// 获取当前时间\r\n\t\tconst now = new Date(timeStamp);\r\n\r\n\t\t// 设置日期为1\r\n\t\tnow.setDate(1);\r\n\t\tnow.setHours(0);\r\n\t\tnow.setMinutes(0);\r\n\t\tnow.setSeconds(0);\r\n\t\tnow.setMilliseconds(0);\r\n\t\t// 获取当前整小时的时间戳（毫秒）\r\n\t\tlet result = now.getTime() + getshifttime(hourShift);\r\n\t\treturn result;\r\n\t},\r\n\tforwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 获取当前时间\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 设置分钟和秒数为0\r\n\t\tdate.setMonth(date.getMonth() + 1);\r\n\t\tdate.setDate(1);\r\n\t\tdate.setHours(0);\r\n\t\tdate.setMinutes(0);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 获取当前整小时的时间戳（毫秒）\r\n\t\tlet result = date.getTime() + getshifttime(hourShift);\r\n\t\treturn result;\r\n\t},\r\n\tbackwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 获取当前时间\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 设置分钟和秒数为0\r\n\t\tdate.setMonth(date.getMonth() - 1);\r\n\t\tdate.setDate(1);\r\n\t\tdate.setHours(0);\r\n\t\tdate.setMinutes(0);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\t\t// 获取当前整小时的时间戳（毫秒）\r\n\t\tlet result = date.getTime() + getshifttime(hourShift);\r\n\t\treturn result;\r\n\t},\r\n\t/* 往未来查找n个单位 */\r\n\tforwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 获取当前时间\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 设置分钟和秒数为0\r\n\t\tdate.setMonth(date.getMonth() + 1 * times);\r\n\t\tdate.setDate(1);\r\n\t\tdate.setHours(0);\r\n\t\tdate.setMinutes(0);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 获取当前整小时的时间戳（毫秒）\r\n\t\tlet result = date.getTime() + getshifttime(hourShift);\r\n\t\treturn result;\r\n\t},\r\n\t/* 往过去查找n个单位 */\r\n\tbackwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 获取当前时间\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 设置分钟和秒数为0\r\n\t\tdate.setMonth(date.getMonth() - 1 * times);\r\n\t\tdate.setDate(1);\r\n\t\tdate.setHours(0);\r\n\t\tdate.setMinutes(0);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\t\t// 获取当前整小时的时间戳（毫秒）\r\n\t\tlet result = date.getTime() + getshifttime(hourShift);\r\n\t\treturn result;\r\n\t},\r\n\tgetInitTimeScope: function (initTime: string) {\r\n\t\tif (initTime === \"now\") {\r\n\t\t\treturn {\r\n\t\t\t\tstart: +new Date() - 1000 * 60 * 60 * 24 * 30 * 8,\r\n\t\t\t\tend: +new Date() + 1000 * 60 * 60 * 24 * 30 * 4,\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\treturn {\r\n\t\t\t\tstart: +new Date(initTime) - 1000 * 60 * 60 * 24 * 30 * 8,\r\n\t\t\t\tend: +new Date(initTime) + 1000 * 60 * 60 * 24 * 30 * 4,\r\n\t\t\t};\r\n\t\t}\r\n\t},\r\n\tformatter: function (value, lan, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(value);\r\n\r\n\t\tswitch (date.getMonth()) {\r\n\t\t\tcase 0:\r\n\t\t\t\treturn LANGUAGES[lan]!.timeFormat.January;\r\n\t\t\tcase 1:\r\n\t\t\t\treturn LANGUAGES[lan]!.timeFormat.February;\r\n\t\t\tcase 2:\r\n\t\t\t\treturn LANGUAGES[lan]!.timeFormat.March;\r\n\t\t\tcase 3:\r\n\t\t\t\treturn LANGUAGES[lan]!.timeFormat.April;\r\n\t\t\tcase 4:\r\n\t\t\t\treturn LANGUAGES[lan]!.timeFormat.May;\r\n\t\t\tcase 5:\r\n\t\t\t\treturn LANGUAGES[lan]!.timeFormat.June;\r\n\t\t\tcase 6:\r\n\t\t\t\treturn LANGUAGES[lan]!.timeFormat.July;\r\n\t\t\tcase 7:\r\n\t\t\t\treturn LANGUAGES[lan]!.timeFormat.August;\r\n\t\t\tcase 8:\r\n\t\t\t\treturn LANGUAGES[lan]!.timeFormat.September;\r\n\t\t\tcase 9:\r\n\t\t\t\treturn LANGUAGES[lan]!.timeFormat.October;\r\n\t\t\tcase 10:\r\n\t\t\t\treturn LANGUAGES[lan]!.timeFormat.November;\r\n\t\t\tcase 11:\r\n\t\t\t\treturn LANGUAGES[lan]!.timeFormat.December;\r\n\t\t}\r\n\t},\r\n};\r\n\r\n/**\r\n *年\r\n */\r\nexport const YEAR: ItimeFormat = {\r\n\tname: \"1y\",\r\n\tlang: \"oneYear\",\r\n\ttimeGap: 1000 * 60 * 60 * 24 * 30 * 12,\r\n\troundingFunction: function (timeStamp, hourShift) {\r\n\t\t// 获取当前时间\r\n\t\tconst now = new Date(timeStamp);\r\n\r\n\t\t// 设置日期为1\r\n\t\tnow.setMonth(0);\r\n\t\tnow.setDate(1);\r\n\t\tnow.setHours(0);\r\n\t\tnow.setMinutes(0);\r\n\t\tnow.setSeconds(0);\r\n\t\tnow.setMilliseconds(0);\r\n\t\t// 获取当前整小时的时间戳（毫秒）\r\n\t\tlet result = now.getTime() + getshifttime(hourShift);\r\n\t\treturn result;\r\n\t},\r\n\tforwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 获取当前时间\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 设置分钟和秒数为0\r\n\t\tdate.setFullYear(date.getFullYear() + 1);\r\n\t\tdate.setMonth(0);\r\n\t\tdate.setDate(1);\r\n\t\tdate.setHours(0);\r\n\t\tdate.setMinutes(0);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 获取当前整小时的时间戳（毫秒）\r\n\t\tlet result = date.getTime() + getshifttime(hourShift);\r\n\t\treturn result;\r\n\t},\r\n\tbackwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 获取当前时间\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 设置分钟和秒数为0\r\n\t\tdate.setFullYear(date.getFullYear() - 1);\r\n\t\tdate.setMonth(0);\r\n\t\tdate.setDate(1);\r\n\t\tdate.setHours(0);\r\n\t\tdate.setMinutes(0);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 获取当前整小时的时间戳（毫秒）\r\n\t\tlet result = date.getTime() + getshifttime(hourShift);\r\n\t\treturn result;\r\n\t},\r\n\t/* 往未来查找n个单位 */\r\n\tforwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 获取当前时间\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 设置分钟和秒数为0\r\n\t\tdate.setFullYear(date.getFullYear() + 1 * times);\r\n\t\tdate.setMonth(0);\r\n\t\tdate.setDate(1);\r\n\t\tdate.setHours(0);\r\n\t\tdate.setMinutes(0);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 获取当前整小时的时间戳（毫秒）\r\n\t\tlet result = date.getTime() + getshifttime(hourShift);\r\n\t\treturn result;\r\n\t},\r\n\t/* 往过去查找n个单位 */\r\n\tbackwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 获取当前时间\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 设置分钟和秒数为0\r\n\t\tdate.setFullYear(date.getFullYear() - 1 * times);\r\n\t\tdate.setMonth(0);\r\n\t\tdate.setDate(1);\r\n\t\tdate.setHours(0);\r\n\t\tdate.setMinutes(0);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 获取当前整小时的时间戳（毫秒）\r\n\t\tlet result = date.getTime() + getshifttime(hourShift);\r\n\t\treturn result;\r\n\t},\r\n\tgetInitTimeScope: function (initTime: string) {\r\n\t\tif (initTime === \"now\") {\r\n\t\t\treturn {\r\n\t\t\t\tstart: +new Date() - 1000 * 60 * 60 * 24 * 30 * 12 * 3,\r\n\t\t\t\tend: +new Date() + 1000 * 60 * 60 * 24 * 30 * 12 * 3,\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\treturn {\r\n\t\t\t\tstart: +new Date(initTime) - 1000 * 60 * 60 * 24 * 30 * 12 * 3,\r\n\t\t\t\tend: +new Date(initTime) + 1000 * 60 * 60 * 24 * 30 * 12 * 3,\r\n\t\t\t};\r\n\t\t}\r\n\t},\r\n\tformatter: function (value, lan, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(value);\r\n\r\n\t\treturn date.getFullYear() + LANGUAGES[lan]!.timeFormat.year;\r\n\t},\r\n};\r\n\r\n/**\r\n * 时间类型对应表\r\n */\r\nexport const timeTypeMap: { [propName: string]: ItimeFormat } = {\r\n\t\"1min\": ONEMIN,\r\n\t\"2min\": TWO,\r\n\t\"3min\": THREE,\r\n\t\"5min\": FMIN,\r\n\t\"10min\": TENMIN,\r\n\t\"15min\": FIFMIN,\r\n\t\"30min\": HALFHOUR,\r\n\t\"1h\": HOUR,\r\n\t\"1d\": DAY,\r\n\t\"1w\": WEEK,\r\n\t\"1m\": MONTH,\r\n\t\"1y\": YEAR,\r\n};\r\n\r\n/**\r\n *通过时间对象查找某个数组里的时间为特定时间对象的整数的个数\r\n */\r\nexport const findRoundTimeCountFromArray = function (\r\n\tarray: jsonObjectType[] | number[],\r\n\ttimeShift: number | \"local\",\r\n\tcurrentType: TtimeType,\r\n\tkey?: string\r\n): findRoundTimeCountFromArrayDataItem[] | null {\r\n\tlet getItemTime = function (arr: any[], index: any): number {\r\n\t\tif (typeof array[index] === \"object\" || typeof key !== \"undefined\") {\r\n\t\t\treturn Number(arr[index][key!]);\r\n\t\t}\r\n\t\treturn Number(arr[index]);\r\n\t};\r\n\r\n\t//获得当前的显示时间时区\r\n\t//某些情况下需要错位时间\r\n\t//例如当前时间间隔设置的是1d 那么数据时间可能指示到了08:00:00 而不是0点，所以\r\n\t//这种情况下需要计算这个查找位移\r\n\t//像1d以下的时间就不用计算\r\n\tlet getTimeShift = function () {\r\n\t\tif (currentType === \"1d\" || currentType === \"1w\" || currentType === \"1m\" || currentType === \"1y\") {\r\n\t\t\treturn timeShift;\r\n\t\t}\r\n\t\treturn 0;\r\n\t};\r\n\r\n\tif (array.length === 0) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tlet result: findRoundTimeCountFromArrayDataItem[] = [];\r\n\tlet start = getItemTime(array, 0);\r\n\tlet end = getItemTime(array, array.length - 1);\r\n\r\n\tlet gap = end - start;\r\n\r\n\tlet _timeTypeMap: { [propName: string]: ItimeFormat } = {};\r\n\r\n\t//小于一小时\r\n\tif (gap < 1000 * 60 * 60) {\r\n\t\t_timeTypeMap = { \"1min\": ONEMIN, \"5min\": FIFMIN, \"10min\": TENMIN };\r\n\t}\r\n\r\n\t//大于1小时，但是小于5小时\r\n\tif (gap >= 1000 * 60 * 60 && gap < 1000 * 60 * 60 * 5) {\r\n\t\t_timeTypeMap = { \"15min\": FIFMIN, \"30min\": HALFHOUR, \"1h\": HOUR };\r\n\t}\r\n\r\n\t//大于5小时，但是小于35小时\r\n\tif (gap >= 1000 * 60 * 60 * 5 && gap < 1000 * 60 * 60 * 35) {\r\n\t\t_timeTypeMap = { \"30min\": HALFHOUR, \"1h\": HOUR };\r\n\t}\r\n\r\n\t//大于35小时，但是小于15天\r\n\tif (gap >= 1000 * 60 * 60 * 35 && gap < 1000 * 60 * 60 * 24 * 15) {\r\n\t\t_timeTypeMap = { \"1h\": HOUR, \"1d\": DAY };\r\n\t}\r\n\r\n\t//大于15天，但是小于55天\r\n\tif (gap >= 1000 * 60 * 60 * 24 * 15 && gap < 1000 * 60 * 60 * 24 * 55) {\r\n\t\t_timeTypeMap = { \"1d\": DAY, \"1m\": MONTH };\r\n\t}\r\n\r\n\t//大于55天，但是小于1年\r\n\tif (gap >= 1000 * 60 * 60 * 24 * 35 && gap < 1000 * 60 * 60 * 24 * 365) {\r\n\t\t_timeTypeMap = { \"1d\": DAY, \"1m\": MONTH, \"1y\": YEAR };\r\n\t}\r\n\r\n\t//大于1年\r\n\tif (gap >= 1000 * 60 * 60 * 24 * 365) {\r\n\t\t_timeTypeMap = { \"1m\": MONTH, \"1y\": YEAR };\r\n\t}\r\n\t//查找数量\r\n\tlet findRoundTimeCount = function (timeType: ItimeFormat): { count: number; startIndex: number; step: number } {\r\n\t\tlet result_c = { count: 0, startIndex: 0, step: 0 };\r\n\t\t//先取整\r\n\t\tlet round = timeType.roundingFunction(end, getTimeShift());\r\n\t\t//然后从后往前找，看看有没有这个时间\r\n\t\tlet latestEqualIndex = binarySearchByKeyStrictlyEqual(array, round, \"forEnd\", key);\r\n\t\t//如果找到的这个下标都已经在数组里过半了，就直接返回0 ，说明这种时间格式不合适\r\n\t\tif (latestEqualIndex === null || latestEqualIndex === -1) {\r\n\t\t\treturn result_c;\r\n\t\t}\r\n\t\tif (latestEqualIndex <= array.length / 2) {\r\n\t\t\tresult_c.count = 1;\r\n\t\t\tresult_c.startIndex = latestEqualIndex!;\r\n\t\t\tresult_c.step = 99999999999999999;\r\n\t\t\treturn result_c;\r\n\t\t}\r\n\t\t//找到了它就根据它继续找下一个，获得跨度\r\n\t\tlet nextRound = timeType.backwardSingleUnit(getItemTime(array, latestEqualIndex), getTimeShift());\r\n\t\t//找到下一个这个时间类型的整数点\r\n\t\tlet nextEqualIndex = binarySearchByKeyStrictlyEqual(array.slice(0, latestEqualIndex), nextRound, \"forEnd\", key);\r\n\t\tif (nextEqualIndex === null || nextEqualIndex === -1) {\r\n\t\t\tresult_c.count = 1;\r\n\t\t\tresult_c.startIndex = latestEqualIndex!;\r\n\t\t\tresult_c.step = 99999999999999999;\r\n\t\t\treturn result_c;\r\n\t\t}\r\n\t\t//计算两个时间下标点之间的差，获得step\r\n\t\tlet step = latestEqualIndex - 1 - nextEqualIndex;\r\n\t\t//计算按照这种时间格式进行排列时的个数\r\n\t\tlet stepCount = countSelectedElements(latestEqualIndex + 1, step);\r\n\r\n\t\tresult_c.count = stepCount;\r\n\t\tresult_c.startIndex = latestEqualIndex;\r\n\t\tresult_c.step = step;\r\n\t\treturn result_c;\r\n\t};\r\n\r\n\tfor (let timeTypeItem in _timeTypeMap) {\r\n\t\tif (\r\n\t\t\t_timeTypeMap.hasOwnProperty(timeTypeItem) &&\r\n\t\t\ttimeTypeItem !== \"1w\" &&\r\n\t\t\ttimeTypeItem !== \"2min\" &&\r\n\t\t\ttimeTypeItem !== \"3min\"\r\n\t\t) {\r\n\t\t\tlet item = _timeTypeMap[timeTypeItem];\r\n\t\t\tresult.push({ ...findRoundTimeCount(item), type: item });\r\n\t\t}\r\n\t}\r\n\treturn result;\r\n};\r\n","/**\r\n * 廖力编写 2024年5月25日 00:36:41\r\n */\r\nimport {\r\n  createContext,\r\n  useState,\r\n  useContext,\r\n  useRef,\r\n  useCallback,\r\n  useEffect,\r\n  FC,\r\n  ReactElement,\r\n} from 'react';\r\nimport {\r\n  IcandleViewContext,\r\n  TcandleViewContext,\r\n} from '../interface/contextInterFace';\r\nimport usexAxis from '../hooks/xAxisHook';\r\nimport useyAxis from '../hooks/yAxisHook';\r\n\r\nimport useCandleHook from '../hooks/candleHook';\r\nimport { merge } from 'lodash';\r\nimport { IuseCandleView } from '../interface/configInterFaces';\r\nimport { DEFAULTVALUES } from '../utils/defaultValues';\r\nimport { Isize } from '../interface/itemsInterFace';\r\nimport { getSpaceSize } from '../utils/consts';\r\nimport { TtimeType } from '../interface/timeDefineInterFace';\r\nimport yAxis from '../com/yAxis';\r\n\r\n/**\r\n * 创建一个需要全局使用的钱包context\r\n **/\r\nconst candleViewContext = createContext<IcandleViewContext>(\r\n  {} as IcandleViewContext\r\n);\r\n\r\n/**\r\n * 钱包的公用钩子\r\n */\r\nconst useCandleView: TcandleViewContext = function(\r\n  args: IuseCandleView\r\n): IcandleViewContext {\r\n  /**\r\n   *默认参数状态\r\n   */\r\n  const [initArgs, setinitArgs] = useState<IuseCandleView>(\r\n    merge(DEFAULTVALUES, args)\r\n  );\r\n\r\n  /**\r\n   * ============================hooks===========================\r\n   */\r\n\r\n  /**\r\n   *x轴钩子对象\r\n   */\r\n  const xAxisObj = usexAxis(initArgs.xAxis!, undefined, initArgs);\r\n  /**\r\n   *y轴钩子对象\r\n   */\r\n  const yAxisObj = useyAxis(initArgs.yAxis!, xAxisObj);\r\n\r\n  /**\r\n   * candle 对象\r\n   * 数据展示对象\r\n   */\r\n  const candleObj = useCandleHook(initArgs.data!, xAxisObj, yAxisObj, initArgs);\r\n\r\n  /**\r\n   * ============================state===========================\r\n   */\r\n  const [isMounted, setIsMounted] = useState<boolean>(false);\r\n\r\n  /**\r\n   *画布宽度\r\n   */\r\n  const [canvasWidth, setcanvasWidth] = useState<number>(0);\r\n  /**\r\n   *画布高度\r\n   */\r\n  const [canvasHeight, setcanvasHeight] = useState<number>(0);\r\n  /**\r\n   *画布颜色\r\n   */\r\n  const [canvasBackgroundColor, setcanvasBackgroundColor] = useState<string>(\r\n    '#fff'\r\n  );\r\n\r\n  /**\r\n   *数据显示区域（去除x轴和y轴的占有区域）\r\n   */\r\n  const [dataArea, setdataArea] = useState<Isize>({ width: 0, height: 0 });\r\n\r\n  /**\r\n   * ==========================函数==============================\r\n   */\r\n\r\n  /**\r\n   * 更改时间格式，传入 TtimeType 类型的变量\r\n   * 需要查看当前的时间格式可以访问\r\n   * CandleViewV2.initArgs.timeFormat\r\n   */\r\n  const setTimeFormat = function(value: TtimeType) {\r\n    let _initArgs = { ...initArgs };\r\n    _initArgs.timeFormat = value;\r\n    setinitArgs(_initArgs);\r\n  };\r\n\r\n  /**\r\n   * ==================================Effects===============================\r\n   */\r\n  useEffect(function(): ReturnType<React.EffectCallback> {\r\n    if (isMounted === false) {\r\n      setIsMounted(true);\r\n    }\r\n    return function(): void {\r\n      setIsMounted(false);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      if (xAxisObj.data.isFinishedInit && yAxisObj.data.isFinishedInit) {\r\n        xAxisObj.funcs.setinitArgs(initArgs.xAxis!);\r\n        yAxisObj.funcs.setinitArgs(initArgs.yAxis!);\r\n        candleObj.funcs.setinitArgs(initArgs.data!);\r\n      }\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },\r\n    [initArgs]\r\n  );\r\n\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      if (\r\n        canvasHeight !== 0 &&\r\n        canvasWidth !== 0 &&\r\n        !xAxisObj.data.isFinishedInit\r\n      ) {\r\n        //初始化x轴\r\n        xAxisObj.funcs.initAxisSates(\r\n          initArgs.timeFormat!,\r\n          canvasWidth,\r\n          canvasHeight,\r\n          initArgs.yAxis?.labelSpace!\r\n        );\r\n        //初始化y轴\r\n        yAxisObj.funcs.updateAxisSates(canvasWidth, canvasHeight, {\r\n          start: 500,\r\n          end: 600,\r\n        });\r\n      } else {\r\n        //更新x轴\r\n        xAxisObj.funcs.updateAxisSates(\r\n          canvasWidth,\r\n          canvasHeight,\r\n          initArgs.yAxis?.labelSpace!\r\n        );\r\n      }\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },\r\n    [canvasWidth, canvasHeight]\r\n  );\r\n\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      if (xAxisObj.data.isFinishedInit) {\r\n        //重新初始化x轴\r\n        xAxisObj.funcs.initAxisSates(\r\n          initArgs.timeFormat!,\r\n          canvasWidth,\r\n          canvasHeight,\r\n          initArgs.yAxis?.labelSpace!\r\n        );\r\n      }\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },\r\n    [initArgs.timeFormat, initArgs.yAxis?.labelSpace!]\r\n  );\r\n\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      if (xAxisObj.data.isFinishedInit) {\r\n        //计算数据可用区域\r\n        setdataArea({\r\n          width:\r\n            canvasWidth -\r\n            getSpaceSize(initArgs.yAxis!.labelSpace!, canvasWidth),\r\n          height:\r\n            canvasHeight -\r\n            getSpaceSize(initArgs.xAxis!.labelSpace!, canvasHeight),\r\n        });\r\n      }\r\n    },\r\n    [xAxisObj.data.isFinishedInit, canvasWidth, canvasHeight]\r\n  );\r\n\r\n  return {\r\n    /**\r\n     *初始化时的参数\r\n     */\r\n    initArgs,\r\n\r\n    /**\r\n     *x导出的数据\r\n     */\r\n    data: {\r\n      /**\r\n       *画布宽度\r\n       */\r\n      canvasWidth,\r\n      /**\r\n       *画布高度\r\n       */\r\n      canvasHeight,\r\n      /**\r\n       *画布颜色\r\n       */\r\n      canvasBackgroundColor,\r\n      /**\r\n       *数据显示区域（去除x轴和y轴的占有区域）\r\n       */\r\n      dataArea,\r\n    },\r\n    /**\r\n     *x导出的方法\r\n     */\r\n    funcs: {\r\n      /**\r\n       *设置画布宽度\r\n       */\r\n      setcanvasWidth,\r\n      /**\r\n       *设置画布高度\r\n       */\r\n      setcanvasHeight,\r\n      /**\r\n       *设置画布颜色\r\n       */\r\n      setcanvasBackgroundColor,\r\n      setInitArgs: setinitArgs,\r\n      /**\r\n       * 向图表更新当前实时的价格，价格的变化将反应在第一个candle上 (右边第一个 )\r\n       * @param time 更新的时间，用当前时间就好了，不用取整\r\n       * @param currentPrice 当前更新的价格\r\n       * @param volume 当前更新的交易量\r\n       * @returns 当前图表最末尾一个数据对象\r\n       */\r\n      appendData: candleObj.funcs.updateLatestCandleData,\r\n      setTimeFormat,\r\n    },\r\n    hookObjs: {\r\n      /**\r\n       *x轴钩子对象\r\n       */\r\n      xAxisObj,\r\n      /**\r\n       *y轴钩子对象\r\n       */\r\n      yAxisObj,\r\n      /**\r\n       *candleobj\r\n       */\r\n      candleObj,\r\n    },\r\n  };\r\n};\r\n\r\nexport interface IuseCandleViewContext {\r\n  (): IcandleViewContext;\r\n}\r\n\r\nlet useCandleViewContext: IuseCandleViewContext = function(): IcandleViewContext {\r\n  var r: IcandleViewContext = useContext(candleViewContext);\r\n  return r;\r\n};\r\n\r\nexport {\r\n  //交易图的context\r\n  candleViewContext,\r\n  //创建自定义交易图钩子\r\n  useCandleView,\r\n  //在子组件中,获取交易图的context对象\r\n  useCandleViewContext,\r\n};\r\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import { createContext, useState, useContext, useRef, useCallback, useEffect, FC, ReactElement } from \"react\";\r\n\r\n/**\r\n * 防抖钩子\r\n */\r\nconst useDebounce = function () {\r\n\t/**\r\n\t * ============================state===========================\r\n\t */\r\n\tconst [isMounted, setIsMounted] = useState<boolean>(false);\r\n\r\n\tconst debounceFunction = useRef<(() => void) | null>(null);\r\n\tconst debounceTimeOut = useRef<NodeJS.Timeout | null>(null);\r\n\r\n\t/**\r\n\t * ==========================函数==============================\r\n\t */\r\n\r\n\tconst debounce = function (_func: () => void, _time: number) {\r\n\t\tif (typeof _time === \"undefined\") {\r\n\t\t\t_time = 500;\r\n\t\t}\r\n\t\tif (_time === 0) {\r\n\t\t\t_func();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tdebounceFunction.current = _func;\r\n\t\tif (debounceTimeOut.current !== null) {\r\n\t\t\tclearTimeout(debounceTimeOut.current);\r\n\t\t}\r\n\t\tdebounceTimeOut.current = setTimeout(function () {\r\n\t\t\tif (debounceFunction.current !== null) {\r\n\t\t\t\tdebounceFunction.current!();\r\n\t\t\t\tdebounceFunction.current = null;\r\n\t\t\t}\r\n\t\t}, _time);\r\n\t};\r\n\r\n\t/**\r\n\t * ==================================Effects===============================\r\n\t */\r\n\tuseEffect(function (): ReturnType<React.EffectCallback> {\r\n\t\tif (isMounted === false) {\r\n\t\t\tsetIsMounted(true);\r\n\t\t}\r\n\t\treturn function (): void {\r\n\t\t\tsetIsMounted(false);\r\n\t\t};\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, []);\r\n\r\n\treturn debounce;\r\n};\r\n\r\nexport default useDebounce;\r\n","import { PixiComponent } from \"@pixi/react\";\r\nimport { Graphics, utils } from \"pixi.js\";\r\nimport { IPixiShapeDashedLine, IPixiShapeRectangle } from \"../interface/basicShapesInterFace\";\r\n\r\ninterface RectangleProps {\r\n\tx: number;\r\n\ty: number;\r\n\twidth: number;\r\n\theight: number;\r\n\tcolor: number;\r\n}\r\n\r\nexport const Rectangle = PixiComponent<IPixiShapeRectangle, Graphics>(\"Rectangle\", {\r\n\tcreate: () => new Graphics(),\r\n\tapplyProps: (instance, oldProps, props) => {\r\n\t\tconst new_props = Object.assign(true, DEFAULTRECTANGLE, props);\r\n\t\tlet newxy = xyComput(new_props);\r\n\t\tlet x = newxy.x;\r\n\t\tlet y = newxy.y;\r\n\t\tinstance.clear();\r\n\t\tinstance.beginFill(new_props.color || 0x0, new_props.opacity);\r\n\t\tinstance.drawRect(x, y, new_props.size.width, new_props.size.height);\r\n\t\tinstance.endFill();\r\n\t},\r\n});\r\n\r\nconst xyComput = function (props: IPixiShapeRectangle) {\r\n\tlet x = props.position.x;\r\n\tlet y = props.position.y;\r\n\tif (props.alignX === \"center\") {\r\n\t\tx = props.position.x - props.size.width / 2;\r\n\t}\r\n\tif (props.alignX === \"right\") {\r\n\t\tx = props.position.x - props.size.width;\r\n\t}\r\n\tif (props.alignY === \"center\") {\r\n\t\ty = props.position.y - props.size.height / 2;\r\n\t}\r\n\tif (props.alignY === \"bottom\") {\r\n\t\ty = props.position.y - props.size.height;\r\n\t}\r\n\treturn { x, y };\r\n};\r\n\r\n/**\r\n * 矩形pixi对象的初始值\r\n */\r\nexport const DEFAULTRECTANGLE: IPixiShapeRectangle = {\r\n\tcolor: utils.string2hex(\"#000000\"),\r\n\tsize: { width: 100, height: 100 },\r\n\tposition: { x: 0, y: 0 },\r\n\talignX: \"left\",\r\n\talignY: \"top\",\r\n\topacity: 1,\r\n};\r\n\r\nconst drawDash = function (\r\n\ttarget: Graphics,\r\n\tx1: number,\r\n\ty1: number,\r\n\tx2: number,\r\n\ty2: number,\r\n\tdashLength: number = 5,\r\n\tspaceLength: number = 5\r\n): Graphics {\r\n\tlet x = x2 - x1;\r\n\tlet y = y2 - y1;\r\n\tlet hyp = Math.sqrt(x * x + y * y);\r\n\tlet units = hyp / (dashLength + spaceLength);\r\n\tlet dashSpaceRatio = dashLength / (dashLength + spaceLength);\r\n\tlet dashX = (x / units) * dashSpaceRatio;\r\n\tlet spaceX = x / units - dashX;\r\n\tlet dashY = (y / units) * dashSpaceRatio;\r\n\tlet spaceY = y / units - dashY;\r\n\r\n\ttarget.moveTo(x1, y1);\r\n\r\n\twhile (hyp > 0) {\r\n\t\tx1 += dashX;\r\n\t\ty1 += dashY;\r\n\t\thyp -= dashLength;\r\n\t\tif (hyp < 0) {\r\n\t\t\tx1 = x2;\r\n\t\t\ty1 = y2;\r\n\t\t}\r\n\t\ttarget.lineTo(x1, y1);\r\n\t\tx1 += spaceX;\r\n\t\ty1 += spaceY;\r\n\t\ttarget.moveTo(x1, y1);\r\n\t\thyp -= spaceLength;\r\n\t}\r\n\ttarget.moveTo(x2, y2);\r\n\treturn target;\r\n};\r\n\r\nexport const DashedLine = PixiComponent<IPixiShapeDashedLine, Graphics>(\"DashedLine\", {\r\n\tcreate: () => new Graphics(),\r\n\tapplyProps: (instance, _, newProps) => {\r\n\t\tlet defaults: IPixiShapeDashedLine = {\r\n\t\t\tcolor: utils.string2hex(\"#000000\"),\r\n\t\t\tsize: 1,\r\n\t\t\tpositionStart: { x: 0, y: 0 },\r\n\t\t\tpositionStop: { x: 0, y: 0 },\r\n\t\t\tdashLength: 4,\r\n\t\t\tspaceLength: 3,\r\n\t\t};\r\n\t\t//这里会产生引用\r\n\t\tconst props = Object.assign(true, defaults, newProps);\r\n\t\tinstance.clear();\r\n\t\tinstance.lineStyle(props.size, props.color);\r\n\t\tinstance = drawDash(\r\n\t\t\tinstance,\r\n\t\t\tprops.positionStart.x,\r\n\t\t\tprops.positionStart.y,\r\n\t\t\tprops.positionStop.x,\r\n\t\t\tprops.positionStop.y,\r\n\t\t\t4,\r\n\t\t\t3\r\n\t\t);\r\n\t\tinstance.endFill();\r\n\t},\r\n});\r\n\r\n//import * as PIXI from \"pixi.js\";\r\n//import { Stage, Container, Sprite, CustomPIXIComponent } from \"react-pixi-fiber\";\r\n//import { pointCoord } from \"@/components/interfaces/iComon\";\r\n//import { IPixiShapeDashedLine, IPixiShapeRectangle } from \"../interface/basicShapesInterFace\";\r\n//import { DEFAULTRECTANGLE } from \"./defaultValues\";\r\n//\r\n////计算xy\r\n//const xyComput = function (props: IPixiShapeRectangle) {\r\n//\tlet x = props.position.x;\r\n//\tlet y = props.position.y;\r\n//\tif (props.alignX === \"center\") {\r\n//\t\tx = props.position.x - props.size.width / 2;\r\n//\t}\r\n//\tif (props.alignX === \"right\") {\r\n//\t\tx = props.position.x - props.size.width;\r\n//\t}\r\n//\tif (props.alignY === \"center\") {\r\n//\t\ty = props.position.y - props.size.height / 2;\r\n//\t}\r\n//\tif (props.alignY === \"bottom\") {\r\n//\t\ty = props.position.y - props.size.height;\r\n//\t}\r\n//\treturn { x, y };\r\n//};\r\n//\r\n///**\r\n// * 矩形(自定义PIXI图形)\r\n// */\r\n//export const Rectangle = CustomPIXIComponent(\r\n//\t{\r\n//\t\tcustomDisplayObject: () => new PIXI.Graphics(),\r\n//\t\tcustomApplyProps: (instance: PIXI.Graphics, oldProps, newProps: IPixiShapeRectangle) => {\r\n//\t\t\t//这里会产生引用\r\n//\t\t\tconst new_props = Object.assign(true, DEFAULTRECTANGLE, newProps);\r\n//\r\n//\t\t\tlet newxy = xyComput(new_props);\r\n//\t\t\tlet x = newxy.x;\r\n//\t\t\tlet y = newxy.y;\r\n//\t\t\tinstance.clear();\r\n//\t\t\tinstance.beginFill(new_props.color || 0x0, new_props.opacity);\r\n//\t\t\tinstance.drawRect(x, y, new_props.size.width, new_props.size.height);\r\n//\t\t\tinstance.endFill();\r\n//\r\n//\t\t\t/* if (typeof oldProps === \"undefined\") {\r\n//\t\t\t\tlet x = newxy.x;\r\n//\t\t\t\tlet y = newxy.y;\r\n//\t\t\t\tinstance.clear();\r\n//\t\t\t\tinstance.beginFill(new_props.color || 0x0, new_props.opacity);\r\n//\t\t\t\tinstance.drawRect(x, y, new_props.size.width, new_props.size.height);\r\n//\t\t\t\tinstance.endFill();\r\n//\t\t\t} else {\r\n//\t\t\t\tconst old_Props = Object.assign(true, defaultsRectangle, oldProps);\r\n//\t\t\t\tlet oldxy = xyComput(old_Props);\r\n//\r\n//\t\t\t\tif (oldxy.x !== newxy.x) {\r\n//\t\t\t\t\tinstance.x += newxy.x - oldxy.x;\r\n//\t\t\t\t}\r\n//\t\t\t\tif (oldxy.y !== newxy.y) {\r\n//\t\t\t\t\tinstance.y += newxy.y - oldxy.y;\r\n//\t\t\t\t}\r\n//\t\t\t\tif (old_Props.size.width !== new_props.size.width) {\r\n//\t\t\t\t\tinstance.width = new_props.size.width;\r\n//\t\t\t\t}\r\n//\t\t\t\tif (old_Props.size.height !== new_props.size.height) {\r\n//\t\t\t\t\tinstance.height = new_props.size.height;\r\n//\t\t\t\t}\r\n//\t\t\t\tif (old_Props.color !== new_props.color) {\r\n//\t\t\t\t\tinstance.beginFill(new_props.color);\r\n//\t\t\t\t}\r\n//\t\t\t\tif (old_Props.opacity !== new_props.opacity) {\r\n//\t\t\t\t\tinstance.alpha = new_props.opacity as number;\r\n//\t\t\t\t}\r\n//\t\t\t} */\r\n//\t\t},\r\n//\t},\r\n//\t\"Rectangle\"\r\n//);\r\n//\r\n///**\r\n// * 矩形(自定义PIXI图形)\r\n// */\r\n////export const superRectangle = CustomPIXIComponent(\r\n////\t{\r\n////\t\tcustomDisplayObject: () => new PIXI.Graphics(),\r\n////\t\tcustomApplyProps: (instance: PIXI.Graphics, oldProps, newProps: IPixiShapeRectangle) => {\r\n////\t\t\t//这里会产生引用\r\n////\t\t\tconst new_props = Object.assign(true, DEFAULTRECTANGLE, newProps);\r\n////\r\n////\t\t\tlet newxy = xyComput(new_props);\r\n////\t\t\tlet x = newxy.x;\r\n////\t\t\tlet y = newxy.y;\r\n////\t\t\tinstance.clear();\r\n////\t\t\tinstance.beginFill(new_props.color || 0x0, new_props.opacity);\r\n////\t\t\tinstance.drawRect(x, y, new_props.size.width, new_props.size.height);\r\n////\t\t\tinstance.endFill();\r\n////\r\n////\t\t\t/* if (typeof oldProps === \"undefined\") {\r\n////\t\t\t\tlet x = newxy.x;\r\n////\t\t\t\tlet y = newxy.y;\r\n////\t\t\t\tinstance.clear();\r\n////\t\t\t\tinstance.beginFill(new_props.color || 0x0, new_props.opacity);\r\n////\t\t\t\tinstance.drawRect(x, y, new_props.size.width, new_props.size.height);\r\n////\t\t\t\tinstance.endFill();\r\n////\t\t\t} else {\r\n////\t\t\t\tconst old_Props = Object.assign(true, defaultsRectangle, oldProps);\r\n////\t\t\t\tlet oldxy = xyComput(old_Props);\r\n////\r\n////\t\t\t\tif (oldxy.x !== newxy.x) {\r\n////\t\t\t\t\tinstance.x += newxy.x - oldxy.x;\r\n////\t\t\t\t}\r\n////\t\t\t\tif (oldxy.y !== newxy.y) {\r\n////\t\t\t\t\tinstance.y += newxy.y - oldxy.y;\r\n////\t\t\t\t}\r\n////\t\t\t\tif (old_Props.size.width !== new_props.size.width) {\r\n////\t\t\t\t\tinstance.width = new_props.size.width;\r\n////\t\t\t\t}\r\n////\t\t\t\tif (old_Props.size.height !== new_props.size.height) {\r\n////\t\t\t\t\tinstance.height = new_props.size.height;\r\n////\t\t\t\t}\r\n////\t\t\t\tif (old_Props.color !== new_props.color) {\r\n////\t\t\t\t\tinstance.beginFill(new_props.color);\r\n////\t\t\t\t}\r\n////\t\t\t\tif (old_Props.opacity !== new_props.opacity) {\r\n////\t\t\t\t\tinstance.alpha = new_props.opacity as number;\r\n////\t\t\t\t}\r\n////\t\t\t} */\r\n////\t\t},\r\n////\t},\r\n////\t\"superRectangle\"\r\n////);\r\n//\r\n\r\n//\r\n///**\r\n// * 虚线(自定义PIXI图形)\r\n// */\r\n//export const DashedLine = CustomPIXIComponent(\r\n//\t{\r\n//\t\tcustomDisplayObject: () => new PIXI.Graphics(),\r\n//\t\tcustomApplyProps: (instance: PIXI.Graphics, oldProps, newProps: IPixiShapeDashedLine) => {\r\n//\t\t\tlet defaults: IPixiShapeDashedLine = {\r\n//\t\t\t\tcolor: PIXI.utils.string2hex(\"#000000\"),\r\n//\t\t\t\tsize: 1,\r\n//\t\t\t\tpositionStart: { x: 0, y: 0 },\r\n//\t\t\t\tpositionStop: { x: 0, y: 0 },\r\n//\t\t\t\tdashLength: 4,\r\n//\t\t\t\tspaceLength: 3,\r\n//\t\t\t};\r\n//\t\t\t//这里会产生引用\r\n//\t\t\tconst props = Object.assign(true, defaults, newProps);\r\n//\t\t\tinstance.clear();\r\n//\t\t\tinstance.lineStyle(props.size, props.color);\r\n//\t\t\tinstance = drawDash(\r\n//\t\t\t\tinstance,\r\n//\t\t\t\tprops.positionStart.x,\r\n//\t\t\t\tprops.positionStart.y,\r\n//\t\t\t\tprops.positionStop.x,\r\n//\t\t\t\tprops.positionStop.y,\r\n//\t\t\t\t4,\r\n//\t\t\t\t3\r\n//\t\t\t);\r\n//\t\t\tinstance.endFill();\r\n//\t\t},\r\n//\t},\r\n//\t\"DashedLine\"\r\n//);\r\n//\r\n","/**\r\n * 廖力编写\r\n * 模块名称：\r\n * 模块说明：\r\n * 编写时间：\r\n */\r\nimport React, {\r\n\tuseEffect,\r\n\tuseRef,\r\n\tuseState,\r\n\tforwardRef,\r\n\tuseImperativeHandle,\r\n\tFC,\r\n\tReactElement,\r\n\tmemo,\r\n\tLegacyRef,\r\n\tuseMemo,\r\n} from \"react\";\r\nimport { Stage, Graphics, Container, Text } from \"@pixi/react\";\r\nimport * as PIXI from \"pixi.js\";\r\nimport { DashedLine, Rectangle } from \"../utils/basicShaps\";\r\nimport { useCandleViewPixiContext } from \"..\";\r\nimport { getSpaceSize } from \"../utils/consts\";\r\n\r\n/**\r\n * 传入参数\r\n */\r\nexport interface iprops {}\r\n\r\nconst XAxis: FC<iprops> = ({}, _ref): ReactElement => {\r\n\t//===============useHooks=================\r\n\tconst CVData = useCandleViewPixiContext();\r\n\r\n\t//===============state====================\r\n\tconst [isMounted, setIsMounted] = useState<boolean>(false);\r\n\r\n\t//===============static===================\r\n\tconst labelPadding: number = 25;\r\n\r\n\t//===============ref======================\r\n\tconst tooltipTextRef = useRef<any>(null);\r\n\r\n\t//===============function=================\r\n\t/* 创建tick */\r\n\tconst makeTicks = function () {\r\n\t\tlet result: React.JSX.Element[] = [];\r\n\t\tlet index = 0;\r\n\t\tfor (var item of CVData.hookObjs.xAxisObj.data.displayTickArr) {\r\n\t\t\tresult.push(\r\n\t\t\t\t<React.Fragment key={index + \"_d\"}>\r\n\t\t\t\t\t<Rectangle\r\n\t\t\t\t\t\tcolor={PIXI.utils.string2hex(item.color)}\r\n\t\t\t\t\t\tsize={{\r\n\t\t\t\t\t\t\twidth: item.size,\r\n\t\t\t\t\t\t\theight: item.length,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tposition={item.cPosition}\r\n\t\t\t\t\t\talignX=\"center\"\r\n\t\t\t\t\t\talignY=\"top\"\r\n\t\t\t\t\t></Rectangle>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t);\r\n\t\t\tindex++;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t};\r\n\r\n\t/* 创建label */\r\n\tconst makeLabels = function () {\r\n\t\tlet result: React.JSX.Element[] = [];\r\n\t\tlet index = 0;\r\n\t\tfor (var item of CVData.hookObjs.xAxisObj.data.displayTickArr) {\r\n\t\t\tresult.push(\r\n\t\t\t\t<React.Fragment key={index + \"_a\"}>\r\n\t\t\t\t\t<Text\r\n\t\t\t\t\t\tanchor={0.5}\r\n\t\t\t\t\t\tx={item.cPosition.x}\r\n\t\t\t\t\t\ty={item.cPosition.y + CVData.hookObjs.xAxisObj.data.labelSpace / 2}\r\n\t\t\t\t\t\ttext={(function () {\r\n\t\t\t\t\t\t\tif (typeof CVData.hookObjs.xAxisObj.initArgs.formatter !== \"undefined\") {\r\n\t\t\t\t\t\t\t\treturn CVData.hookObjs.xAxisObj.initArgs.formatter!(item);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn item.displayValue?.toString()!;\r\n\t\t\t\t\t\t})()}\r\n\t\t\t\t\t\tresolution={2}\r\n\t\t\t\t\t\tstyle={\r\n\t\t\t\t\t\t\tnew PIXI.TextStyle({\r\n\t\t\t\t\t\t\t\talign: \"center\",\r\n\t\t\t\t\t\t\t\tfontSize: CVData.hookObjs.xAxisObj.initArgs.fontSize,\r\n\t\t\t\t\t\t\t\tfill: PIXI.utils.string2hex(CVData.hookObjs.xAxisObj.initArgs.tickColor!),\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t);\r\n\t\t\tindex++;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t};\r\n\r\n\t/* 创建tooltip */\r\n\tconst makeTooltip = function () {\r\n\t\tif (\r\n\t\t\t!CVData.hookObjs.xAxisObj.initArgs.tooltip!.enabled! ||\r\n\t\t\tCVData.hookObjs.xAxisObj.data.tooltipState === null ||\r\n\t\t\t!CVData.hookObjs.xAxisObj.data.tooltipIsShow\r\n\t\t) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<DashedLine\r\n\t\t\t\t\tcolor={PIXI.utils.string2hex(CVData.hookObjs.xAxisObj.initArgs.tooltip!.color!)}\r\n\t\t\t\t\tsize={CVData.hookObjs.xAxisObj.data.tooltipState.size}\r\n\t\t\t\t\tpositionStart={CVData.hookObjs.xAxisObj.data.tooltipState.position}\r\n\t\t\t\t\tpositionStop={{\r\n\t\t\t\t\t\tx: CVData.hookObjs.xAxisObj.data.tooltipState.position.x,\r\n\t\t\t\t\t\ty: CVData.hookObjs.xAxisObj.data.tooltipState.length,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tdashLength={CVData.hookObjs.xAxisObj.initArgs.tooltip!.dashLength!}\r\n\t\t\t\t\tspaceLength={CVData.hookObjs.xAxisObj.initArgs.tooltip!.spaceLength!}\r\n\t\t\t\t></DashedLine>\r\n\r\n\t\t\t\t<Rectangle\r\n\t\t\t\t\tcolor={PIXI.utils.string2hex(CVData.hookObjs.xAxisObj.initArgs.tooltip?.label?.backGroundColor!)}\r\n\t\t\t\t\tsize={{\r\n\t\t\t\t\t\twidth: tooltipTextRef.current?.width + labelPadding,\r\n\t\t\t\t\t\theight: CVData.hookObjs.xAxisObj.data.labelSpace,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tposition={(function () {\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\tCVData.hookObjs.xAxisObj.data.tooltipState.position.x -\r\n\t\t\t\t\t\t\t\ttooltipTextRef.current?.width / 2 -\r\n\t\t\t\t\t\t\t\tlabelPadding / 2 <\r\n\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tx: tooltipTextRef.current?.width / 2 + labelPadding / 2,\r\n\t\t\t\t\t\t\t\ty: CVData.hookObjs.xAxisObj.data.tooltipState.relatedTickItem!.cPosition.y,\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\tCVData.hookObjs.xAxisObj.data.tooltipState.position.x +\r\n\t\t\t\t\t\t\t\ttooltipTextRef.current?.width / 2 +\r\n\t\t\t\t\t\t\t\tlabelPadding / 2 >\r\n\t\t\t\t\t\t\tCVData.hookObjs.xAxisObj.data.lineSize.width\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tx:\r\n\t\t\t\t\t\t\t\t\tCVData.hookObjs.xAxisObj.data.lineSize.width -\r\n\t\t\t\t\t\t\t\t\ttooltipTextRef.current?.width / 2 -\r\n\t\t\t\t\t\t\t\t\tlabelPadding / 2,\r\n\t\t\t\t\t\t\t\ty: CVData.hookObjs.xAxisObj.data.tooltipState.relatedTickItem!.cPosition.y,\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tx: CVData.hookObjs.xAxisObj.data.tooltipState.position.x,\r\n\t\t\t\t\t\t\ty: CVData.hookObjs.xAxisObj.data.tooltipState.relatedTickItem!.cPosition.y,\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t})()}\r\n\t\t\t\t\talignX=\"center\"\r\n\t\t\t\t\talignY=\"top\"\r\n\t\t\t\t></Rectangle>\r\n\t\t\t\t<Rectangle\r\n\t\t\t\t\tcolor={PIXI.utils.string2hex(CVData.hookObjs.xAxisObj.initArgs.tooltip?.label?.color!)}\r\n\t\t\t\t\tsize={{\r\n\t\t\t\t\t\twidth: CVData.hookObjs.xAxisObj.data.tooltipState.relatedTickItem!.size,\r\n\t\t\t\t\t\theight: CVData.hookObjs.xAxisObj.data.tooltipState.relatedTickItem!.length,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tposition={{\r\n\t\t\t\t\t\tx: CVData.hookObjs.xAxisObj.data.tooltipState.position.x,\r\n\t\t\t\t\t\ty: CVData.hookObjs.xAxisObj.data.tooltipState.relatedTickItem!.cPosition.y,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\talignX=\"center\"\r\n\t\t\t\t\talignY=\"top\"\r\n\t\t\t\t></Rectangle>\r\n\t\t\t\t<Text\r\n\t\t\t\t\tref={tooltipTextRef}\r\n\t\t\t\t\tanchor={0.5}\r\n\t\t\t\t\tx={(function () {\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\tCVData.hookObjs.xAxisObj.data.tooltipState.position.x -\r\n\t\t\t\t\t\t\t\ttooltipTextRef.current?.width / 2 -\r\n\t\t\t\t\t\t\t\tlabelPadding / 2 <\r\n\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\treturn tooltipTextRef.current?.width / 2 + labelPadding / 2;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\tCVData.hookObjs.xAxisObj.data.tooltipState.position.x +\r\n\t\t\t\t\t\t\t\ttooltipTextRef.current?.width / 2 +\r\n\t\t\t\t\t\t\t\tlabelPadding / 2 >\r\n\t\t\t\t\t\t\tCVData.hookObjs.xAxisObj.data.lineSize.width\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\tCVData.hookObjs.xAxisObj.data.lineSize.width -\r\n\t\t\t\t\t\t\t\ttooltipTextRef.current?.width / 2 -\r\n\t\t\t\t\t\t\t\tlabelPadding / 2\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn CVData.hookObjs.xAxisObj.data.tooltipState.position.x;\r\n\t\t\t\t\t})()}\r\n\t\t\t\t\ty={CVData.hookObjs.xAxisObj.data.tooltipState.length + CVData.hookObjs.xAxisObj.data.labelSpace / 2}\r\n\t\t\t\t\ttext={\r\n\t\t\t\t\t\tCVData.hookObjs.xAxisObj.initArgs.tooltip?.label?.formatter!(\r\n\t\t\t\t\t\t\tCVData.hookObjs.xAxisObj.data.tooltipState.relatedTickItem!\r\n\t\t\t\t\t\t) as string\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresolution={2}\r\n\t\t\t\t\tstyle={\r\n\t\t\t\t\t\tnew PIXI.TextStyle({\r\n\t\t\t\t\t\t\talign: \"center\",\r\n\t\t\t\t\t\t\tfontSize: CVData.hookObjs.xAxisObj.initArgs.tooltip?.label?.fontsize,\r\n\t\t\t\t\t\t\tfill: PIXI.utils.string2hex(CVData.hookObjs.xAxisObj.initArgs.tooltip?.label?.color!),\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</>\r\n\t\t);\r\n\t};\r\n\r\n\t//===============effects==================\r\n\tuseEffect(\r\n\t\tfunction (): ReturnType<React.EffectCallback> {\r\n\t\t\tif (isMounted === false) {\r\n\t\t\t\tsetIsMounted(true);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[isMounted]\r\n\t);\r\n\r\n\tuseEffect(function (): ReturnType<React.EffectCallback> {\r\n\t\treturn function (): void {\r\n\t\t\tsetIsMounted(false);\r\n\t\t};\r\n\t}, []);\r\n\r\n\t/* x轴背景 */\r\n\tlet xBackground = useMemo(\r\n\t\tfunction () {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{/* y轴背景 */}\r\n\t\t\t\t\t<Rectangle\r\n\t\t\t\t\t\tcolor={PIXI.utils.string2hex(CVData.hookObjs.xAxisObj.initArgs.backgroundColor!)}\r\n\t\t\t\t\t\tsize={{\r\n\t\t\t\t\t\t\twidth: CVData.hookObjs.xAxisObj.data.viewSize.width,\r\n\t\t\t\t\t\t\theight: CVData.hookObjs.xAxisObj.data.labelSpace,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tposition={CVData.hookObjs.xAxisObj.data.linePosition}\r\n\t\t\t\t\t\talignX=\"left\"\r\n\t\t\t\t\t\talignY=\"top\"\r\n\t\t\t\t\t></Rectangle>\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t},\r\n\t\t[\r\n\t\t\tCVData.hookObjs.yAxisObj.data.labelSpace,\r\n\t\t\tCVData.hookObjs.yAxisObj.data.viewSize,\r\n\t\t\tCVData.hookObjs.yAxisObj.data.linePosition,\r\n\t\t\tCVData.hookObjs.yAxisObj.data.lineColor,\r\n\t\t\tCVData.hookObjs.yAxisObj.initArgs.backgroundColor,\r\n\t\t]\r\n\t);\r\n\r\n\tlet xAsixElem = useMemo(\r\n\t\tfunction () {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{/*  x轴 */}\r\n\t\t\t\t\t<Rectangle\r\n\t\t\t\t\t\tcolor={PIXI.utils.string2hex(CVData.hookObjs.xAxisObj.initArgs.lineColor!)}\r\n\t\t\t\t\t\tsize={{\r\n\t\t\t\t\t\t\twidth: CVData.hookObjs.xAxisObj.data.lineSize.width,\r\n\t\t\t\t\t\t\theight: CVData.hookObjs.xAxisObj.data.lineSize.size,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tposition={CVData.hookObjs.xAxisObj.data.linePosition}\r\n\t\t\t\t\t\talignX=\"left\"\r\n\t\t\t\t\t\talignY=\"top\"\r\n\t\t\t\t\t></Rectangle>\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t},\r\n\t\t[\r\n\t\t\tCVData.hookObjs.xAxisObj.data.lineSize.width,\r\n\t\t\tCVData.hookObjs.xAxisObj.data.lineSize.size,\r\n\t\t\tCVData.hookObjs.xAxisObj.data.linePosition,\r\n\t\t\tCVData.hookObjs.xAxisObj.initArgs.lineColor,\r\n\t\t]\r\n\t);\r\n\r\n\tlet ticks = useMemo(\r\n\t\tfunction () {\r\n\t\t\treturn makeTicks();\r\n\t\t},\r\n\t\t[CVData.hookObjs.xAxisObj.data.displayTickArr]\r\n\t);\r\n\r\n\tlet labels = useMemo(\r\n\t\tfunction () {\r\n\t\t\treturn makeLabels();\r\n\t\t},\r\n\t\t[CVData.hookObjs.xAxisObj.data.displayTickArr, CVData.hookObjs.xAxisObj.initArgs]\r\n\t);\r\n\r\n\tlet tooltip = useMemo(\r\n\t\tfunction () {\r\n\t\t\treturn makeTooltip();\r\n\t\t},\r\n\t\t[\r\n\t\t\tCVData.hookObjs.xAxisObj.data.tooltipState,\r\n\t\t\tCVData.hookObjs.xAxisObj.data.tooltipIsShow,\r\n\t\t\tCVData.hookObjs.xAxisObj.data.x,\r\n\t\t\tCVData.hookObjs.xAxisObj.initArgs.tooltip,\r\n\t\t]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{/* x轴背景 */}\r\n\t\t\t{xBackground}\r\n\t\t\t{xAsixElem}\r\n\t\t\t{/* 创建x轴标 */}\r\n\t\t\t<Container x={CVData.hookObjs.xAxisObj.data.x}>\r\n\t\t\t\t{ticks}\r\n\t\t\t\t{/* 创建label */}\r\n\t\t\t\t{labels}\r\n\t\t\t</Container>\r\n\t\t\t{/* 创建ToolTip */}\r\n\t\t\t{tooltip}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\n//使用memo不让其因为上级节点的更新而频繁更新\r\nexport default memo(XAxis);\r\n","/**\r\n * 廖力编写\r\n * 模块名称：\r\n * 模块说明：\r\n * 编写时间：\r\n */\r\nimport React, {\r\n\tuseEffect,\r\n\tuseRef,\r\n\tuseState,\r\n\tforwardRef,\r\n\tuseImperativeHandle,\r\n\tFC,\r\n\tReactElement,\r\n\tmemo,\r\n\tLegacyRef,\r\n\tuseMemo,\r\n} from \"react\";\r\nimport { Stage, Graphics, Container, Text } from \"@pixi/react\";\r\nimport * as PIXI from \"pixi.js\";\r\nimport { DashedLine, Rectangle } from \"../utils/basicShaps\";\r\nimport { useCandleViewPixiContext } from \"..\";\r\nimport { getSpaceSize } from \"../utils/consts\";\r\n\r\n/**\r\n * 传入参数\r\n */\r\nexport interface iprops {}\r\n\r\nconst DataTooltop: FC<iprops> = ({}, _ref): ReactElement => {\r\n\t//===============useHooks=================\r\n\tconst CVData = useCandleViewPixiContext();\r\n\r\n\t//===============state====================\r\n\tconst [isMounted, setIsMounted] = useState<boolean>(false);\r\n\tconst [updateTemp, setupdateTemp] = useState<number>(0);\r\n\t//===============static===================\r\n\tconst labelPadding: number = 10;\r\n\r\n\t//===============ref======================\r\n\tconst lastDataTooltipTextRef = useRef<any>(null);\r\n\tconst lastDataTooltipTextRef2 = useRef<any>(null);\r\n\tconst lastDataTooltipTextRef3 = useRef<any>(null);\r\n\tconst lastDataTooltipTextRef4 = useRef<any>(null);\r\n\r\n\t//===============function=================\r\n\t/* 创建最后一个candle的tooltip */\r\n\tconst makeLastCandleTooltip = function () {\r\n\t\tif (\r\n\t\t\tCVData.hookObjs.candleObj.data.latestCandleItem === null ||\r\n\t\t\t!CVData.hookObjs.candleObj.initArgs.candleStyles?.currentPriceTooltip!.enabled! ||\r\n\t\t\tCVData.hookObjs.candleObj.data.latestCandleToolTip === null ||\r\n\t\t\t!CVData.hookObjs.candleObj.data.latestCandleToolTip\r\n\t\t) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<DashedLine\r\n\t\t\t\t\tcolor={PIXI.utils.string2hex(CVData.hookObjs.candleObj.data.latestCandleItem!.candleColor!)}\r\n\t\t\t\t\tsize={CVData.hookObjs.candleObj.data.latestCandleToolTip.size}\r\n\t\t\t\t\tpositionStart={CVData.hookObjs.candleObj.data.latestCandleToolTip.position}\r\n\t\t\t\t\tpositionStop={{\r\n\t\t\t\t\t\tx: CVData.hookObjs.candleObj.data.latestCandleToolTip.length,\r\n\t\t\t\t\t\ty: CVData.hookObjs.candleObj.data.latestCandleToolTip.position.y,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tdashLength={CVData.hookObjs.candleObj.initArgs.candleStyles?.currentPriceTooltip!.dashLength!}\r\n\t\t\t\t\tspaceLength={CVData.hookObjs.candleObj.initArgs.candleStyles?.currentPriceTooltip!.spaceLength!}\r\n\t\t\t\t></DashedLine>\r\n\r\n\t\t\t\t<Rectangle\r\n\t\t\t\t\tcolor={PIXI.utils.string2hex(CVData.hookObjs.candleObj.data.latestCandleItem!.candleColor!)}\r\n\t\t\t\t\tsize={{\r\n\t\t\t\t\t\twidth: CVData.hookObjs.yAxisObj.data.labelSpace,\r\n\t\t\t\t\t\theight: lastDataTooltipTextRef.current?.height + labelPadding,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tposition={{\r\n\t\t\t\t\t\tx: CVData.hookObjs.yAxisObj.data.linePosition.x,\r\n\t\t\t\t\t\ty: CVData.hookObjs.candleObj.data.latestCandleToolTip.position.y,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\talignX=\"left\"\r\n\t\t\t\t\talignY=\"center\"\r\n\t\t\t\t></Rectangle>\r\n\t\t\t\t<Rectangle\r\n\t\t\t\t\tcolor={PIXI.utils.string2hex(\r\n\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.currentPriceTooltip?.label?.color!\r\n\t\t\t\t\t)}\r\n\t\t\t\t\tsize={{\r\n\t\t\t\t\t\twidth: CVData.hookObjs.yAxisObj.data.tickLength,\r\n\t\t\t\t\t\theight: CVData.hookObjs.candleObj.data.latestCandleToolTip.size,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tposition={{\r\n\t\t\t\t\t\tx: CVData.hookObjs.yAxisObj.data.linePosition.x,\r\n\t\t\t\t\t\ty: CVData.hookObjs.candleObj.data.latestCandleToolTip.position.y,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\talignX=\"left\"\r\n\t\t\t\t\talignY=\"center\"\r\n\t\t\t\t></Rectangle>\r\n\t\t\t\t<Text\r\n\t\t\t\t\tref={lastDataTooltipTextRef}\r\n\t\t\t\t\tanchor={{ x: 0, y: 0.6 }}\r\n\t\t\t\t\tx={CVData.hookObjs.yAxisObj.data.linePosition.x + CVData.hookObjs.yAxisObj.data.tickLength * 2}\r\n\t\t\t\t\ty={CVData.hookObjs.candleObj.data.latestCandleToolTip.position.y}\r\n\t\t\t\t\ttext={\r\n\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.currentPriceTooltip?.label?.formatter!(\r\n\t\t\t\t\t\t\tCVData.hookObjs.candleObj.data.latestCandleToolTip\r\n\t\t\t\t\t\t) as string\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresolution={2}\r\n\t\t\t\t\tstyle={\r\n\t\t\t\t\t\tnew PIXI.TextStyle({\r\n\t\t\t\t\t\t\tfontSize:\r\n\t\t\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.currentPriceTooltip?.label?.fontsize,\r\n\t\t\t\t\t\t\tfill: PIXI.utils.string2hex(\r\n\t\t\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.currentPriceTooltip?.label?.color!\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</>\r\n\t\t);\r\n\t};\r\n\r\n\t/* 视图范围内最末尾的candle */\r\n\tconst makeLatestCandleToolTip = function () {\r\n\t\tif (\r\n\t\t\t!CVData.hookObjs.candleObj.initArgs.candleStyles?.viewLastPriceTooltip!.enabled! ||\r\n\t\t\tCVData.hookObjs.candleObj.data.latestdisplayLatestCandle === null ||\r\n\t\t\t!CVData.hookObjs.candleObj.data.latestdisplayLatestCandle\r\n\t\t) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Rectangle\r\n\t\t\t\t\tcolor={PIXI.utils.string2hex(\r\n\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.viewLastPriceTooltip?.label?.backGroundColor!\r\n\t\t\t\t\t)}\r\n\t\t\t\t\tsize={{\r\n\t\t\t\t\t\twidth: CVData.hookObjs.yAxisObj.data.labelSpace,\r\n\t\t\t\t\t\theight: lastDataTooltipTextRef2.current?.height + labelPadding,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tposition={{\r\n\t\t\t\t\t\tx: CVData.hookObjs.yAxisObj.data.linePosition.x,\r\n\t\t\t\t\t\ty: CVData.hookObjs.candleObj.data.latestdisplayLatestCandle.position.y,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\talignX=\"left\"\r\n\t\t\t\t\talignY=\"center\"\r\n\t\t\t\t\topacity={\r\n\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.viewLastPriceTooltip?.label?.backGroundAlpha\r\n\t\t\t\t\t}\r\n\t\t\t\t></Rectangle>\r\n\t\t\t\t<Rectangle\r\n\t\t\t\t\tcolor={PIXI.utils.string2hex(\r\n\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.viewLastPriceTooltip?.label?.color!\r\n\t\t\t\t\t)}\r\n\t\t\t\t\tsize={{\r\n\t\t\t\t\t\twidth: CVData.hookObjs.yAxisObj.data.tickLength,\r\n\t\t\t\t\t\theight: CVData.hookObjs.candleObj.data.latestdisplayLatestCandle.size,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tposition={{\r\n\t\t\t\t\t\tx: CVData.hookObjs.yAxisObj.data.linePosition.x,\r\n\t\t\t\t\t\ty: CVData.hookObjs.candleObj.data.latestdisplayLatestCandle.position.y,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\talignX=\"left\"\r\n\t\t\t\t\talignY=\"center\"\r\n\t\t\t\t></Rectangle>\r\n\t\t\t\t<Text\r\n\t\t\t\t\tref={lastDataTooltipTextRef2}\r\n\t\t\t\t\tanchor={{ x: 0, y: 0.6 }}\r\n\t\t\t\t\tx={CVData.hookObjs.yAxisObj.data.linePosition.x + CVData.hookObjs.yAxisObj.data.tickLength * 2}\r\n\t\t\t\t\ty={CVData.hookObjs.candleObj.data.latestdisplayLatestCandle.position.y}\r\n\t\t\t\t\ttext={\r\n\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.viewLastPriceTooltip?.label?.formatter!(\r\n\t\t\t\t\t\t\tCVData.hookObjs.candleObj.data.latestdisplayLatestCandle\r\n\t\t\t\t\t\t) as string\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresolution={2}\r\n\t\t\t\t\tstyle={\r\n\t\t\t\t\t\tnew PIXI.TextStyle({\r\n\t\t\t\t\t\t\tfontSize:\r\n\t\t\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.viewLastPriceTooltip?.label?.fontsize,\r\n\t\t\t\t\t\t\tfill: PIXI.utils.string2hex(\r\n\t\t\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.viewLastPriceTooltip?.label?.color!\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</>\r\n\t\t);\r\n\t};\r\n\r\n\t/* 创建最后一个candle的tooltip */\r\n\tconst makeLastVolumeTooltip = function () {\r\n\t\tif (\r\n\t\t\t!CVData.hookObjs.candleObj.initArgs.candleStyles?.volumChart!.currentPriceTooltip!.enabled! ||\r\n\t\t\tCVData.hookObjs.candleObj.data.latestVolumeToolTip === null ||\r\n\t\t\t!CVData.hookObjs.candleObj.data.latestVolumeToolTip\r\n\t\t) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<DashedLine\r\n\t\t\t\t\tcolor={PIXI.utils.string2hex(\r\n\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.volumChart!.currentPriceTooltip!.color!\r\n\t\t\t\t\t)}\r\n\t\t\t\t\tsize={CVData.hookObjs.candleObj.data.latestVolumeToolTip.size}\r\n\t\t\t\t\tpositionStart={CVData.hookObjs.candleObj.data.latestVolumeToolTip.position}\r\n\t\t\t\t\tpositionStop={{\r\n\t\t\t\t\t\tx: CVData.hookObjs.candleObj.data.latestVolumeToolTip.length,\r\n\t\t\t\t\t\ty: CVData.hookObjs.candleObj.data.latestVolumeToolTip.position.y,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tdashLength={\r\n\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.volumChart!.currentPriceTooltip!.dashLength!\r\n\t\t\t\t\t}\r\n\t\t\t\t\tspaceLength={\r\n\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.volumChart!.currentPriceTooltip!.spaceLength!\r\n\t\t\t\t\t}\r\n\t\t\t\t></DashedLine>\r\n\r\n\t\t\t\t<Rectangle\r\n\t\t\t\t\tcolor={PIXI.utils.string2hex(\r\n\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.volumChart!.currentPriceTooltip?.label\r\n\t\t\t\t\t\t\t?.backGroundColor!\r\n\t\t\t\t\t)}\r\n\t\t\t\t\tsize={{\r\n\t\t\t\t\t\twidth: CVData.hookObjs.yAxisObj.data.labelSpace,\r\n\t\t\t\t\t\theight: lastDataTooltipTextRef3.current?.height + labelPadding,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tposition={{\r\n\t\t\t\t\t\tx: CVData.hookObjs.yAxisObj.data.linePosition.x,\r\n\t\t\t\t\t\ty: CVData.hookObjs.candleObj.data.latestVolumeToolTip.position.y,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\talignX=\"left\"\r\n\t\t\t\t\talignY=\"center\"\r\n\t\t\t\t></Rectangle>\r\n\t\t\t\t<Rectangle\r\n\t\t\t\t\tcolor={PIXI.utils.string2hex(\r\n\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.volumChart!.currentPriceTooltip?.label?.color!\r\n\t\t\t\t\t)}\r\n\t\t\t\t\tsize={{\r\n\t\t\t\t\t\twidth: CVData.hookObjs.yAxisObj.data.tickLength,\r\n\t\t\t\t\t\theight: CVData.hookObjs.candleObj.data.latestVolumeToolTip.size,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tposition={{\r\n\t\t\t\t\t\tx: CVData.hookObjs.yAxisObj.data.linePosition.x,\r\n\t\t\t\t\t\ty: CVData.hookObjs.candleObj.data.latestVolumeToolTip.position.y,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\talignX=\"left\"\r\n\t\t\t\t\talignY=\"center\"\r\n\t\t\t\t></Rectangle>\r\n\t\t\t\t<Text\r\n\t\t\t\t\tref={lastDataTooltipTextRef3}\r\n\t\t\t\t\tanchor={{ x: 0, y: 0.6 }}\r\n\t\t\t\t\tx={CVData.hookObjs.yAxisObj.data.linePosition.x + CVData.hookObjs.yAxisObj.data.tickLength * 2}\r\n\t\t\t\t\ty={CVData.hookObjs.candleObj.data.latestVolumeToolTip.position.y}\r\n\t\t\t\t\ttext={\r\n\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.volumChart!.currentPriceTooltip?.label\r\n\t\t\t\t\t\t\t?.formatter!(\r\n\t\t\t\t\t\t\tCVData.hookObjs.candleObj.data.latestVolumeToolTip,\r\n\t\t\t\t\t\t\tCVData.initArgs.language\r\n\t\t\t\t\t\t) as string\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresolution={2}\r\n\t\t\t\t\tstyle={\r\n\t\t\t\t\t\tnew PIXI.TextStyle({\r\n\t\t\t\t\t\t\tfontSize:\r\n\t\t\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.volumChart!.currentPriceTooltip?.label\r\n\t\t\t\t\t\t\t\t\t?.fontsize,\r\n\t\t\t\t\t\t\tfill: PIXI.utils.string2hex(\r\n\t\t\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.volumChart!.currentPriceTooltip?.label\r\n\t\t\t\t\t\t\t\t\t?.color!\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</>\r\n\t\t);\r\n\t};\r\n\r\n\t/* 视图范围内最末尾的candle */\r\n\tconst makeLatestVolumeToolTip = function () {\r\n\t\tif (\r\n\t\t\t!CVData.hookObjs.candleObj.initArgs.candleStyles?.volumChart!.viewLastPriceTooltip!.enabled! ||\r\n\t\t\tCVData.hookObjs.candleObj.data.latestdisplayLatestVolume === null ||\r\n\t\t\t!CVData.hookObjs.candleObj.data.latestdisplayLatestVolume\r\n\t\t) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Rectangle\r\n\t\t\t\t\tcolor={PIXI.utils.string2hex(\r\n\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.volumChart!.viewLastPriceTooltip?.label\r\n\t\t\t\t\t\t\t?.backGroundColor!\r\n\t\t\t\t\t)}\r\n\t\t\t\t\tsize={{\r\n\t\t\t\t\t\twidth: CVData.hookObjs.yAxisObj.data.labelSpace,\r\n\t\t\t\t\t\theight: lastDataTooltipTextRef4.current?.height + labelPadding,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tposition={{\r\n\t\t\t\t\t\tx: CVData.hookObjs.yAxisObj.data.linePosition.x,\r\n\t\t\t\t\t\ty: CVData.hookObjs.candleObj.data.latestdisplayLatestVolume.position.y,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\talignX=\"left\"\r\n\t\t\t\t\talignY=\"center\"\r\n\t\t\t\t\topacity={\r\n\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.volumChart!.viewLastPriceTooltip?.label\r\n\t\t\t\t\t\t\t?.backGroundAlpha\r\n\t\t\t\t\t}\r\n\t\t\t\t></Rectangle>\r\n\t\t\t\t<Rectangle\r\n\t\t\t\t\tcolor={PIXI.utils.string2hex(\r\n\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.volumChart!.viewLastPriceTooltip?.label?.color!\r\n\t\t\t\t\t)}\r\n\t\t\t\t\tsize={{\r\n\t\t\t\t\t\twidth: CVData.hookObjs.yAxisObj.data.tickLength,\r\n\t\t\t\t\t\theight: CVData.hookObjs.candleObj.data.latestdisplayLatestVolume.size,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tposition={{\r\n\t\t\t\t\t\tx: CVData.hookObjs.yAxisObj.data.linePosition.x,\r\n\t\t\t\t\t\ty: CVData.hookObjs.candleObj.data.latestdisplayLatestVolume.position.y,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\talignX=\"left\"\r\n\t\t\t\t\talignY=\"center\"\r\n\t\t\t\t></Rectangle>\r\n\t\t\t\t<Text\r\n\t\t\t\t\tref={lastDataTooltipTextRef4}\r\n\t\t\t\t\tanchor={{ x: 0, y: 0.6 }}\r\n\t\t\t\t\tx={CVData.hookObjs.yAxisObj.data.linePosition.x + CVData.hookObjs.yAxisObj.data.tickLength * 2}\r\n\t\t\t\t\ty={CVData.hookObjs.candleObj.data.latestdisplayLatestVolume.position.y}\r\n\t\t\t\t\ttext={\r\n\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.volumChart!.viewLastPriceTooltip?.label\r\n\t\t\t\t\t\t\t?.formatter!(\r\n\t\t\t\t\t\t\tCVData.hookObjs.candleObj.data.latestdisplayLatestVolume,\r\n\t\t\t\t\t\t\tCVData.initArgs.language\r\n\t\t\t\t\t\t) as string\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresolution={2}\r\n\t\t\t\t\tstyle={\r\n\t\t\t\t\t\tnew PIXI.TextStyle({\r\n\t\t\t\t\t\t\tfontSize:\r\n\t\t\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.volumChart!.viewLastPriceTooltip?.label\r\n\t\t\t\t\t\t\t\t\t?.fontsize,\r\n\t\t\t\t\t\t\tfill: PIXI.utils.string2hex(\r\n\t\t\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.volumChart!.viewLastPriceTooltip?.label\r\n\t\t\t\t\t\t\t\t\t?.color!\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</>\r\n\t\t);\r\n\t};\r\n\r\n\t//===============effects==================\r\n\tuseEffect(\r\n\t\tfunction (): ReturnType<React.EffectCallback> {\r\n\t\t\tif (isMounted === false) {\r\n\t\t\t\tsetIsMounted(true);\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tsetupdateTemp(+new Date());\r\n\t\t\t\t}, 500);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[isMounted]\r\n\t);\r\n\r\n\tuseEffect(function (): ReturnType<React.EffectCallback> {\r\n\t\treturn function (): void {\r\n\t\t\tsetIsMounted(false);\r\n\t\t};\r\n\t}, []);\r\n\r\n\t//\r\n\tuseEffect(\r\n\t\tfunction (): ReturnType<React.EffectCallback> {\r\n\t\t\treturn function (): void {\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tsetupdateTemp(+new Date());\r\n\t\t\t\t}, 500);\r\n\t\t\t};\r\n\t\t},\r\n\t\t[CVData.initArgs.timeFormat]\r\n\t);\r\n\r\n\tlet latestCandleToolTip = useMemo(\r\n\t\tfunction () {\r\n\t\t\treturn makeLatestCandleToolTip();\r\n\t\t},\r\n\t\t[\r\n\t\t\t{ ...CVData.hookObjs.candleObj.data.latestdisplayLatestCandle },\r\n\t\t\tupdateTemp,\r\n\t\t\t{ ...CVData.hookObjs.candleObj.initArgs.candleStyles?.viewLastPriceTooltip! },\r\n\t\t]\r\n\t);\r\n\r\n\tlet lastCandleTooltip = useMemo(\r\n\t\tfunction () {\r\n\t\t\treturn makeLastCandleTooltip();\r\n\t\t},\r\n\t\t[\r\n\t\t\t{ ...CVData.hookObjs.candleObj.data.latestCandleToolTip },\r\n\t\t\tupdateTemp,\r\n\t\t\t{ ...CVData.hookObjs.candleObj.initArgs.candleStyles?.currentPriceTooltip! },\r\n\t\t]\r\n\t);\r\n\r\n\tlet LastVolumeTooltip = useMemo(\r\n\t\tfunction () {\r\n\t\t\treturn makeLastVolumeTooltip();\r\n\t\t},\r\n\t\t[\r\n\t\t\t{ ...CVData.hookObjs.candleObj.data.latestVolumeToolTip },\r\n\t\t\tupdateTemp,\r\n\t\t\t{ ...CVData.hookObjs.candleObj.initArgs.candleStyles?.volumChart!.currentPriceTooltip! },\r\n\t\t]\r\n\t);\r\n\r\n\t//\r\n\r\n\tlet LatestVolumeToolTip = useMemo(\r\n\t\tfunction () {\r\n\t\t\treturn makeLatestVolumeToolTip();\r\n\t\t},\r\n\t\t[\r\n\t\t\t{ ...CVData.hookObjs.candleObj.data.latestdisplayLatestVolume },\r\n\t\t\tupdateTemp,\r\n\t\t\t{ ...CVData.hookObjs.candleObj.initArgs.candleStyles?.volumChart!.viewLastPriceTooltip! },\r\n\t\t]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{LatestVolumeToolTip}\r\n\t\t\t{LastVolumeTooltip}\r\n\t\t\t{latestCandleToolTip}\r\n\t\t\t{lastCandleTooltip}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\n//使用memo不让其因为上级节点的更新而频繁更新\r\nexport default memo(DataTooltop);\r\n","/**\r\n * 廖力编写\r\n * 模块名称：\r\n * 模块说明：\r\n * 编写时间：\r\n */\r\nimport React, {\r\n\tuseEffect,\r\n\tuseRef,\r\n\tuseState,\r\n\tforwardRef,\r\n\tuseImperativeHandle,\r\n\tFC,\r\n\tReactElement,\r\n\tmemo,\r\n\tLegacyRef,\r\n\tuseMemo,\r\n} from \"react\";\r\nimport { Stage, Graphics, Container, Text } from \"@pixi/react\";\r\nimport * as PIXI from \"pixi.js\";\r\nimport { DashedLine, Rectangle } from \"../utils/basicShaps\";\r\nimport { useCandleViewPixiContext } from \"..\";\r\nimport { getSpaceSize } from \"../utils/consts\";\r\nimport DataToolTip from \"./dataToolTip\";\r\n\r\n/**\r\n * 传入参数\r\n */\r\nexport interface iprops {}\r\n\r\nconst YAxis: FC<iprops> = ({}, _ref): ReactElement => {\r\n\t//===============useHooks=================\r\n\tconst CVData = useCandleViewPixiContext();\r\n\r\n\t//===============state====================\r\n\tconst [isMounted, setIsMounted] = useState<boolean>(false);\r\n\r\n\t//===============static===================\r\n\tconst labelPadding: number = 10;\r\n\r\n\t//===============ref======================\r\n\tconst tooltipTextRef = useRef<any>(null);\r\n\r\n\t//===============function=================\r\n\t/* 创建tick */\r\n\tconst makeTicks = function () {\r\n\t\tlet result: React.JSX.Element[] = [];\r\n\t\tlet index = 0;\r\n\t\tfor (var item of CVData.hookObjs.yAxisObj.data.displayTickArr) {\r\n\t\t\tresult.push(\r\n\t\t\t\t<Rectangle\r\n\t\t\t\t\tkey={index + \"_a\"}\r\n\t\t\t\t\tcolor={PIXI.utils.string2hex(item.color)}\r\n\t\t\t\t\tsize={{\r\n\t\t\t\t\t\twidth: item.length,\r\n\t\t\t\t\t\theight: item.size,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tposition={item.cPosition}\r\n\t\t\t\t\talignX=\"left\"\r\n\t\t\t\t\talignY=\"center\"\r\n\t\t\t\t></Rectangle>\r\n\t\t\t);\r\n\t\t\tindex++;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t};\r\n\r\n\t/* 创建label */\r\n\tconst makeLabels = function () {\r\n\t\tlet result: React.JSX.Element[] = [];\r\n\t\tlet index = 0;\r\n\t\tfor (var item of CVData.hookObjs.yAxisObj.data.displayTickArr) {\r\n\t\t\tresult.push(\r\n\t\t\t\t<Text\r\n\t\t\t\t\tkey={index + \"_b\"}\r\n\t\t\t\t\tanchor={{ x: 0, y: 0.6 }}\r\n\t\t\t\t\tx={item.cPosition.x + item.length * 2}\r\n\t\t\t\t\ty={item.cPosition.y}\r\n\t\t\t\t\ttext={CVData.hookObjs.yAxisObj.initArgs.formatter!(item)}\r\n\t\t\t\t\tresolution={2}\r\n\t\t\t\t\tstyle={\r\n\t\t\t\t\t\tnew PIXI.TextStyle({\r\n\t\t\t\t\t\t\tfontSize: CVData.hookObjs.yAxisObj.initArgs.fontSize,\r\n\t\t\t\t\t\t\tfill: PIXI.utils.string2hex(CVData.hookObjs.yAxisObj.initArgs.tickColor!),\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t\tindex++;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t};\r\n\r\n\t/* 创建tooltip */\r\n\tconst makeTooltip = function () {\r\n\t\tif (\r\n\t\t\t!CVData.hookObjs.yAxisObj.initArgs.tooltip!.enabled! ||\r\n\t\t\tCVData.hookObjs.yAxisObj.data.tooltipState === null ||\r\n\t\t\t!CVData.hookObjs.yAxisObj.data.tooltipIsShow\r\n\t\t) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<DashedLine\r\n\t\t\t\t\tcolor={PIXI.utils.string2hex(CVData.hookObjs.yAxisObj.initArgs.tooltip!.color!)}\r\n\t\t\t\t\tsize={CVData.hookObjs.yAxisObj.data.tooltipState.size}\r\n\t\t\t\t\tpositionStart={CVData.hookObjs.yAxisObj.data.tooltipState.position}\r\n\t\t\t\t\tpositionStop={{\r\n\t\t\t\t\t\tx: CVData.hookObjs.yAxisObj.data.tooltipState.length,\r\n\t\t\t\t\t\ty: CVData.hookObjs.yAxisObj.data.tooltipState.position.y,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tdashLength={CVData.hookObjs.yAxisObj.initArgs.tooltip!.dashLength!}\r\n\t\t\t\t\tspaceLength={CVData.hookObjs.yAxisObj.initArgs.tooltip!.spaceLength!}\r\n\t\t\t\t></DashedLine>\r\n\r\n\t\t\t\t<Rectangle\r\n\t\t\t\t\tcolor={PIXI.utils.string2hex(CVData.hookObjs.yAxisObj.initArgs.tooltip?.label?.backGroundColor!)}\r\n\t\t\t\t\tsize={{\r\n\t\t\t\t\t\twidth: CVData.hookObjs.yAxisObj.data.labelSpace,\r\n\t\t\t\t\t\theight: tooltipTextRef.current?.height + labelPadding,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tposition={{\r\n\t\t\t\t\t\tx: CVData.hookObjs.yAxisObj.data.linePosition.x,\r\n\t\t\t\t\t\ty: CVData.hookObjs.yAxisObj.data.tooltipState.position.y,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\talignX=\"left\"\r\n\t\t\t\t\talignY=\"center\"\r\n\t\t\t\t></Rectangle>\r\n\t\t\t\t<Rectangle\r\n\t\t\t\t\tcolor={PIXI.utils.string2hex(CVData.hookObjs.yAxisObj.initArgs.tooltip?.label?.color!)}\r\n\t\t\t\t\tsize={{\r\n\t\t\t\t\t\twidth: CVData.hookObjs.yAxisObj.data.tickLength,\r\n\t\t\t\t\t\theight: CVData.hookObjs.yAxisObj.initArgs.tickSize!,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tposition={{\r\n\t\t\t\t\t\tx: CVData.hookObjs.yAxisObj.data.linePosition.x,\r\n\t\t\t\t\t\ty: CVData.hookObjs.yAxisObj.data.tooltipState.position.y,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\talignX=\"left\"\r\n\t\t\t\t\talignY=\"center\"\r\n\t\t\t\t></Rectangle>\r\n\t\t\t\t<Text\r\n\t\t\t\t\tref={tooltipTextRef}\r\n\t\t\t\t\tanchor={{ x: 0, y: 0.6 }}\r\n\t\t\t\t\tx={CVData.hookObjs.yAxisObj.data.linePosition.x + CVData.hookObjs.yAxisObj.data.tickLength * 2}\r\n\t\t\t\t\ty={CVData.hookObjs.yAxisObj.data.tooltipState.position.y}\r\n\t\t\t\t\ttext={\r\n\t\t\t\t\t\tCVData.hookObjs.yAxisObj.initArgs.tooltip?.label?.formatter!(\r\n\t\t\t\t\t\t\tCVData.hookObjs.yAxisObj.data.tooltipState\r\n\t\t\t\t\t\t) as string\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresolution={2}\r\n\t\t\t\t\tstyle={\r\n\t\t\t\t\t\tnew PIXI.TextStyle({\r\n\t\t\t\t\t\t\tfontSize: CVData.hookObjs.yAxisObj.initArgs.tooltip?.label?.fontsize,\r\n\t\t\t\t\t\t\tfill: PIXI.utils.string2hex(CVData.hookObjs.yAxisObj.initArgs.tooltip?.label?.color!),\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</>\r\n\t\t);\r\n\t};\r\n\r\n\t//===============effects==================\r\n\tuseEffect(\r\n\t\tfunction (): ReturnType<React.EffectCallback> {\r\n\t\t\tif (isMounted === false) {\r\n\t\t\t\tsetIsMounted(true);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[isMounted]\r\n\t);\r\n\r\n\tuseEffect(function (): ReturnType<React.EffectCallback> {\r\n\t\treturn function (): void {\r\n\t\t\tsetIsMounted(false);\r\n\t\t};\r\n\t}, []);\r\n\r\n\t/* y轴背景 */\r\n\tlet yBackground = useMemo(\r\n\t\tfunction () {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{/* y轴背景 */}\r\n\t\t\t\t\t<Rectangle\r\n\t\t\t\t\t\tcolor={PIXI.utils.string2hex(CVData.hookObjs.yAxisObj.initArgs.backgroundColor!)}\r\n\t\t\t\t\t\tsize={{\r\n\t\t\t\t\t\t\twidth: CVData.hookObjs.yAxisObj.data.labelSpace,\r\n\t\t\t\t\t\t\theight: CVData.hookObjs.yAxisObj.data.viewSize.height,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tposition={CVData.hookObjs.yAxisObj.data.linePosition}\r\n\t\t\t\t\t\talignX=\"left\"\r\n\t\t\t\t\t\talignY=\"top\"\r\n\t\t\t\t\t></Rectangle>\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t},\r\n\t\t[\r\n\t\t\tCVData.hookObjs.yAxisObj.data.labelSpace,\r\n\t\t\tCVData.hookObjs.yAxisObj.data.viewSize,\r\n\t\t\tCVData.hookObjs.yAxisObj.data.linePosition,\r\n\t\t\tCVData.hookObjs.yAxisObj.data.lineColor,\r\n\t\t\tCVData.hookObjs.yAxisObj.initArgs.backgroundColor,\r\n\t\t]\r\n\t);\r\n\r\n\t{\r\n\t\t/*  y轴 */\r\n\t}\r\n\tlet yAxis = useMemo(\r\n\t\tfunction () {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{/*  y轴 */}\r\n\t\t\t\t\t<Rectangle\r\n\t\t\t\t\t\tcolor={CVData.hookObjs.yAxisObj.data.lineColor}\r\n\t\t\t\t\t\tsize={{\r\n\t\t\t\t\t\t\twidth: CVData.hookObjs.yAxisObj.data.lineSize.size,\r\n\t\t\t\t\t\t\theight: CVData.hookObjs.yAxisObj.data.viewSize.height,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tposition={CVData.hookObjs.yAxisObj.data.linePosition}\r\n\t\t\t\t\t\talignX=\"left\"\r\n\t\t\t\t\t\talignY=\"top\"\r\n\t\t\t\t\t></Rectangle>\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t},\r\n\t\t[\r\n\t\t\tCVData.hookObjs.yAxisObj.data.viewSize,\r\n\t\t\tCVData.hookObjs.yAxisObj.data.lineSize,\r\n\t\t\tCVData.hookObjs.yAxisObj.data.linePosition,\r\n\t\t\tCVData.hookObjs.yAxisObj.data.lineColor,\r\n\t\t]\r\n\t);\r\n\r\n\t/* 创建y轴标 */\r\n\tlet yTicks = useMemo(\r\n\t\tfunction () {\r\n\t\t\treturn makeTicks();\r\n\t\t},\r\n\t\t[CVData.hookObjs.yAxisObj.data.displayTickArr]\r\n\t);\r\n\r\n\t/* 创建label */\r\n\tlet yLabels = useMemo(\r\n\t\tfunction () {\r\n\t\t\treturn makeLabels();\r\n\t\t},\r\n\t\t[CVData.hookObjs.yAxisObj.data.displayTickArr, CVData.hookObjs.yAxisObj.initArgs]\r\n\t);\r\n\r\n\t/* 创建ToolTip */\r\n\tlet tooltip = useMemo(\r\n\t\tfunction () {\r\n\t\t\treturn makeTooltip();\r\n\t\t},\r\n\t\t[\r\n\t\t\tCVData.hookObjs.yAxisObj.data.tooltipState,\r\n\t\t\tCVData.hookObjs.yAxisObj.data.tooltipIsShow,\r\n\t\t\tCVData.hookObjs.yAxisObj.initArgs.tooltip!,\r\n\t\t]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{/* y轴背景 */}\r\n\t\t\t{yBackground}\r\n\t\t\t{/*  y轴 */}\r\n\t\t\t{yAxis}\r\n\t\t\t{/* 创建y轴标 */}\r\n\t\t\t{yTicks}\r\n\t\t\t{/* 创建label */}\r\n\t\t\t{yLabels}\r\n\t\t\t<DataToolTip></DataToolTip>\r\n\t\t\t{/* 创建ToolTip */}\r\n\t\t\t{tooltip}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\n//使用memo不让其因为上级节点的更新而频繁更新\r\nexport default memo(YAxis);\r\n","/**\r\n * 廖力编写\r\n * 模块名称：\r\n * 模块说明：\r\n * 编写时间：\r\n */\r\nimport React, {\r\n\tuseEffect,\r\n\tuseRef,\r\n\tuseState,\r\n\tforwardRef,\r\n\tuseImperativeHandle,\r\n\tFC,\r\n\tReactElement,\r\n\tmemo,\r\n\tLegacyRef,\r\n\tuseMemo,\r\n} from \"react\";\r\nimport { Stage, Graphics, Container, Text, ParticleContainer, Sprite } from \"@pixi/react\";\r\nimport * as PIXI from \"pixi.js\";\r\nimport { DashedLine, Rectangle } from \"../utils/basicShaps\";\r\nimport { useCandleViewPixiContext } from \"..\";\r\nimport { getSpaceSize } from \"../utils/consts\";\r\n\r\n/**\r\n * 传入参数\r\n */\r\nexport interface iprops {}\r\n\r\nconst Data: FC<iprops> = ({}, _ref): ReactElement => {\r\n\t//===============useHooks=================\r\n\tconst CVData = useCandleViewPixiContext();\r\n\r\n\t//===============state====================\r\n\tconst [isMounted, setIsMounted] = useState<boolean>(false);\r\n\r\n\t//===============static===================\r\n\tconst labelPadding: number = 10;\r\n\r\n\t//===============ref======================\r\n\tconst tooltipTextRef = useRef<any>(null);\r\n\r\n\tconst getColor = function (status: \"rise\" | \"fall\", type: \"wick\" | \"candle\"): string {\r\n\t\tif (status === \"rise\" && type === \"wick\") {\r\n\t\t\treturn CVData.initArgs.data?.candleStyles?.wickRiseColor!;\r\n\t\t}\r\n\r\n\t\tif (status === \"fall\" && type === \"wick\") {\r\n\t\t\treturn CVData.initArgs.data?.candleStyles?.wickFallColor!;\r\n\t\t}\r\n\r\n\t\tif (status === \"rise\" && type === \"candle\") {\r\n\t\t\treturn CVData.initArgs.data?.candleStyles?.candleRiseColor!;\r\n\t\t}\r\n\r\n\t\tif (status === \"fall\" && type === \"candle\") {\r\n\t\t\treturn CVData.initArgs.data?.candleStyles?.candleFallColor!;\r\n\t\t}\r\n\t\treturn \"\";\r\n\t};\r\n\r\n\t//===============function=================\r\n\t/* 创建candle */\r\n\tconst makeCandle = function () {\r\n\t\tlet result: React.JSX.Element[] = [];\r\n\r\n\t\tfor (var item of CVData.hookObjs.candleObj.data.displayCandleData) {\r\n\t\t\tresult.push(\r\n\t\t\t\t<Rectangle\r\n\t\t\t\t\tkey={item.time + \"_candle\"}\r\n\t\t\t\t\tcolor={PIXI.utils.string2hex(getColor(item!.candleStateus!, \"candle\"))}\r\n\t\t\t\t\tsize={{\r\n\t\t\t\t\t\twidth: item.candleWidth!,\r\n\t\t\t\t\t\theight: item.candleLength!,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tposition={{\r\n\t\t\t\t\t\tx: item.currentTick!.cPosition.x!,\r\n\t\t\t\t\t\ty: item.candlePixPosition!.y!,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\talignX=\"center\"\r\n\t\t\t\t\talignY=\"top\"\r\n\t\t\t\t></Rectangle>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn result;\r\n\t};\r\n\r\n\t/* 创建wick */\r\n\tconst makeWick = function () {\r\n\t\tlet result: React.JSX.Element[] = [];\r\n\t\tlet index = 0;\r\n\t\tfor (var item of CVData.hookObjs.candleObj.data.displayCandleData) {\r\n\t\t\tif (!item.isEscaped!) {\r\n\t\t\t\tresult.push(\r\n\t\t\t\t\t<Rectangle\r\n\t\t\t\t\t\tkey={item.time + \"_wick\"}\r\n\t\t\t\t\t\tcolor={PIXI.utils.string2hex(getColor(item!.candleStateus!, \"wick\"))}\r\n\t\t\t\t\t\tsize={{\r\n\t\t\t\t\t\t\twidth: item.wickWidth!,\r\n\t\t\t\t\t\t\theight: item.wickLength!,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tposition={{\r\n\t\t\t\t\t\t\tx: item.currentTick!.cPosition.x!,\r\n\t\t\t\t\t\t\ty: item.wickPixPosition!.y!,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\talignX=\"center\"\r\n\t\t\t\t\t\talignY=\"top\"\r\n\t\t\t\t\t></Rectangle>\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(\r\n\t\t\t\t\t<Rectangle\r\n\t\t\t\t\t\tkey={item.time + \"_wick\"}\r\n\t\t\t\t\t\tcolor={0}\r\n\t\t\t\t\t\tsize={{\r\n\t\t\t\t\t\t\twidth: 0,\r\n\t\t\t\t\t\t\theight: 0,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tposition={{\r\n\t\t\t\t\t\t\tx: 0,\r\n\t\t\t\t\t\t\ty: 0,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\talignX=\"center\"\r\n\t\t\t\t\t\talignY=\"top\"\r\n\t\t\t\t\t></Rectangle>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tindex++;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t};\r\n\r\n\t/* 创建candle */\r\n\t//const makeCandle = function () {\r\n\t//\tlet result: React.JSX.Element[] = [];\r\n\t//\r\n\t//\tfor (var item of CVData.hookObjs.candleObj.data.displayCandleData) {\r\n\t//\t\tresult.push(\r\n\t//\t\t\t<Sprite\r\n\t//\t\t\t\tkey={item.time + \"_candle\"}\r\n\t//\t\t\t\twidth={item.candleWidth}\r\n\t//\t\t\t\theight={item.candleLength!}\r\n\t//\t\t\t\tposition={{\r\n\t//\t\t\t\t\tx: item.currentTick!.cPosition.x!,\r\n\t//\t\t\t\t\ty: item.candlePixPosition!.y!,\r\n\t//\t\t\t\t}}\r\n\t//\t\t\t\ttexture={PIXI.Texture.WHITE}\r\n\t//\t\t\t\ttint={PIXI.utils.string2hex(item.candleColor!)}\r\n\t//\t\t\t\tanchor={{ x: 0.5, y: 0 }}\r\n\t//\t\t\t></Sprite>\r\n\t//\t\t);\r\n\t//\t}\r\n\t//\treturn result;\r\n\t//};\r\n\t//\r\n\t//{\r\n\t//\t/* <Rectangle\r\n\t//\r\n\t//\t\t\t\tcolor={PIXI.utils.string2hex(item.candleColor!)}\r\n\t//\t\t\t\tsize={{\r\n\t//\t\t\t\t\twidth: item.candleWidth!,\r\n\t//\t\t\t\t\theight: item.candleLength!,\r\n\t//\t\t\t\t}}\r\n\t//\t\t\t\tposition={{\r\n\t//\t\t\t\t\tx: item.currentTick!.cPosition.x!,\r\n\t//\t\t\t\t\ty: item.candlePixPosition!.y!,\r\n\t//\t\t\t\t}}\r\n\t//\t\t\t\talignX=\"center\"\r\n\t//\t\t\t\talignY=\"top\"\r\n\t//\t\t\t></Rectangle> */\r\n\t//}\r\n\t//\r\n\t///* 创建wick */\r\n\t//const makeWick = function () {\r\n\t//\tlet result: React.JSX.Element[] = [];\r\n\t//\tlet index = 0;\r\n\t//\tfor (var item of CVData.hookObjs.candleObj.data.displayCandleData) {\r\n\t//\t\tif (!item.isEscaped!) {\r\n\t//\t\t\tresult.push(\r\n\t//\t\t\t\t<Sprite\r\n\t//\t\t\t\t\tkey={item.time + \"_wick\"}\r\n\t//\t\t\t\t\twidth={item.wickWidth!}\r\n\t//\t\t\t\t\theight={item.wickLength!}\r\n\t//\t\t\t\t\tposition={{\r\n\t//\t\t\t\t\t\tx: item.currentTick!.cPosition.x!,\r\n\t//\t\t\t\t\t\ty: item.wickPixPosition!.y!,\r\n\t//\t\t\t\t\t}}\r\n\t//\t\t\t\t\ttexture={PIXI.Texture.WHITE}\r\n\t//\t\t\t\t\ttint={PIXI.utils.string2hex(item.wickColor!)}\r\n\t//\t\t\t\t\tanchor={{ x: 0.5, y: 0 }}\r\n\t//\t\t\t\t></Sprite>\r\n\t//\t\t\t);\r\n\t//\t\t} else {\r\n\t//\t\t\tresult.push(\r\n\t//\t\t\t\t<Sprite\r\n\t//\t\t\t\t\tkey={item.time + \"_wick\"}\r\n\t//\t\t\t\t\twidth={0}\r\n\t//\t\t\t\t\theight={0}\r\n\t//\t\t\t\t\tposition={{\r\n\t//\t\t\t\t\t\tx: 0,\r\n\t//\t\t\t\t\t\ty: 0,\r\n\t//\t\t\t\t\t}}\r\n\t//\t\t\t\t></Sprite>\r\n\t//\t\t\t);\r\n\t//\t\t}\r\n\t//\t\tindex++;\r\n\t//\t}\r\n\t//\r\n\t//\treturn result;\r\n\t//};\r\n\r\n\t//===============effects==================\r\n\tuseEffect(\r\n\t\tfunction (): ReturnType<React.EffectCallback> {\r\n\t\t\tif (isMounted === false) {\r\n\t\t\t\tsetIsMounted(true);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[isMounted]\r\n\t);\r\n\r\n\tuseEffect(function (): ReturnType<React.EffectCallback> {\r\n\t\treturn function (): void {\r\n\t\t\tsetIsMounted(false);\r\n\t\t};\r\n\t}, []);\r\n\r\n\tlet candle = useMemo(\r\n\t\tfunction () {\r\n\t\t\treturn (function () {\r\n\t\t\t\tif (CVData.hookObjs.candleObj.data.displayCandleData.length === 0) {\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t}\r\n\t\t\t\tif (!CVData.hookObjs.candleObj.data.isDQuickUpdateing) {\r\n\t\t\t\t\treturn makeCandle();\r\n\t\t\t\t}\r\n\t\t\t\treturn [];\r\n\t\t\t})();\r\n\t\t},\r\n\t\t[\r\n\t\t\tCVData.hookObjs.candleObj.data.displayCandleData,\r\n\t\t\tCVData.hookObjs.candleObj.data.isDQuickUpdateing,\r\n\t\t\tCVData.initArgs.data!.candleStyles!.candleFallColor!,\r\n\t\t\tCVData.initArgs.data!.candleStyles!.candleRiseColor!,\r\n\t\t]\r\n\t);\r\n\r\n\tlet wick = useMemo(\r\n\t\tfunction () {\r\n\t\t\tif (CVData.hookObjs.candleObj.data.displayCandleData.length === 0) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\treturn makeWick();\r\n\t\t},\r\n\t\t[\r\n\t\t\tCVData.hookObjs.candleObj.data.displayCandleData,\r\n\t\t\tCVData.hookObjs.candleObj.data.isDQuickUpdateing,\r\n\t\t\tCVData.initArgs.data!.candleStyles!.wickFallColor!,\r\n\t\t\tCVData.initArgs.data!.candleStyles!.wickFallColor!,\r\n\t\t]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Container\r\n\t\t\t\tx={CVData.hookObjs.xAxisObj.data.x}\r\n\t\t\t\ty={CVData.hookObjs.candleObj.data.miny}\r\n\t\t\t\tscale={{ x: 1, y: CVData.hookObjs.candleObj.data.yScale }}\r\n\t\t\t>\r\n\t\t\t\t{wick}\r\n\t\t\t\t{candle}\r\n\t\t\t</Container>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\n//使用memo不让其因为上级节点的更新而频繁更新\r\nexport default memo(Data);\r\n","/**\r\n * 廖力编写\r\n * 模块名称：\r\n * 模块说明：\r\n * 编写时间：\r\n */\r\nimport React, {\r\n  useEffect,\r\n  useState,\r\n  FC,\r\n  ReactElement,\r\n  memo,\r\n  useMemo,\r\n} from 'react';\r\nimport { Container } from '@pixi/react';\r\nimport * as PIXI from 'pixi.js';\r\nimport { Rectangle } from '../utils/basicShaps';\r\nimport { useCandleViewPixiContext } from '..';\r\n\r\n/**\r\n * 传入参数\r\n */\r\nexport interface iprops {}\r\n\r\nconst NetLines: FC<iprops> = ({}, _ref): ReactElement => {\r\n  //===============useHooks=================\r\n  const CVData = useCandleViewPixiContext();\r\n\r\n  //===============state====================\r\n  const [isMounted, setIsMounted] = useState<boolean>(false);\r\n\r\n  //===============static===================\r\n\r\n  //===============ref======================\r\n\r\n  //===============function=================\r\n\r\n  /* 创建网格线 */\r\n  const makeNetLinesx = function() {\r\n    let result: React.JSX.Element[] = [];\r\n    let index = 0;\r\n    for (var item of CVData.hookObjs.xAxisObj.data.netLineArr) {\r\n      result.push(\r\n        <React.Fragment key={index + '_c'}>\r\n          <Rectangle\r\n            color={PIXI.utils.string2hex(\r\n              CVData.hookObjs.xAxisObj.initArgs.netLineColor!\r\n            )}\r\n            size={{\r\n              width: item.size,\r\n              height: item.length,\r\n            }}\r\n            position={item.cPosition}\r\n            alignX=\"center\"\r\n            alignY=\"top\"\r\n          ></Rectangle>\r\n        </React.Fragment>\r\n      );\r\n      index++;\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  const makeNetLinesy = function() {\r\n    let result: React.JSX.Element[] = [];\r\n    let index = 0;\r\n    for (var item of CVData.hookObjs.yAxisObj.data.netLineArr) {\r\n      result.push(\r\n        <React.Fragment key={index + '_b'}>\r\n          <Rectangle\r\n            color={PIXI.utils.string2hex(\r\n              CVData.hookObjs.yAxisObj.initArgs.netLineColor!\r\n            )}\r\n            size={{\r\n              width: item.length,\r\n              height: item.size,\r\n            }}\r\n            position={item.cPosition}\r\n            alignX=\"left\"\r\n            alignY=\"center\"\r\n          ></Rectangle>\r\n        </React.Fragment>\r\n      );\r\n      index++;\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  //===============effects==================\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      if (isMounted === false) {\r\n        setIsMounted(true);\r\n      }\r\n    },\r\n    [isMounted]\r\n  );\r\n\r\n  useEffect(function(): ReturnType<React.EffectCallback> {\r\n    return function(): void {\r\n      setIsMounted(false);\r\n    };\r\n  }, []);\r\n\r\n  let netLinesx = useMemo(\r\n    function() {\r\n      return makeNetLinesx();\r\n    },\r\n    [\r\n      CVData.hookObjs.xAxisObj.data.netLineArr,\r\n      CVData.hookObjs.xAxisObj.initArgs.netLineColor,\r\n    ]\r\n  );\r\n\r\n  let netLinesy = useMemo(\r\n    function() {\r\n      return makeNetLinesy();\r\n    },\r\n    [\r\n      CVData.hookObjs.yAxisObj.data.netLineArr,\r\n      CVData.hookObjs.yAxisObj.initArgs.netLineColor,\r\n    ]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {/* 创建轴网格线 */}\r\n      <Container x={CVData.hookObjs.xAxisObj.data.x}>\r\n        <>{netLinesx}</>\r\n      </Container>\r\n      {netLinesy}\r\n    </>\r\n  );\r\n};\r\n\r\n//使用memo不让其因为上级节点的更新而频繁更新\r\nexport default memo(NetLines);\r\n","/**\r\n * 廖力编写\r\n * 模块名称：\r\n * 模块说明：\r\n * 编写时间：\r\n */\r\nimport React, {\r\n  useEffect,\r\n  useState,\r\n  FC,\r\n  ReactElement,\r\n  memo,\r\n  useMemo,\r\n} from 'react';\r\nimport { Container } from '@pixi/react';\r\nimport * as PIXI from 'pixi.js';\r\nimport { Rectangle } from '../utils/basicShaps';\r\nimport { useCandleViewPixiContext } from '..';\r\n\r\n/**\r\n * 传入参数\r\n */\r\nexport interface iprops {}\r\n\r\nconst VolumChat: FC<iprops> = ({}, _ref): ReactElement => {\r\n  //===============useHooks=================\r\n  const CVData = useCandleViewPixiContext();\r\n\r\n  //===============state====================\r\n  const [isMounted, setIsMounted] = useState<boolean>(false);\r\n\r\n  //===============function=================\r\n  /* 创建volume */\r\n  const makeChat = function() {\r\n    if (!CVData.hookObjs.candleObj.initArgs.candleStyles!.volumChart!.enabled) {\r\n      return [];\r\n    }\r\n    let result: React.JSX.Element[] = [];\r\n    let index = 0;\r\n\r\n    for (var item of CVData.hookObjs.candleObj.data.displayCandleData) {\r\n      let alpha =\r\n        CVData.hookObjs.candleObj.initArgs.candleStyles?.volumChart?.alpha;\r\n      let currentHeight =\r\n        CVData.hookObjs.candleObj.data.volumChartPixHeight *\r\n        (Number(item.volume) /\r\n          CVData.hookObjs.candleObj.data.volumChartViewMax);\r\n\r\n      if (!item.isEscaped!) {\r\n        result.push(\r\n          <Rectangle\r\n            key={item.time + '_volume'}\r\n            color={PIXI.utils.string2hex(\r\n              (function() {\r\n                if (item.candleStateus === 'rise') {\r\n                  return CVData.hookObjs.candleObj.initArgs.candleStyles!\r\n                    .volumChart!.riseColor!;\r\n                }\r\n                return CVData.hookObjs.candleObj.initArgs.candleStyles!\r\n                  .volumChart!.fallColor!;\r\n              })()\r\n            )}\r\n            opacity={(function() {\r\n              if (!CVData.hookObjs.candleObj.data.isDQuickUpdateing) {\r\n                return alpha;\r\n              }\r\n              return 1;\r\n            })()}\r\n            size={{\r\n              width: (function() {\r\n                if (!CVData.hookObjs.candleObj.data.isDQuickUpdateing) {\r\n                  return item.candleWidth!;\r\n                }\r\n                return 1;\r\n              })(),\r\n              height: currentHeight,\r\n            }}\r\n            position={{\r\n              x: item.currentTick!.cPosition.x!,\r\n              y: CVData.hookObjs.xAxisObj.data.linePosition.y,\r\n            }}\r\n            alignX=\"center\"\r\n            alignY=\"bottom\"\r\n          ></Rectangle>\r\n        );\r\n      } else {\r\n        result.push(\r\n          <React.Fragment key={item.time + '_volume'}></React.Fragment>\r\n        );\r\n      }\r\n\r\n      index++;\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  /* \t\tconst makeChat = function () {\r\n\t\t\tlet result: React.JSX.Element[] = [];\r\n\t\t\tlet index = 0;\r\n\r\n\t\t\tfor (var item of CVData.hookObjs.candleObj.data.displayCandleData) {\r\n\t\t\t\tlet alpha = CVData.hookObjs.candleObj.initArgs.candleStyles?.volumChart?.alpha;\r\n\t\t\t\tlet currentHeight =\r\n\t\t\t\t\tCVData.hookObjs.candleObj.data.volumChartPixHeight *\r\n\t\t\t\t\t(Number(item.volume) / CVData.hookObjs.candleObj.data.volumChartViewMax);\r\n\r\n\t\t\t\tif (!item.isEscaped!) {\r\n\t\t\t\t\tresult.push(\r\n\t\t\t\t\t\t<Sprite\r\n\t\t\t\t\t\t\tkey={item.time + \"_volume\"}\r\n\t\t\t\t\t\t\twidth={(function () {\r\n\t\t\t\t\t\t\t\tif (!CVData.hookObjs.candleObj.data.isDQuickUpdateing) {\r\n\t\t\t\t\t\t\t\t\treturn item.candleWidth!;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\t\t\t})()}\r\n\t\t\t\t\t\t\theight={currentHeight}\r\n\t\t\t\t\t\t\tposition={{\r\n\t\t\t\t\t\t\t\tx: item.currentTick!.cPosition.x!,\r\n\t\t\t\t\t\t\t\ty: CVData.hookObjs.xAxisObj.data.linePosition.y,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttexture={PIXI.Texture.WHITE}\r\n\t\t\t\t\t\t\ttint={PIXI.utils.string2hex(\r\n\t\t\t\t\t\t\t\t(function () {\r\n\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\titem.candleColor! ===\r\n\t\t\t\t\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles!.candleRiseColor!\r\n\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\treturn CVData.hookObjs.candleObj.initArgs.candleStyles!.volumChart!.riseColor!;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\treturn CVData.hookObjs.candleObj.initArgs.candleStyles!.volumChart!.fallColor!;\r\n\t\t\t\t\t\t\t\t})()\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\talpha={(function () {\r\n\t\t\t\t\t\t\t\tif (!CVData.hookObjs.candleObj.data.isDQuickUpdateing) {\r\n\t\t\t\t\t\t\t\t\treturn CVData.hookObjs.candleObj.initArgs.candleStyles!.volumChart!.alpha;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\t\t\t})()}\r\n\t\t\t\t\t\t\tanchor=\"0.5,1\"\r\n\t\t\t\t\t\t></Sprite>\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.push(<React.Fragment key={item.time + \"_volume\"}></React.Fragment>);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}; */\r\n\r\n  //===============effects==================\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      if (isMounted === false) {\r\n        setIsMounted(true);\r\n      }\r\n    },\r\n    [isMounted]\r\n  );\r\n\r\n  useEffect(function(): ReturnType<React.EffectCallback> {\r\n    return function(): void {\r\n      setIsMounted(false);\r\n    };\r\n  }, []);\r\n\r\n  let chat = useMemo(\r\n    function() {\r\n      return makeChat();\r\n    },\r\n    [\r\n      CVData.hookObjs.candleObj.data.displayCandleData,\r\n      CVData.hookObjs.candleObj.data.isDQuickUpdateing,\r\n      CVData.hookObjs.candleObj.data.volumChartViewMax,\r\n      CVData.hookObjs.candleObj.data.volumChartPixHeight,\r\n      CVData.hookObjs.candleObj.initArgs.candleStyles!.volumChart!.riseColor,\r\n      CVData.hookObjs.candleObj.initArgs.candleStyles!.volumChart!.fallColor,\r\n      CVData.hookObjs.candleObj.initArgs.candleStyles!.volumChart!.alpha,\r\n      CVData.hookObjs.candleObj.initArgs.candleStyles!.volumChart!.enabled,\r\n    ]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Container x={CVData.hookObjs.xAxisObj.data.x}>{chat}</Container>\r\n    </>\r\n  );\r\n};\r\n\r\n//使用memo不让其因为上级节点的更新而频繁更新\r\nexport default memo(VolumChat);\r\n","/**\r\n * 廖力编写\r\n * 模块名称：\r\n * 模块说明：\r\n * 编写时间：\r\n */\r\nimport React, { useEffect, useState, FC, ReactElement, useMemo } from 'react';\r\nimport '../index.css';\r\nimport { useCandleViewContext } from '../context/candleViewContext';\r\nimport { thousandsSplit } from '../utils/consts';\r\nimport BigNumber from 'bignumber.js';\r\nimport { tickItem } from '../interface/itemsInterFace';\r\nimport { LANGUAGES } from '../utils/languages';\r\n\r\n/**\r\n * 传入参数\r\n */\r\nexport interface iprops {}\r\n\r\nconst Info: FC<iprops> = ({}, _ref): ReactElement => {\r\n  //===============useHooks=================\r\n  const CVData = useCandleViewContext();\r\n\r\n  //===============state====================\r\n  const [isMounted, setIsMounted] = useState<boolean>(false);\r\n\r\n  //===============static===================\r\n\r\n  //===============ref======================\r\n\r\n  //===============function=================\r\n  const makeInfo = function() {\r\n    if (!CVData.initArgs.enableinfo) {\r\n      return null;\r\n    }\r\n\r\n    if (\r\n      CVData.hookObjs.xAxisObj!.data!.tooltipState !== null &&\r\n      CVData.hookObjs.xAxisObj.data.tooltipIsShow &&\r\n      typeof CVData.hookObjs.candleObj.data.cursorCandleItem !== 'undefined' &&\r\n      CVData.hookObjs.candleObj.data.cursorCandleItem !== null\r\n    ) {\r\n      let _tooltipState = CVData.hookObjs.xAxisObj!.data!.tooltipState!;\r\n      let item = CVData.hookObjs.candleObj.data.cursorCandleItem;\r\n      return (\r\n        <>\r\n          <div className={'info'}>\r\n            <div className={'timetype'}>\r\n              <label>\r\n                {\r\n                  LANGUAGES[CVData.initArgs.language!].timeFormat[\r\n                    CVData.hookObjs.xAxisObj.data.currentTimeType?.lang!\r\n                  ]\r\n                }\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <span>Date:</span>\r\n              <label>\r\n                {CVData.hookObjs.xAxisObj.initArgs.tooltip?.label?.formatter!(\r\n                  _tooltipState.relatedTickItem!\r\n                )}\r\n              </label>\r\n\r\n              <label>GMT +{CVData.initArgs.timeZone?.displayTimeZone}</label>\r\n            </div>\r\n            <div>\r\n              <span>Open:</span>\r\n              <label>\r\n                {thousandsSplit(Number(new BigNumber(item.open).toFixed(3)))}\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <span>Close:</span>\r\n              <label>\r\n                {thousandsSplit(Number(new BigNumber(item.close).toFixed(3)))}\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <span>High:</span>\r\n              <label>\r\n                {thousandsSplit(Number(new BigNumber(item.high).toFixed(3)))}\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <span>Low:</span>\r\n              <label>\r\n                {thousandsSplit(Number(new BigNumber(item.low).toFixed(3)))}\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <span>Volume:</span>\r\n              <label>\r\n                {thousandsSplit(Number(new BigNumber(item.volume).toFixed(3)))}\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    } else if (CVData.hookObjs.candleObj.data.latestCandleItem !== null) {\r\n      let currentItem = CVData.hookObjs.candleObj.data.latestCandleItem;\r\n      return (\r\n        <>\r\n          <div className={'info'}>\r\n            <div className={'timetype'}>\r\n              <label>\r\n                {\r\n                  LANGUAGES[CVData.initArgs.language!].timeFormat[\r\n                    CVData.hookObjs.xAxisObj.data.currentTimeType?.lang!\r\n                  ]\r\n                }\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <span>Date:</span>\r\n              <label>\r\n                {CVData.hookObjs.xAxisObj.initArgs.tooltip?.label?.formatter!({\r\n                  value: currentItem.time,\r\n                } as tickItem)}\r\n              </label>\r\n              <label>GMT +{CVData.initArgs.timeZone?.displayTimeZone}</label>\r\n            </div>\r\n            <div>\r\n              <span>Open:</span>\r\n              <label>\r\n                {thousandsSplit(\r\n                  Number(new BigNumber(currentItem.open).toFixed(3))\r\n                )}\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <span>Current:</span>\r\n              <label>\r\n                {thousandsSplit(\r\n                  Number(new BigNumber(currentItem.close).toFixed(3))\r\n                )}\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <span>High:</span>\r\n              <label>\r\n                {thousandsSplit(\r\n                  Number(new BigNumber(currentItem.high).toFixed(3))\r\n                )}\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <span>Low:</span>\r\n              <label>\r\n                {thousandsSplit(\r\n                  Number(new BigNumber(currentItem.low).toFixed(3))\r\n                )}\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <span>Volume:</span>\r\n              <label>\r\n                {thousandsSplit(\r\n                  Number(new BigNumber(currentItem.volume).toFixed(3))\r\n                )}\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  //===============effects==================\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      if (isMounted === false) {\r\n        setIsMounted(true);\r\n      }\r\n    },\r\n    [isMounted]\r\n  );\r\n\r\n  useEffect(function(): ReturnType<React.EffectCallback> {\r\n    return function(): void {\r\n      setIsMounted(false);\r\n    };\r\n  }, []);\r\n\r\n  let title = useMemo(\r\n    function() {\r\n      if (CVData.initArgs.enableTitle) {\r\n        return <div className={'title'}>{CVData.initArgs.title}</div>;\r\n      }\r\n      return null;\r\n    },\r\n    [CVData.initArgs.title]\r\n  );\r\n\r\n  let infoLayer = useMemo(\r\n    function() {\r\n      return makeInfo();\r\n    },\r\n    [\r\n      CVData.hookObjs.candleObj.data.latestCandleItem,\r\n      CVData.hookObjs.xAxisObj.data.tooltipIsShow,\r\n      CVData.hookObjs.candleObj.data.cursorCandleItem,\r\n    ]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div className={'infoDisplayLayer'}>\r\n        <>\r\n          {title}\r\n          {infoLayer}\r\n        </>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Info;\r\n","/**\r\n * 廖力编写\r\n * 模块名称：\r\n * 模块说明：\r\n * 编写时间：\r\n */\r\nimport React, { useEffect, useState, FC, ReactElement } from 'react';\r\nimport '../assets/styles/loaddingLay.css';\r\nimport { useCandleViewContext } from '../context/candleViewContext';\r\n\r\n/**\r\n * 传入参数\r\n */\r\nexport interface iprops {\r\n  color?: 'black' | 'white';\r\n}\r\n\r\nconst Loading: FC<iprops> = ({ color = 'black' }, _ref): ReactElement => {\r\n  //===============useHooks=================\r\n  const CVData = useCandleViewContext();\r\n\r\n  //===============state====================\r\n  const [isMounted, setIsMounted] = useState<boolean>(false);\r\n\r\n  //===============static===================\r\n\r\n  //===============ref======================\r\n\r\n  //===============function=================\r\n\r\n  //===============effects==================\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      if (isMounted === false) {\r\n        setIsMounted(true);\r\n      }\r\n    },\r\n    [isMounted]\r\n  );\r\n\r\n  useEffect(function(): ReturnType<React.EffectCallback> {\r\n    return function(): void {\r\n      setIsMounted(false);\r\n    };\r\n  }, []);\r\n\r\n  if (\r\n    CVData.initArgs.data?.dynamicData?.showLoading &&\r\n    CVData.hookObjs.candleObj.data.isFetchingData\r\n  ) {\r\n    return (\r\n      <>\r\n        <div className={'cdcdv_l_container' + ' ' + color}></div>\r\n      </>\r\n    );\r\n  } else if (!CVData.hookObjs.candleObj.data.isFinishedInit) {\r\n    return (\r\n      <>\r\n        <div className={'cdcdv_l_container' + ' ' + color}></div>\r\n      </>\r\n    );\r\n  }\r\n  {\r\n    return <></>;\r\n  }\r\n};\r\nexport default Loading;\r\n","/**\r\n * 廖力编写\r\n * 模块名称：交易图表\r\n * 模块说明：用于模仿tradingView做的交易实时图表\r\n * 编写时间：2024年5月25日 00:30:05\r\n */\r\nimport React, {\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n  forwardRef,\r\n  useImperativeHandle,\r\n  FC,\r\n  ReactElement,\r\n  createContext,\r\n  useContext,\r\n  MouseEventHandler,\r\n  MouseEvent,\r\n  WheelEvent,\r\n  memo,\r\n  TouchEvent,\r\n} from 'react';\r\nimport { Stage, Container, Sprite, PixiComponent } from '@pixi/react';\r\nimport * as PIXI from 'pixi.js';\r\nimport useJquery, {\r\n  jQueryObject,\r\n  isRunningInServer,\r\n} from '@bobliao/use-jquery-hook';\r\nimport './index.css';\r\nimport {\r\n  IuseCandleViewContext,\r\n  useCandleViewContext,\r\n} from './context/candleViewContext';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\nimport useDebounce from './hooks/debounceHook';\r\nimport { getLength, getSpaceSize } from './utils/consts';\r\nimport XAxis from './com/xAxis';\r\nimport { IcandleViewContext } from './interface/contextInterFace';\r\nimport { pointCoord } from './interface/itemsInterFace';\r\nimport YAxis from './com/yAxis';\r\nimport Data from './com/data';\r\nimport NetLines from './com/netLines';\r\nimport DataToolTip from './com/dataToolTip';\r\nimport VolumChart from './com/volumChart';\r\nimport Info from './com/info';\r\nimport Loading from './com/loadingLay';\r\n\r\n/**\r\n * 传入参数\r\n */\r\nexport interface iprops {}\r\n\r\n/**\r\n * 创建一个需要全局使用的钱包context\r\n **/\r\nexport const candleViewPixiContext = createContext<IcandleViewContext>(\r\n  {} as IcandleViewContext\r\n);\r\nexport const useCandleViewPixiContext: IuseCandleViewContext = function(): IcandleViewContext {\r\n  var r: IcandleViewContext = useContext(candleViewPixiContext);\r\n  return r;\r\n};\r\n\r\nexport const CandleView: FC<iprops> = memo(\r\n  ({}, _ref): ReactElement => {\r\n    //===============useHooks=================\r\n    const CVData = useCandleViewContext();\r\n    const $ = useJquery();\r\n    const resizeDebounce = useDebounce();\r\n\r\n    //===============state====================\r\n    const [isMounted, setIsMounted] = useState<boolean>(false);\r\n\r\n    /**\r\n     *组件当前位置\r\n     */\r\n    const [offset, setoffset] = useState<pointCoord>({ x: 0, y: 0 });\r\n\r\n    /* 鼠标在组件中的位置 */\r\n    const [relativePosition, setrelativePosition] = useState<pointCoord>({\r\n      x: 0,\r\n      y: 0,\r\n    });\r\n\r\n    /**\r\n     *鼠标是否按下\r\n     */\r\n    const [isMouseDown, setisMouseDown] = useState<boolean>(false);\r\n\r\n    /**\r\n     *鼠标按下时的位置\r\n     */\r\n    const [mouseDownPosition, setmouseDownPosition] = useState<pointCoord>({\r\n      x: 0,\r\n      y: 0,\r\n    });\r\n\r\n    /**\r\n     *鼠标实时位置\r\n     */\r\n    const [mousePosition, setmousePosition] = useState<pointCoord>({\r\n      x: 0,\r\n      y: 0,\r\n    });\r\n    const [touchScaleStartLength, settouchScaleStartLength] = useState<number>(\r\n      0\r\n    );\r\n\r\n    /**\r\n     *是否触摸缩放\r\n     */\r\n    const [isTouchScale, setisTouchScale] = useState<boolean>(false);\r\n\r\n    //===============static===================\r\n\r\n    //===============ref======================\r\n    const canvasConatiner = useRef<HTMLDivElement>(null);\r\n    const resizeObserverRef = useRef<ResizeObserver | null>(null);\r\n\r\n    //===============function=================\r\n\r\n    /**\r\n     *初始化CandleView\r\n     */\r\n    const initCandleView = async function(): Promise<void> {\r\n      //获得画布尺寸\r\n      getCanvasSize();\r\n\r\n      //创建resize\r\n      createResizeObserver();\r\n\r\n      //初始化背景颜色\r\n      CVData.funcs.setcanvasBackgroundColor(CVData.initArgs.backgroundColor!);\r\n    };\r\n\r\n    /**\r\n     *获得画布尺寸\r\n     */\r\n    const getCanvasSize = function() {\r\n      if (CVData.initArgs.height! === 'auto') {\r\n        $(canvasConatiner.current)\r\n          .parent()\r\n          .css('overflow', 'hidden');\r\n        $(canvasConatiner.current)\r\n          .parent()\r\n          .css('position', 'relative');\r\n      }\r\n\r\n      //如果放在容器里但是没指定容器高度\r\n      if (\r\n        $(canvasConatiner.current)\r\n          .parent()\r\n          .height() === 0 &&\r\n        CVData.initArgs.height! === 'auto'\r\n      ) {\r\n        $(canvasConatiner.current)\r\n          .parent()\r\n          .height(500);\r\n      }\r\n\r\n      //如果没有放在特定容器里\r\n      if (\r\n        $(canvasConatiner.current).parent() !== 0 &&\r\n        CVData.initArgs.height! === 'auto' &&\r\n        ($(canvasConatiner.current).next().length !== 0 ||\r\n          $(canvasConatiner.current).prev().length !== 0)\r\n      ) {\r\n        CVData.initArgs.height = 500;\r\n      }\r\n\r\n      //设置宽度\r\n      CVData.funcs.setcanvasWidth(\r\n        //\r\n        getSpaceSize(\r\n          //\r\n          CVData.initArgs.width!,\r\n          $(canvasConatiner.current)\r\n            .parent()\r\n            .width()\r\n        )\r\n      );\r\n\r\n      //设置高度\r\n      CVData.funcs.setcanvasHeight(\r\n        //\r\n        getSpaceSize(\r\n          //\r\n          CVData.initArgs.height!,\r\n          $(canvasConatiner.current)\r\n            .parent()\r\n            .height()\r\n        )\r\n      );\r\n\r\n      let offset: any = $(canvasConatiner.current).offset();\r\n      //获得组件当前位置\r\n      setoffset({ x: offset.left, y: offset.top });\r\n    };\r\n\r\n    /**\r\n     *创建reasize\r\n     */\r\n    const createResizeObserver = function() {\r\n      if (canvasConatiner.current !== null) {\r\n        resizeObserverRef.current = new ResizeObserver(entries => {\r\n          if (entries.length > 0) {\r\n            if (CVData.initArgs.resizeDebounceTime !== 0) {\r\n              resizeDebounce(function() {\r\n                getCanvasSize();\r\n              }, CVData.initArgs.resizeDebounceTime!);\r\n            } else {\r\n              getCanvasSize();\r\n            }\r\n          }\r\n        });\r\n        //监听它的上级的大小变化\r\n        resizeObserverRef.current.observe(\r\n          $(canvasConatiner.current).parent()[0]\r\n        );\r\n      }\r\n    };\r\n\r\n    /**\r\n     *清除resize\r\n     */\r\n    const clearObserver = function() {\r\n      if (resizeObserverRef.current !== null) {\r\n        resizeObserverRef.current.disconnect();\r\n        resizeObserverRef.current = null;\r\n      }\r\n    };\r\n    /* 触摸 */\r\n    const onTouchStartContainer = function(event: TouchEvent<HTMLDivElement>) {\r\n      //开启了正在加载时阻止用户操作\r\n      if (\r\n        CVData.initArgs.data?.dynamicData?.stopUserOperateWhenLoading ===\r\n          true &&\r\n        CVData.hookObjs.candleObj.data.isFetchingData\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      if (\r\n        typeof event.targetTouches[0] !== 'undefined' &&\r\n        typeof event.targetTouches[1] !== 'undefined'\r\n      ) {\r\n        setisTouchScale(true);\r\n        settouchScaleStartLength(\r\n          getLength(\r\n            {\r\n              x: event.targetTouches[0].pageX,\r\n              y: event.targetTouches[0].pageY,\r\n            },\r\n            { x: event.targetTouches[1].pageX, y: event.targetTouches[1].pageY }\r\n          )\r\n        );\r\n        return;\r\n      }\r\n      setisMouseDown(true);\r\n      setmouseDownPosition({\r\n        x: event.targetTouches[0].pageX,\r\n        y: event.targetTouches[0].pageY,\r\n      });\r\n      setmousePosition({\r\n        x: event.targetTouches[0].pageX,\r\n        y: event.targetTouches[0].pageY,\r\n      });\r\n      setrelativePosition({\r\n        x: event.targetTouches[0].pageX - offset.x,\r\n        y: event.targetTouches[0].pageY - offset.y,\r\n      });\r\n    };\r\n    const onTouchMoveContainer = function(event: TouchEvent<HTMLDivElement>) {\r\n      //开启了正在加载时阻止用户操作\r\n      if (\r\n        CVData.initArgs.data?.dynamicData?.stopUserOperateWhenLoading ===\r\n          true &&\r\n        CVData.hookObjs.candleObj.data.isFetchingData\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      if (\r\n        typeof event.targetTouches[0] !== 'undefined' &&\r\n        typeof event.targetTouches[1] !== 'undefined'\r\n      ) {\r\n        let left = Math.min(\r\n          event.targetTouches[0].pageX,\r\n          event.targetTouches[1].pageX\r\n        );\r\n        let right = Math.max(\r\n          event.targetTouches[0].pageX,\r\n          event.targetTouches[1].pageX\r\n        );\r\n        let point = (right - left) / 2 + left;\r\n\r\n        let length = getLength(\r\n          { x: event.targetTouches[0].pageX, y: event.targetTouches[0].pageY },\r\n          { x: event.targetTouches[1].pageX, y: event.targetTouches[1].pageY }\r\n        );\r\n\r\n        if (Math.abs(length - touchScaleStartLength) > 3) {\r\n          settouchScaleStartLength(\r\n            getLength(\r\n              {\r\n                x: event.targetTouches[0].pageX,\r\n                y: event.targetTouches[0].pageY,\r\n              },\r\n              {\r\n                x: event.targetTouches[1].pageX,\r\n                y: event.targetTouches[1].pageY,\r\n              }\r\n            )\r\n          );\r\n          let movement: 'zoomIn' | 'zoomOut' = 'zoomIn';\r\n          if (length - touchScaleStartLength < 0) {\r\n            movement = 'zoomOut';\r\n          }\r\n          CVData.hookObjs.xAxisObj.funcs.scale(\r\n            point,\r\n            CVData.hookObjs.xAxisObj.data.scaleStep,\r\n            movement\r\n          );\r\n        }\r\n        return;\r\n      }\r\n\r\n      if (isMouseDown) {\r\n        CVData.hookObjs.xAxisObj.funcs.moveContainer(\r\n          mouseDownPosition.x,\r\n          event.targetTouches[0].pageX,\r\n          false\r\n        );\r\n      } else {\r\n        CVData.hookObjs.xAxisObj.funcs.tooltipMove(\r\n          {\r\n            x: event.targetTouches[0].pageX - offset.x,\r\n            y: event.targetTouches[0].pageY - offset.y,\r\n          },\r\n          true\r\n        );\r\n      }\r\n      CVData.hookObjs.yAxisObj.funcs.tooltipMove(\r\n        {\r\n          x: event.targetTouches[0].pageX - offset.x,\r\n          y: event.targetTouches[0].pageY - offset.y,\r\n        },\r\n        true\r\n      );\r\n      setrelativePosition({\r\n        x: event.targetTouches[0].pageX - offset.x,\r\n        y: event.targetTouches[0].pageY - offset.y,\r\n      });\r\n      setmousePosition({\r\n        x: event.targetTouches[0].pageX,\r\n        y: event.targetTouches[0].pageY,\r\n      });\r\n      event.cancelable = true;\r\n      event.stopPropagation();\r\n    };\r\n    const onTouchEndtContainer = function(event: TouchEvent<HTMLDivElement>) {\r\n      //开启了正在加载时阻止用户操作\r\n      if (\r\n        CVData.initArgs.data?.dynamicData?.stopUserOperateWhenLoading ===\r\n          true &&\r\n        CVData.hookObjs.candleObj.data.isFetchingData\r\n      ) {\r\n        return;\r\n      }\r\n      if (isTouchScale) {\r\n        setisTouchScale(false);\r\n        return;\r\n      }\r\n      CVData.hookObjs.xAxisObj.funcs.moveContainer(\r\n        mouseDownPosition.x,\r\n        mousePosition.x,\r\n        true\r\n      );\r\n      setisMouseDown(false);\r\n      setmouseDownPosition({\r\n        x: 0,\r\n        y: 0,\r\n      });\r\n\r\n      setrelativePosition({\r\n        x: mousePosition.x - offset.x,\r\n        y: mousePosition.y - offset.y,\r\n      });\r\n    };\r\n\r\n    /* 鼠标进入 */\r\n    const onMouseEnterContainer = function(event: MouseEvent<HTMLDivElement>) {\r\n      //开启了正在加载时阻止用户操作\r\n      if (\r\n        CVData.initArgs.data?.dynamicData?.stopUserOperateWhenLoading ===\r\n          true &&\r\n        CVData.hookObjs.candleObj.data.isFetchingData\r\n      ) {\r\n        return;\r\n      }\r\n      setrelativePosition({\r\n        x: event.pageX - offset.x,\r\n        y: event.pageY - offset.y,\r\n      });\r\n      CVData.hookObjs.xAxisObj.funcs.tooltipMove(\r\n        {\r\n          x: event.pageX - offset.x,\r\n          y: event.pageY - offset.y,\r\n        },\r\n        true\r\n      );\r\n      CVData.hookObjs.yAxisObj.funcs.tooltipMove(\r\n        {\r\n          x: event.pageX - offset.x,\r\n          y: event.pageY - offset.y,\r\n        },\r\n        true\r\n      );\r\n    };\r\n\r\n    /* 鼠标按下 */\r\n    const onMouseDownContainer = function(event: MouseEvent<HTMLDivElement>) {\r\n      //开启了正在加载时阻止用户操作\r\n      if (\r\n        CVData.initArgs.data?.dynamicData?.stopUserOperateWhenLoading ===\r\n          true &&\r\n        CVData.hookObjs.candleObj.data.isFetchingData\r\n      ) {\r\n        return;\r\n      }\r\n      setisMouseDown(true);\r\n      setmouseDownPosition({\r\n        x: event.pageX,\r\n        y: event.pageY,\r\n      });\r\n      setrelativePosition({\r\n        x: event.pageX - offset.x,\r\n        y: event.pageY - offset.y,\r\n      });\r\n    };\r\n\r\n    /* 鼠标移动 */\r\n    const onMouseMoveContainer = function(event: MouseEvent<HTMLDivElement>) {\r\n      //开启了正在加载时阻止用户操作\r\n      if (\r\n        CVData.initArgs.data?.dynamicData?.stopUserOperateWhenLoading ===\r\n          true &&\r\n        CVData.hookObjs.candleObj.data.isFetchingData\r\n      ) {\r\n        return;\r\n      }\r\n      if (isMouseDown) {\r\n        CVData.hookObjs.xAxisObj.funcs.moveContainer(\r\n          mouseDownPosition.x,\r\n          event.pageX,\r\n          false\r\n        );\r\n      } else {\r\n        CVData.hookObjs.xAxisObj.funcs.tooltipMove(\r\n          {\r\n            x: event.pageX - offset.x,\r\n            y: event.pageY - offset.y,\r\n          },\r\n          true\r\n        );\r\n      }\r\n      CVData.hookObjs.yAxisObj.funcs.tooltipMove(\r\n        {\r\n          x: event.pageX - offset.x,\r\n          y: event.pageY - offset.y,\r\n        },\r\n        true\r\n      );\r\n      setrelativePosition({\r\n        x: event.pageX - offset.x,\r\n        y: event.pageY - offset.y,\r\n      });\r\n    };\r\n\r\n    /* 鼠标弹起 */\r\n    const onMouseUpContainer = function(event: MouseEvent<HTMLDivElement>) {\r\n      //开启了正在加载时阻止用户操作\r\n      if (\r\n        CVData.initArgs.data?.dynamicData?.stopUserOperateWhenLoading ===\r\n          true &&\r\n        CVData.hookObjs.candleObj.data.isFetchingData\r\n      ) {\r\n        return;\r\n      }\r\n      CVData.hookObjs.xAxisObj.funcs.moveContainer(\r\n        mouseDownPosition.x,\r\n        event.pageX,\r\n        true\r\n      );\r\n      setisMouseDown(false);\r\n      setmouseDownPosition({\r\n        x: 0,\r\n        y: 0,\r\n      });\r\n\r\n      setrelativePosition({\r\n        x: event.pageX - offset.x,\r\n        y: event.pageY - offset.y,\r\n      });\r\n    };\r\n\r\n    /* 鼠标离开 */\r\n    const onMouseLeaveContainer = function(event: MouseEvent<HTMLDivElement>) {\r\n      //开启了正在加载时阻止用户操作\r\n      if (\r\n        CVData.initArgs.data?.dynamicData?.stopUserOperateWhenLoading ===\r\n          true &&\r\n        CVData.hookObjs.candleObj.data.isFetchingData\r\n      ) {\r\n        return;\r\n      }\r\n      setrelativePosition({\r\n        x: event.pageX - offset.x,\r\n        y: event.pageY - offset.y,\r\n      });\r\n      CVData.hookObjs.xAxisObj.funcs.tooltipMove(\r\n        {\r\n          x: event.pageX - offset.x,\r\n          y: event.pageY - offset.y,\r\n        },\r\n        false\r\n      );\r\n      CVData.hookObjs.yAxisObj.funcs.tooltipMove(\r\n        {\r\n          x: event.pageX - offset.x,\r\n          y: event.pageY - offset.y,\r\n        },\r\n        false\r\n      );\r\n    };\r\n\r\n    /* 鼠标滚动 */\r\n    const onWheelContainer = function(e: WheelEvent<HTMLDivElement>) {\r\n      //开启了正在加载时阻止用户操作\r\n      if (\r\n        CVData.initArgs.data?.dynamicData?.stopUserOperateWhenLoading ===\r\n          true &&\r\n        CVData.hookObjs.candleObj.data.isFetchingData\r\n      ) {\r\n        return;\r\n      }\r\n      let movement: 'zoomIn' | 'zoomOut' = 'zoomIn';\r\n      if (e.deltaY > 0) {\r\n        movement = 'zoomOut';\r\n      }\r\n      CVData.hookObjs.xAxisObj.funcs.scale(\r\n        e.pageX,\r\n        CVData.hookObjs.xAxisObj.data.scaleStep,\r\n        movement\r\n      );\r\n      e.nativeEvent.stopPropagation();\r\n      return false;\r\n    };\r\n    const preventDefault = (e: any) => e.preventDefault();\r\n\r\n    //===============effects==================\r\n    useEffect(\r\n      function(): ReturnType<React.EffectCallback> {\r\n        if (isMounted === false) {\r\n          setIsMounted(true);\r\n          initCandleView();\r\n          canvasConatiner.current!.addEventListener('wheel', preventDefault);\r\n        }\r\n      },\r\n      [isMounted]\r\n    );\r\n\r\n    useEffect(function(): ReturnType<React.EffectCallback> {\r\n      return function(): void {\r\n        setIsMounted(false);\r\n        clearObserver();\r\n        canvasConatiner.current!.removeEventListener('wheel', preventDefault);\r\n      };\r\n    }, []);\r\n\r\n    return (\r\n      <>\r\n        <div\r\n          className={'cvcv_container'}\r\n          ref={canvasConatiner}\r\n          style={{\r\n            width: CVData.data.canvasWidth + 'px',\r\n            height: CVData.data.canvasHeight + 'px',\r\n            backgroundColor: CVData.initArgs.backgroundColor,\r\n          }}\r\n          onMouseDown={onMouseDownContainer}\r\n          onMouseMove={onMouseMoveContainer}\r\n          onMouseUp={onMouseUpContainer}\r\n          onWheel={onWheelContainer}\r\n          onMouseEnter={onMouseEnterContainer}\r\n          onMouseLeave={onMouseLeaveContainer}\r\n          onTouchStart={onTouchStartContainer}\r\n          onTouchMove={onTouchMoveContainer}\r\n          onTouchEnd={onTouchEndtContainer}\r\n        >\r\n          <Loading color=\"white\"></Loading>\r\n          <Info></Info>\r\n          <Stage\r\n            options={{\r\n              backgroundAlpha: 0,\r\n              width: CVData.data.canvasWidth,\r\n              height: CVData.data.canvasHeight,\r\n              resolution: 2,\r\n            }}\r\n            style={{\r\n              width: CVData.data.canvasWidth,\r\n              height: CVData.data.canvasHeight,\r\n              backgroundColor: CVData.initArgs.backgroundColor,\r\n            }}\r\n            width={CVData.data.canvasWidth}\r\n            height={CVData.data.canvasHeight}\r\n            raf={false}\r\n            renderOnComponentChange={true}\r\n          >\r\n            {/* 桥接context */}\r\n            <candleViewPixiContext.Provider value={CVData}>\r\n              <NetLines></NetLines>\r\n              <VolumChart></VolumChart>\r\n              <Data></Data>\r\n              <XAxis></XAxis>\r\n              <YAxis></YAxis>\r\n            </candleViewPixiContext.Provider>\r\n          </Stage>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n);\r\n","import {\r\n  createContext,\r\n  useState,\r\n  useContext,\r\n  useRef,\r\n  useCallback,\r\n  useEffect,\r\n  FC,\r\n  ReactElement,\r\n} from 'react';\r\n\r\nimport { pointCoord } from '../interface/itemsInterFace';\r\nimport {\r\n  anyTimeToGMT0000ToTarget,\r\n  arrayToHash,\r\n  findIntersection,\r\n  getRangePosition,\r\n  getSpaceSize,\r\n  hasDuplicates,\r\n  localTimeToGMT0000,\r\n} from '../utils/consts';\r\nimport useThrottle from './throttleHook';\r\nimport { IAxisobj, IuseCandleHook, TAxis } from '../interface/hooksInterFace';\r\nimport { Iaxis } from '../interface/configInterFaces';\r\nimport { DEFAULTAXISVALUES } from '../utils/defaultValues';\r\nimport {\r\n  DAY,\r\n  FIFMIN,\r\n  FMIN,\r\n  HALFHOUR,\r\n  HOUR,\r\n  MONTH,\r\n  ONEMIN,\r\n  TENMIN,\r\n  THREE,\r\n  TWO,\r\n  WEEK,\r\n  YEAR,\r\n  findRoundTimeCountFromArray,\r\n  timeTypeMap,\r\n} from '../utils/timeFormatDefine';\r\nimport {\r\n  IToolTipItem,\r\n  findRoundTimeCountFromArrayDataItem,\r\n  jsonObjectType,\r\n  netLineItem,\r\n  numberScope,\r\n  tickItem,\r\n} from '../interface/itemsInterFace';\r\nimport { ItimeFormat, TtimeType } from '../interface/timeDefineInterFace';\r\n\r\n/**\r\n * x轴钩子\r\n */\r\nconst usexAxis: TAxis = function(args, igorn, config): IAxisobj {\r\n  const moveThrettor = useThrottle();\r\n\r\n  /**\r\n   *默认参数状态\r\n   */\r\n  const [initArgs, setinitArgs] = useState<Iaxis>(\r\n    Object.assign(true, DEFAULTAXISVALUES, args)\r\n  );\r\n  const [initArgsChange, setinitArgsChange] = useState<number>(-1);\r\n\r\n  //鼠标移动速度检测\r\n  const [mousePosition, setmousePosition] = useState<number>(0);\r\n  const [lastmousePosition, setlastmousePosition] = useState<number>(0);\r\n  const [mouseSpeedSec, setmouseSpeedSec] = useState<number>(0);\r\n  const [mouseSpeedTemp, setmouseSpeedTemp] = useState<number>(0);\r\n  const [mouseSpeedTimmer, setmouseSpeedTimmer] = useState<NodeJS.Timeout>();\r\n\r\n  /**\r\n   * ============================state===========================\r\n   */\r\n  const [isMounted, setIsMounted] = useState<boolean>(false);\r\n  /**\r\n   * 是否已完成初始化\r\n   */\r\n  const [isFinishedInit, setisFinishedInit] = useState<boolean>(false);\r\n  /**\r\n   * 普通的更新状态（位移，缩放）\r\n   */\r\n  const [xAxisUpdateTimeStamp, setxAxisUpdateTimeStamp] = useState<number>(-1);\r\n  const [\r\n    xAxisUpdateMoveMentTimeStamp,\r\n    setxAxisUpdateMoveMentTimeStamp,\r\n  ] = useState<number>(-1);\r\n  const [xAxisUpdateScaleTimeStamp, setxAxisUpdateScaleTimeStamp] = useState<\r\n    number\r\n  >(-1);\r\n\r\n  /**\r\n   * ============================tooltip state===========================\r\n   */\r\n\r\n  /**\r\n   * tooltip状态\r\n   */\r\n  const [tooltipState, setTooltipState] = useState<IToolTipItem | null>(\r\n    {} as IToolTipItem\r\n  );\r\n  /**\r\n   * tooltip显示状态\r\n   */\r\n  const [tooltipIsShow, settooltipIsShow] = useState<boolean>(false);\r\n\r\n  /**\r\n   * ============================缩放 state===========================\r\n   */\r\n\r\n  //总位移量\r\n  const [moveAmount, setmoveAmount] = useState<number>(0);\r\n  const [x, setx] = useState<number>(0);\r\n\r\n  //缩放量\r\n  const [scaleValue, setscaleValue] = useState<number>(1);\r\n  const [orgScope, setorgScope] = useState<numberScope>({ start: 0, end: 0 });\r\n\r\n  /**\r\n   * 每次缩放的增减值\r\n   */\r\n  const [scaleStep, setscaleStep] = useState<number>(0.1);\r\n\r\n  /**\r\n   * 计算显示tick时跳过tick的数量\r\n   */\r\n  const [tickStep, settickStep] = useState<number>(0);\r\n\r\n  /**\r\n   * ============================时间 state===========================\r\n   */\r\n\r\n  /**\r\n   * 当前时间类型\r\n   */\r\n  const [currentTimeType, setcurrentTimeType] = useState<ItimeFormat | null>(\r\n    null\r\n  );\r\n\r\n  /**\r\n   * 初始时间范围 (上次的时间范围 )\r\n   */\r\n  const [lastTimeScope, setlastTimeScope] = useState<{\r\n    /**\r\n     * 最左边的时间\r\n     */\r\n    start: number;\r\n    /**\r\n     * 最右边的时间\r\n     */\r\n    end: number;\r\n  }>({\r\n    start: 0,\r\n    end: 0,\r\n  });\r\n\r\n  /**\r\n   * 当前时间范围\r\n   */\r\n  const [currentTimeScope, setcurrentTimeScope] = useState<numberScope>({\r\n    /**\r\n     * 最左边的时间\r\n     */\r\n    start: 0,\r\n    /**\r\n     * 最右边的时间\r\n     */\r\n    end: 0,\r\n  });\r\n\r\n  /**\r\n   * view的全量尺寸\r\n   */\r\n  const [viewSize, setviewSize] = useState<{ width: number; height: number }>({\r\n    width: 0,\r\n    height: 0,\r\n  });\r\n\r\n  /**\r\n   * ============================line 属性state===========================\r\n   */\r\n\r\n  /**\r\n   * y轴的label空间\r\n   */\r\n  const [yAxisSpace, setyAxisSpace] = useState<number>(0);\r\n\r\n  /**\r\n   * line的位置（上左定位）\r\n   *内容区和label区的分割线的位置\r\n   */\r\n  const [linePosition, setlinePosition] = useState<pointCoord>({ x: 0, y: 0 });\r\n  const [labelSpace, setlabelSpace] = useState<number>(0);\r\n\r\n  /**\r\n   * line的尺寸\r\n   */\r\n  const [lineSize, setlineSize] = useState<{\r\n    /**\r\n     * line的长度\r\n     */\r\n    width: number;\r\n    /**\r\n     * line的粗细\r\n     */\r\n    size: number;\r\n  }>({\r\n    width: 0,\r\n    size: 0,\r\n  });\r\n\r\n  /**\r\n   * line的颜色\r\n   */\r\n  const [lineColor, setlineColor] = useState<string>('');\r\n\r\n  /**\r\n   * ============================网格线 属性state===========================\r\n   */\r\n\r\n  /**\r\n   * 网格线组\r\n   */\r\n  const [netLineArr, setnetLineArr] = useState<Array<netLineItem>>([]);\r\n\r\n  /**\r\n   * 网格线的最大数量\r\n   */\r\n  const [netLineMaxCount, setnetLineMaxCount] = useState<number>(0);\r\n\r\n  /**\r\n   * 轴网格线最小数量\r\n   */\r\n  const [netLineMinCount, setnetLineMinCount] = useState<number>(0);\r\n\r\n  /**\r\n   * ============================tick 属性state===========================\r\n   */\r\n  /**\r\n   * 真实tick组（实际的tick组）\r\n   */\r\n  const [tickArr, settickArr] = useState<Array<tickItem>>([]);\r\n\r\n  /**\r\n   * 显示tick组（用于显示的tick）\r\n   */\r\n  const [displayTickArr, setdisplayTickArr] = useState<Array<tickItem>>([]);\r\n  /**\r\n   * tick的共有数据宽度\r\n   */\r\n  const [displayTickCommonWidth, setdisplayTickCommonWidth] = useState<number>(\r\n    0\r\n  );\r\n  /**\r\n   * tick的共有像素宽度\r\n   */\r\n  const [displayTickCommonpixWidth, setdisplayTickCommonpixWidth] = useState<\r\n    number\r\n  >(0);\r\n\r\n  /**\r\n   * ============================ref===========================\r\n   */\r\n  const [candleObj, setcandleObj] = useState<IuseCandleHook | null>(null);\r\n\r\n  /**\r\n   * ============================静态变量===========================\r\n   */\r\n\r\n  /**\r\n   * ==========================函数==============================\r\n   */\r\n\r\n  /**\r\n   * 初始化轴\r\n   *@param {TtimeType} timeType 时间类型\r\n   *@param  {number} viewWidth 界面的全量宽度\r\n   *@param  {number} viewHeight 界面的全量高度\r\n   *@param {number | string} yAxisLabelSpace y轴的label空间\r\n   *@returns {void}\r\n   */\r\n  const initAxisSates = function(\r\n    timeType: TtimeType,\r\n    viewWidth: number,\r\n    viewHeight: number,\r\n    yAxisLabelSpace: number | string\r\n  ) {\r\n    /* 设置各项属性 */\r\n    setviewSize({\r\n      width: viewWidth,\r\n      height: viewHeight,\r\n    });\r\n    setyAxisSpace(getSpaceSize(yAxisLabelSpace, viewWidth));\r\n\r\n    setlinePosition({\r\n      x: 0,\r\n      y: viewHeight - getSpaceSize(initArgs.labelSpace!, viewHeight),\r\n    });\r\n    setlineSize({\r\n      width: viewWidth - getSpaceSize(yAxisLabelSpace, viewWidth),\r\n      size: initArgs.lineSize!,\r\n    });\r\n    setlabelSpace(getSpaceSize(initArgs.labelSpace!, viewHeight));\r\n    setlineColor(initArgs.lineColor!);\r\n    setnetLineMaxCount(initArgs.netLineMaxCount!);\r\n    setnetLineMinCount(initArgs.netLineMinCount!);\r\n\r\n    /* 重置属性 */\r\n    setorgScope({ start: 0, end: 0 });\r\n    setlastTimeScope({ start: 0, end: 0 });\r\n    setcurrentTimeScope({ start: 0, end: 0 });\r\n    settickArr([]);\r\n    setnetLineArr([]);\r\n    setdisplayTickArr([]);\r\n    setx(0);\r\n    setmoveAmount(0);\r\n\r\n    let tiemType = timeTypeMap[timeType];\r\n    setcurrentTimeType(tiemType);\r\n  };\r\n\r\n  const update = function() {\r\n    setlineColor(initArgs.lineColor!);\r\n  };\r\n\r\n  /**\r\n   * 往以前推测时间\r\n   */\r\n  const timeSpeculation_backrward = function(\r\n    timeInteger: number,\r\n    initTimeScopeStart: number\r\n  ): Array<number> {\r\n    var currentTime = timeInteger;\r\n    let timeScopeArr = [timeInteger];\r\n    while (true) {\r\n      currentTime = currentTimeType!.backwardSingleUnit(\r\n        currentTime,\r\n        config!.timeZone!.displayTimeZone!\r\n      );\r\n      if (currentTime < initTimeScopeStart) {\r\n        break;\r\n      } else {\r\n        //从顶端往里推入\r\n        timeScopeArr.unshift(currentTime);\r\n      }\r\n    }\r\n    return timeScopeArr;\r\n  };\r\n\r\n  /**\r\n   * 往未来推测时间\r\n   */\r\n  const timeSpeculation_forward = function(\r\n    timeInteger: number,\r\n    initTimeScopeEnd: number\r\n  ): Array<number> {\r\n    var currentTime = timeInteger;\r\n    let timeScopeArr = [timeInteger];\r\n    while (true) {\r\n      currentTime = currentTimeType!.forwardSingleUnit(\r\n        currentTime,\r\n        config!.timeZone!.displayTimeZone!\r\n      );\r\n      if (currentTime > initTimeScopeEnd) {\r\n        break;\r\n      } else {\r\n        //从后面里推入\r\n        timeScopeArr.push(currentTime);\r\n      }\r\n    }\r\n    return timeScopeArr;\r\n  };\r\n\r\n  /**\r\n   * 扩展tick组\r\n   */\r\n  const updateTicks = function(\r\n    targetTickArr: tickItem[],\r\n    timeScope: numberScope,\r\n    isComputCommonProp: boolean,\r\n    _moveAmount: number,\r\n    moveDir: 'add' | 'min' | 'all'\r\n  ): tickItem[] {\r\n    if (moveDir === 'add' || moveDir === 'all') {\r\n      let forwardArr = timeSpeculation_forward(\r\n        targetTickArr[targetTickArr.length - 1].value as number,\r\n        timeScope.end\r\n      );\r\n\r\n      if (forwardArr.length > 1) {\r\n        let arr = createTickers(\r\n          forwardArr,\r\n          timeScope,\r\n          isComputCommonProp,\r\n          _moveAmount\r\n        );\r\n        for (var i = 1; i < arr.length; i++) {\r\n          targetTickArr.push(arr[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (moveDir === 'min' || moveDir === 'all') {\r\n      let backwardArr = timeSpeculation_backrward(\r\n        targetTickArr[0].value as number,\r\n        timeScope.start\r\n      );\r\n      if (backwardArr.length > 1) {\r\n        let arr = createTickers(\r\n          backwardArr,\r\n          timeScope,\r\n          isComputCommonProp,\r\n          _moveAmount\r\n        );\r\n        for (var i = arr.length - 2; i > -1; i--) {\r\n          targetTickArr.unshift(arr[i]);\r\n        }\r\n      }\r\n    }\r\n    let commonPixProperties;\r\n    if (isComputCommonProp) {\r\n      commonPixProperties = computTickCommonProp(\r\n        timeScope,\r\n        lineSize.width,\r\n        targetTickArr.length\r\n      );\r\n    } else {\r\n      commonPixProperties = {\r\n        dataWidth: displayTickCommonWidth,\r\n        pixWidth: displayTickCommonpixWidth,\r\n        incriseWidth: (function() {\r\n          return lineSize.width * initArgs.displayPadding!;\r\n        })(),\r\n      };\r\n    }\r\n\r\n    if (isComputCommonProp) {\r\n      //更新位置\r\n      let index = 0;\r\n      for (var item of targetTickArr) {\r\n        let width = lineSize.width + commonPixProperties.incriseWidth * 2;\r\n        //计算位置\r\n        item.cPosition = {\r\n          x:\r\n            getRangePosition(Number(item.value), timeScope, width) -\r\n            commonPixProperties.incriseWidth -\r\n            _moveAmount,\r\n          y: linePosition.y,\r\n        };\r\n        item.index = index;\r\n        index++;\r\n\r\n        item = computDataPixTick(\r\n          item,\r\n          timeScope,\r\n          index,\r\n          commonPixProperties.dataWidth,\r\n          commonPixProperties.pixWidth\r\n        );\r\n      }\r\n      targetTickArr = targetTickArr.sort(function(a: tickItem, b: tickItem) {\r\n        return (a.value as number) - (b.value as number);\r\n      });\r\n    }\r\n\r\n    return targetTickArr;\r\n  };\r\n\r\n  /**\r\n   * 扩展displaytick组\r\n   */\r\n  const updateDisplayTicks = function(\r\n    targetTickArr: tickItem[],\r\n    newTickArr: tickItem[]\r\n  ): tickItem[] {\r\n    //将tickArr转换成hash 方便查找\r\n    let newTickHash = arrayToHash(newTickArr, 'value');\r\n    //往前扩展\r\n    //取最早的值\r\n    let correspondItem;\r\n    let nextStep = 0;\r\n\r\n    correspondItem = newTickHash[targetTickArr[0].value];\r\n    nextStep = correspondItem.index;\r\n\r\n    while (true) {\r\n      //获得下一个 step\r\n      nextStep = nextStep - 1 - tickStep;\r\n      if (typeof newTickArr[nextStep] === 'undefined') {\r\n        break;\r\n      } else {\r\n        targetTickArr.unshift(newTickArr[nextStep]);\r\n      }\r\n    }\r\n    //往未来扩展\r\n    correspondItem = newTickHash[targetTickArr[targetTickArr.length - 1].value];\r\n    nextStep = correspondItem.index;\r\n    while (true) {\r\n      //获得下一个 step\r\n      nextStep = nextStep + 1 + tickStep;\r\n      if (typeof newTickArr[nextStep] === 'undefined') {\r\n        break;\r\n      } else {\r\n        targetTickArr.unshift(newTickArr[nextStep]);\r\n      }\r\n    }\r\n\r\n    //去重\r\n    return Array.from(new Set(targetTickArr));\r\n  };\r\n\r\n  //计算tick的共有属性\r\n  const computTickCommonProp = function(\r\n    range: numberScope,\r\n    width: number,\r\n    totalArrLength: number\r\n  ) {\r\n    //扩展宽度 增加数据显示边界 padding\r\n    let incriseWidth = width * initArgs.displayPadding!;\r\n    width = width + incriseWidth * 2;\r\n    //计算数据宽度\r\n    let dataWidth = (range.end - range.start) / totalArrLength;\r\n    //计算像素宽度\r\n    let pixWidth = width / totalArrLength;\r\n    setdisplayTickCommonWidth(dataWidth);\r\n    setdisplayTickCommonpixWidth(pixWidth);\r\n\r\n    return { dataWidth, pixWidth, incriseWidth };\r\n  };\r\n\r\n  /**\r\n   * 计算tick的位置和数据关系数据\r\n   */\r\n  const computDataPixTick = function(\r\n    item: tickItem,\r\n    range: numberScope,\r\n    index: number,\r\n    dataWidth: number,\r\n    pixWidth: number\r\n  ): tickItem {\r\n    item.dataSpace = {\r\n      start: index * dataWidth + range.start,\r\n      end: (index + 1) * dataWidth + range.start,\r\n    };\r\n\r\n    //计算占用像素范围\r\n    item.pixSpace = {\r\n      start: item.cPosition.x - pixWidth / 2,\r\n      end: item.cPosition.x + pixWidth / 2,\r\n    };\r\n\r\n    return item;\r\n  };\r\n\r\n  /**\r\n   * 创建真实tick组\r\n   */\r\n  const createTickers = function(\r\n    arr: number[],\r\n    range: numberScope,\r\n    isComputCommonProp: boolean,\r\n    moveAmount: number\r\n  ): Array<tickItem> {\r\n    let result: Array<tickItem> = [];\r\n\r\n    let commonPixProperties;\r\n\r\n    if (isComputCommonProp) {\r\n      commonPixProperties = computTickCommonProp(\r\n        range,\r\n        lineSize.width,\r\n        arr.length\r\n      );\r\n    } else {\r\n      commonPixProperties = {\r\n        dataWidth: displayTickCommonWidth,\r\n        pixWidth: displayTickCommonpixWidth,\r\n        incriseWidth: (function() {\r\n          return lineSize.width * initArgs.displayPadding!;\r\n        })(),\r\n      };\r\n    }\r\n    let index = 0;\r\n    for (var item of arr) {\r\n      let resultItem: tickItem = {\r\n        color: initArgs.tickColor!,\r\n        length: getSpaceSize(initArgs.tickLength!, viewSize.height),\r\n        size: getSpaceSize(initArgs.tickSize!, viewSize.height),\r\n        cPosition: { x: 0, y: linePosition.y },\r\n        value: item,\r\n      };\r\n      let width = lineSize.width + commonPixProperties.incriseWidth * 2;\r\n      //计算位置\r\n      resultItem.cPosition = {\r\n        x:\r\n          getRangePosition(Number(resultItem.value), range, width) -\r\n          commonPixProperties.incriseWidth -\r\n          moveAmount,\r\n        y: linePosition.y,\r\n      };\r\n      resultItem.index = index;\r\n\r\n      result.push(\r\n        computDataPixTick(\r\n          resultItem,\r\n          range,\r\n          index,\r\n          commonPixProperties.dataWidth,\r\n          commonPixProperties.pixWidth\r\n        )\r\n      );\r\n      index++;\r\n    }\r\n    return result;\r\n  };\r\n\r\n  /**\r\n   * 创建显示Ticker\r\n   * 大于netLineMaxCount就每隔一个项目减半,减半还是大于netLineMaxCount,就再减半，模拟递归\r\n   */\r\n  const createDisplayTickers = function(arr: tickItem[]): tickItem[] {\r\n    let result = arr;\r\n    let _tickStep = 0;\r\n    while (true) {\r\n      if (result.length > netLineMaxCount) {\r\n        let cArr: tickItem[] = [];\r\n        let index = 0;\r\n        for (var item of result) {\r\n          if (index % 2) {\r\n            cArr.push(item);\r\n          }\r\n          index++;\r\n        }\r\n        result = cArr;\r\n\r\n        if (_tickStep < 1) {\r\n          _tickStep = _tickStep + 1;\r\n        } else {\r\n          _tickStep = _tickStep * 2 + 1;\r\n        }\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n    settickStep(_tickStep);\r\n    return result;\r\n  };\r\n\r\n  /**\r\n   * 通过像素位置查找目标tick\r\n   */\r\n  //const findTick = function (position: number, key: \"pixSpace\" | \"dataSpace\"): tickItem | null {\r\n  //\tvar _tickerArr = tickArr;\r\n  //\tvar _findArr: tickItem[] = [];\r\n  //\tvar centerPoint = 0;\r\n  //\twhile (true) {\r\n  //\t\tcenterPoint = Number(((_tickerArr.length - 1) / 2).toFixed(0));\r\n  //\t\tvar isFind = false;\r\n  //\r\n  //\t\tvar find = function (start: number, end: number) {\r\n  //\t\t\tif (_tickerArr[start][key]!.start <= position && _tickerArr[end][key]!.end >= position) {\r\n  //\t\t\t\tisFind = true;\r\n  //\t\t\t\t_findArr = _tickerArr.slice(start, end + 1);\r\n  //\t\t\t}\r\n  //\t\t};\r\n  //\r\n  //\t\tlet start = 0;\r\n  //\t\tlet end = centerPoint;\r\n  //\t\tif (_tickerArr.length === 2) {\r\n  //\t\t\tstart = 0;\r\n  //\t\t\tend = 0;\r\n  //\t\t}\r\n  //\t\t//在第一组范围里查找\r\n  //\t\tfind(start, end);\r\n  //\r\n  //\t\tif (_findArr.length === 1) {\r\n  //\t\t\treturn _findArr[0];\r\n  //\t\t}\r\n  //\t\tif (isFind) {\r\n  //\t\t\t_tickerArr = _findArr;\r\n  //\t\t\tcontinue;\r\n  //\t\t}\r\n  //\r\n  //\t\tstart = centerPoint;\r\n  //\t\tend = _tickerArr.length - 1;\r\n  //\t\tif (_tickerArr.length === 2) {\r\n  //\t\t\tstart = 1;\r\n  //\t\t\tend = 1;\r\n  //\t\t}\r\n  //\t\t//在第二组范围里查找\r\n  //\t\tfind(start, end);\r\n  //\r\n  //\t\tif (_findArr.length === 1) {\r\n  //\t\t\treturn _findArr[0];\r\n  //\t\t}\r\n  //\t\tif (isFind === false) {\r\n  //\t\t\treturn null;\r\n  //\t\t} else {\r\n  //\t\t\t_tickerArr = _findArr;\r\n  //\t\t}\r\n  //\t}\r\n  //};\r\n\r\n  //ai 优化后的版本\r\n  const findTick = function(\r\n    position: number,\r\n    key: 'pixSpace' | 'dataSpace'\r\n  ): tickItem | null {\r\n    let tickerArr = tickArr.slice(); // 复制数组以避免修改原数组\r\n    let centerIndex = 0;\r\n\r\n    while (tickerArr.length > 1) {\r\n      centerIndex = Math.floor(tickerArr.length / 2);\r\n      const midTick = tickerArr[centerIndex];\r\n\r\n      if (midTick[key]!.start <= position && midTick[key]!.end >= position) {\r\n        // 直接找到目标，无需继续查找\r\n        return midTick;\r\n      } else if (midTick[key]!.end < position) {\r\n        // 调整查找范围到右半部分\r\n        tickerArr = tickerArr.slice(centerIndex + 1);\r\n      } else {\r\n        // 调整查找范围到左半部分\r\n        tickerArr = tickerArr.slice(0, centerIndex);\r\n      }\r\n    }\r\n\r\n    // 若数组只剩一个元素且未直接命中，则判断该元素是否符合条件\r\n    return tickerArr.length === 1 && tickerArr[0][key]!.end >= position\r\n      ? tickerArr[0]\r\n      : null;\r\n  };\r\n\r\n  /**\r\n   * 创建x轴的网格 (纵向)\r\n   */\r\n  const createNetLines = function(displaytickItems: tickItem[]): netLineItem[] {\r\n    let results: netLineItem[] = [];\r\n    for (var item of displaytickItems) {\r\n      results.push({\r\n        /**\r\n         * 网格线颜色\r\n         */\r\n        color: initArgs.netLineColor!,\r\n        /**\r\n         * 网格线长度\r\n         */\r\n        length: linePosition.y,\r\n        /**\r\n         * 网格线粗细\r\n         */\r\n        size: initArgs.netLineSize!,\r\n        /**\r\n         * 网格线位置\r\n         * （上中定位）\r\n         */\r\n        cPosition: { x: item.cPosition.x, y: 0 },\r\n        /**\r\n         * 值\r\n         */\r\n        value: item.value,\r\n      });\r\n    }\r\n    return results;\r\n  };\r\n\r\n  //从所有等差数列的参数里算出具体的数列\r\n  //1.从数组里挑出合适数量的时间类型(最好两组一组时间稍多，一组稍少 )\r\n  //2.按照挑选的两个等差数列的参数，从tickArr中挑选出具体的数组\r\n  //2.合并两个数组\r\n  //3.输出\r\n  const createDisplayTickersByDate = function(\r\n    tickArr: tickItem[],\r\n    displayTickRoundValuesArray: findRoundTimeCountFromArrayDataItem[]\r\n  ) {\r\n    tickArr = [...tickArr];\r\n    let displayTickArr1: tickItem[] = [];\r\n    let displayTickArr2: tickItem[] = [];\r\n    let isFind = false;\r\n    for (let item of displayTickRoundValuesArray) {\r\n      if (isFind) {\r\n        if (item.count !== 0) {\r\n          displayTickArr2 = getTickWithFormated(tickArr, item);\r\n        }\r\n        break;\r\n      }\r\n      if (\r\n        item.count > initArgs.netLineMinCount! &&\r\n        item.count < initArgs.netLineMaxCount!\r\n      ) {\r\n        isFind = true;\r\n        displayTickArr1 = getTickWithFormated(tickArr, item);\r\n      }\r\n    }\r\n\r\n    let displayTickArr2Map = arrayToHash(displayTickArr2, 'value');\r\n    let result: tickItem[] = [];\r\n    for (var item of displayTickArr1) {\r\n      if (typeof displayTickArr2Map[item.value] !== 'undefined') {\r\n        result.push(displayTickArr2Map[item.value]);\r\n      } else {\r\n        result.push(item);\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const getTickWithFormated = function(\r\n    tickArr: tickItem[],\r\n    xCondition: findRoundTimeCountFromArrayDataItem\r\n  ): tickItem[] {\r\n    let result: tickItem[] = [];\r\n    //先取到第一个\r\n    let currentIndex = xCondition.startIndex;\r\n    let currentItem = tickArr[currentIndex];\r\n    currentItem.displayValue = xCondition.type.formatter(\r\n      Number(currentItem.value),\r\n      config?.language!,\r\n      config!.timeZone!.displayTimeZone\r\n    );\r\n    result.push(currentItem);\r\n    //然后再依次取剩下的\r\n    for (let i = xCondition.count; i > -1; i--) {\r\n      currentIndex = currentIndex - 1 - xCondition.step;\r\n      if (typeof tickArr[currentIndex] === 'undefined') {\r\n        break;\r\n      }\r\n      currentItem = tickArr[currentIndex];\r\n      currentItem.displayValue = xCondition.type.formatter(\r\n        Number(currentItem.value),\r\n        config?.language!,\r\n        config!.timeZone!.displayTimeZone\r\n      );\r\n      result.push(currentItem);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  /**\r\n   * 初始化时\r\n   * 制造轴数据\r\n   */\r\n  const createAxisData = function() {\r\n    /* \r\n            1.获得初始的时间范围\r\n            1.1 拟定时间范围，例如从当前时间往前推 24 小时，这是拟定的时间范围\r\n            1.2 确定标准时间范围，根据设置的时间类型 以当前时间进行取整+1 获得最末尾时间（最右边的时间），然后将时间往前推，每次一个单位（例如小时），直到超出“拟定时间范围” 得到最开始时间｛最左边的时间｝ 输出【｛最左边的时间｝，｛最左边的时间｝】时间范围； 真实 tick 数数组；\r\n            1.3 获得显示 tick 组 根据上面生成的 真实小时数数组；以及 最大 tick 显示数量，和最小显示 tick 数量；计算 显示 tick 组\r\n        */\r\n\r\n    /**\r\n     * 粗糙时间范围\r\n     */\r\n    let _flexTimeScope = currentTimeType!.getInitTimeScope(\r\n      initArgs.initTimePoint!\r\n    );\r\n    //如果设置了时间归零\r\n    //就需要把起始的时区算成GMT +0000\r\n    if (config!.timeZone!.displayTimeZone !== 'local') {\r\n      let date = new Date();\r\n      let localtimeZone = Math.abs(date.getTimezoneOffset() / 60);\r\n      _flexTimeScope.start = anyTimeToGMT0000ToTarget(\r\n        _flexTimeScope.start,\r\n        localtimeZone,\r\n        config!.timeZone!.displayTimeZone\r\n      );\r\n      _flexTimeScope.end = anyTimeToGMT0000ToTarget(\r\n        _flexTimeScope.end,\r\n        localtimeZone,\r\n        config!.timeZone!.displayTimeZone\r\n      );\r\n    }\r\n\r\n    /**\r\n     * 当前的整数时间\r\n     */\r\n    let _timeInteger = currentTimeType!.roundingFunction(\r\n      _flexTimeScope!.end!,\r\n      config!.timeZone!.displayTimeZone!\r\n    );\r\n    /* 对齐整数的时间组 */\r\n    let realTimeArr = timeSpeculation_backrward(\r\n      _timeInteger,\r\n      _flexTimeScope?.start!\r\n    );\r\n\r\n    /**\r\n     * 当前时间范围\r\n     */\r\n    let _currentTimeScope = _flexTimeScope;\r\n    /**\r\n     * 真实数据位置\r\n     */\r\n    let _tickerArr = createTickers(realTimeArr, _flexTimeScope, true, 0);\r\n\r\n    //挑选出所有按时间整数排列的等差数列的参数\r\n    let displayTickRoundValuesArray = findRoundTimeCountFromArray(\r\n      (_tickerArr as unknown) as jsonObjectType[],\r\n      config!.timeZone!.displayTimeZone!,\r\n      config!.timeFormat!,\r\n      'value'\r\n    );\r\n    let _displayTickerArr;\r\n    if (displayTickRoundValuesArray === null) {\r\n      /**\r\n       * 用于显示的ticker\r\n       */\r\n      _displayTickerArr = createDisplayTickers(_tickerArr);\r\n\r\n      _displayTickerArr = _displayTickerArr.sort(function(\r\n        a: tickItem,\r\n        b: tickItem\r\n      ) {\r\n        return (a.value as number) - (b.value as number);\r\n      });\r\n    } else {\r\n      //从所有等差数列的参数里算出具体的数列\r\n      _displayTickerArr = createDisplayTickersByDate(\r\n        _tickerArr,\r\n        displayTickRoundValuesArray\r\n      );\r\n    }\r\n\r\n    /**\r\n     * 网格线组\r\n     */\r\n    let _netLineArr = createNetLines(_displayTickerArr);\r\n\r\n    setorgScope(_flexTimeScope);\r\n    setlastTimeScope(_flexTimeScope);\r\n    setcurrentTimeScope(_currentTimeScope);\r\n    settickArr(_tickerArr);\r\n    setnetLineArr(_netLineArr);\r\n    setdisplayTickArr(_displayTickerArr);\r\n    setisFinishedInit(true);\r\n    setxAxisUpdateTimeStamp(+new Date());\r\n    //这里产生出来的指针会偏移一点，很正常 因为最末尾的时间是根据当前时间来的\r\n    //倒数第一个指针是根据最末尾时间取整得来的\r\n  };\r\n\r\n  /**\r\n   * 移动轴(鼠标拖拽)\r\n   */\r\n  const moveContainer = function(\r\n    start: number,\r\n    stop: number,\r\n    isSaveScope: boolean\r\n  ) {\r\n    if (isFinishedInit) {\r\n      let pureLength = stop - start;\r\n      let _moveAmount = pureLength + moveAmount;\r\n\r\n      //设置鼠标位置用于计算鼠标速度\r\n      setmousePosition(stop);\r\n\r\n      //设置x用于更新画面\r\n      setx(pureLength + moveAmount);\r\n      if (isSaveScope) {\r\n        setmoveAmount(_moveAmount);\r\n      }\r\n\r\n      //计算移动，并更新tick\r\n      window.requestAnimationFrame(function() {\r\n        moveAxis(start, stop, isSaveScope);\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 移动轴(鼠标拖拽)\r\n   */\r\n  const moveAxis = function(start: number, stop: number, isSaveScope: boolean) {\r\n    if (\r\n      candleObj?.data.isFetchingData &&\r\n      config?.data?.dynamicData?.stopUserOperateWhenLoading\r\n    ) {\r\n      return;\r\n    }\r\n    if (isFinishedInit) {\r\n      let width = lineSize.width;\r\n      //扩展宽度 增加数据显示边界 padding\r\n      let incriseWidth = width * initArgs.displayPadding!;\r\n      width = width + incriseWidth * 2;\r\n      //移动长度\r\n      let length = stop - start;\r\n      let pureLength = stop - start;\r\n      let _moveAmount = pureLength + moveAmount;\r\n      //加还是减\r\n      let sign: 'add' | 'min' = 'add';\r\n      if (length > 0) {\r\n        sign = 'min';\r\n      }\r\n\r\n      length = Math.abs(length);\r\n\r\n      //计算这段线在整个宽度里占有百分之多少\r\n      let prec = length / width;\r\n\r\n      //按比例计算出时间变化量\r\n      let changeScope = Number(\r\n        ((lastTimeScope.end - lastTimeScope.start) * prec).toFixed(0)\r\n      );\r\n      if (sign === 'min') {\r\n        changeScope = 0 - changeScope;\r\n      }\r\n\r\n      //从新计算currentTimeScope\r\n      let _currentTimeScope = {\r\n        start: lastTimeScope.start + changeScope,\r\n        end: lastTimeScope.end + changeScope,\r\n      };\r\n\r\n      //-----------------比例计算完成开始更新------------------\r\n      /**\r\n       * 用真实数组位置 以及当前取到的时间范围取交集\r\n       * 取所有tick的交集\r\n       */\r\n      let resultInterArr = findIntersection(tickArr, _currentTimeScope);\r\n\r\n      /**\r\n       * 用剩下的tick去进行扩展\r\n       */\r\n      let newTicks = updateTicks(\r\n        resultInterArr,\r\n        _currentTimeScope,\r\n        false,\r\n        _moveAmount,\r\n        (function() {\r\n          if (pureLength + moveAmount - x > 0) {\r\n            return 'min';\r\n          }\r\n\r\n          return 'add';\r\n        })()\r\n      );\r\n\r\n      /* let displayTickRoundValuesArray = findRoundTimeCountFromArray(\r\n\t\t\t\tnewTicks as unknown as jsonObjectType[],\r\n\t\t\t\t\"value\"\r\n\t\t\t); */\r\n\r\n      //挑选出所有按时间整数排列的等差数列的参数\r\n      let displayTickRoundValuesArray = findRoundTimeCountFromArray(\r\n        (newTicks as unknown) as jsonObjectType[],\r\n        config!.timeZone!.displayTimeZone!,\r\n        config!.timeFormat!,\r\n        'value'\r\n      );\r\n      let _displayTickerArr;\r\n      if (displayTickRoundValuesArray === null) {\r\n        /**\r\n         * 求新时间范围和旧显示tick的交集\r\n         * 旧显示tick的交集\r\n         */\r\n        let resultInterDisplayArr = findIntersection(\r\n          displayTickArr,\r\n          _currentTimeScope\r\n        );\r\n\r\n        if (resultInterDisplayArr.length === 0) {\r\n          _displayTickerArr = createDisplayTickers(newTicks);\r\n        } else {\r\n          _displayTickerArr = updateDisplayTicks(\r\n            resultInterDisplayArr,\r\n            newTicks\r\n          );\r\n        }\r\n        _displayTickerArr = _displayTickerArr.sort(function(\r\n          a: tickItem,\r\n          b: tickItem\r\n        ) {\r\n          return (a.value as number) - (b.value as number);\r\n        });\r\n      } else {\r\n        //从所有等差数列的参数里算出具体的数列\r\n        _displayTickerArr = createDisplayTickersByDate(\r\n          newTicks,\r\n          displayTickRoundValuesArray\r\n        );\r\n      }\r\n\r\n      /**\r\n       * 网格线组\r\n       */\r\n      let _netLineArr = createNetLines(_displayTickerArr);\r\n      setxAxisUpdateMoveMentTimeStamp(+new Date());\r\n      setcurrentTimeScope(_currentTimeScope);\r\n      settickArr(newTicks);\r\n      setnetLineArr(_netLineArr);\r\n      setdisplayTickArr(_displayTickerArr);\r\n      if (isSaveScope) {\r\n        setlastTimeScope(_currentTimeScope);\r\n      }\r\n      setxAxisUpdateTimeStamp(+new Date());\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 缩放\r\n   */\r\n  const scale = function(\r\n    point: number,\r\n    precent: number,\r\n    movement: 'zoomIn' | 'zoomOut' | 'keep'\r\n  ) {\r\n    if (\r\n      candleObj?.data.isFetchingData &&\r\n      config?.data?.dynamicData?.stopUserOperateWhenLoading\r\n    ) {\r\n      return;\r\n    }\r\n    if (tickArr.length > 24 * 60 * 2 && movement === 'zoomOut') {\r\n      return;\r\n    }\r\n\r\n    //最小缩放\r\n    if (tickArr.length <= netLineMinCount && movement === 'zoomIn') {\r\n      return;\r\n    }\r\n\r\n    if (isFinishedInit) {\r\n      let leftPrecent = point / lineSize.width;\r\n      let rightPrecent = 1 - leftPrecent;\r\n      leftPrecent = (precent * 100 * leftPrecent) / 100;\r\n      rightPrecent = (precent * 100 * rightPrecent) / 100;\r\n\r\n      /**\r\n       * 粗糙时间范围\r\n       */\r\n      let _currentTimeScope = lastTimeScope;\r\n      let total = _currentTimeScope.end - _currentTimeScope.start;\r\n      let q = {\r\n        start: total * leftPrecent,\r\n        end: total * rightPrecent,\r\n      };\r\n\r\n      if (movement === 'zoomIn') {\r\n        _currentTimeScope = {\r\n          start: _currentTimeScope.start + q.start,\r\n          end: _currentTimeScope.end - q.end,\r\n        };\r\n      }\r\n\r\n      if (movement === 'zoomOut') {\r\n        _currentTimeScope = {\r\n          start: _currentTimeScope.start - q.start,\r\n          end: _currentTimeScope.end + q.end,\r\n        };\r\n      }\r\n\r\n      let _tickArr = [...tickArr];\r\n\r\n      /**\r\n       * 当前的整数时间\r\n       */\r\n      /**\r\n       * 用真实数组位置 以及当前取到的时间范围取交集\r\n       * 取所有tick的交集\r\n       */\r\n      let resultInterArr = findIntersection(_tickArr, _currentTimeScope);\r\n      if (resultInterArr.length === 0) {\r\n        return;\r\n      }\r\n\r\n      /**\r\n       * 用剩下的tick去进行扩展\r\n       */\r\n      let newTicks = updateTicks(\r\n        resultInterArr,\r\n        _currentTimeScope,\r\n        true,\r\n        0,\r\n        'all'\r\n      );\r\n\r\n      //挑选出所有按时间整数排列的等差数列的参数\r\n      let displayTickRoundValuesArray = findRoundTimeCountFromArray(\r\n        (newTicks as unknown) as jsonObjectType[],\r\n        config!.timeZone!.displayTimeZone!,\r\n        config!.timeFormat!,\r\n        'value'\r\n      );\r\n\r\n      let _displayTickerArr;\r\n      if (displayTickRoundValuesArray === null) {\r\n        /**\r\n         * 用于显示的ticker\r\n         */\r\n        _displayTickerArr = createDisplayTickers(newTicks);\r\n        _displayTickerArr = _displayTickerArr.sort(function(\r\n          a: tickItem,\r\n          b: tickItem\r\n        ) {\r\n          return (a.value as number) - (b.value as number);\r\n        });\r\n      } else {\r\n        //从所有等差数列的参数里算出具体的数列\r\n        _displayTickerArr = createDisplayTickersByDate(\r\n          newTicks,\r\n          displayTickRoundValuesArray\r\n        );\r\n      }\r\n\r\n      /**\r\n       * 网格线组\r\n       */\r\n      let _netLineArr = createNetLines(_displayTickerArr);\r\n\r\n      //缩放量计算\r\n      let scale =\r\n        (_currentTimeScope.end - _currentTimeScope.start) /\r\n        (orgScope.end - orgScope.start);\r\n\r\n      setscaleValue(scale);\r\n      setlastTimeScope(_currentTimeScope);\r\n      setcurrentTimeScope(_currentTimeScope);\r\n      settickArr(newTicks);\r\n      setnetLineArr(_netLineArr);\r\n      setdisplayTickArr(_displayTickerArr);\r\n      setxAxisUpdateTimeStamp(+new Date());\r\n      setxAxisUpdateScaleTimeStamp(+new Date());\r\n      //setx(0);在数据钩子里设置这个，免得页面跳动\r\n      setmoveAmount(0);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * tooltip更新\r\n   */\r\n  const tooltipUpdate = function() {\r\n    if (isFinishedInit && tooltipIsShow) {\r\n      let _tooltipState: IToolTipItem | null = tooltipState;\r\n      if (_tooltipState === null) {\r\n        return;\r\n      }\r\n      _tooltipState.position.x =\r\n        _tooltipState.relatedTickItem?.cPosition.x! + x;\r\n      setTooltipState(_tooltipState);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * tooltip移动\r\n   */\r\n  const tooltipMove = function(position: pointCoord, isShowTooltip: boolean) {\r\n    if (isFinishedInit) {\r\n      let tooltipX = position.x;\r\n      if (tooltipX > lineSize.width) {\r\n        isShowTooltip = false;\r\n      }\r\n\r\n      settooltipIsShow(isShowTooltip);\r\n      if (isShowTooltip === false) {\r\n        return;\r\n      }\r\n\r\n      //通过像素位置进行二分法查找目标tick\r\n      let _tickItem: tickItem | null = findTick(\r\n        tooltipX - moveAmount,\r\n        'pixSpace'\r\n      );\r\n      if (_tickItem === null) {\r\n        setTooltipState(null);\r\n        return;\r\n      }\r\n      let _tooltipState: IToolTipItem = {\r\n        position: {\r\n          x: _tickItem.cPosition.x + moveAmount,\r\n          y: 0,\r\n        },\r\n        length: linePosition.y,\r\n        value: _tickItem.value as number,\r\n        relatedTickItem: _tickItem,\r\n        size: getSpaceSize(initArgs.tooltip!.lineSize!, viewSize.width),\r\n      };\r\n\r\n      setTooltipState(_tooltipState);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 更新轴\r\n   *@param  {number} viewWidth 界面的全量宽度\r\n   *@param  {number} viewHeight 界面的全量高度\r\n   *@param {number | string} yAxisLabelSpace y轴的label空间\r\n   *@returns {void}\r\n   */\r\n  const updateAxisSates = function(\r\n    viewWidth: number,\r\n    viewHeight: number,\r\n    yAxisLabelSpace: number | string\r\n  ) {\r\n    setviewSize({\r\n      width: viewWidth,\r\n      height: viewHeight,\r\n    });\r\n    setyAxisSpace(getSpaceSize(yAxisLabelSpace, viewWidth));\r\n    setlinePosition({\r\n      x: 0,\r\n      y: viewHeight - getSpaceSize(initArgs.labelSpace!, viewHeight),\r\n    });\r\n    setlineSize({\r\n      width: viewWidth - getSpaceSize(yAxisLabelSpace, viewWidth),\r\n      size: initArgs.lineSize!,\r\n    });\r\n  };\r\n\r\n  /* 重新计算大小 */\r\n  const resize = function() {\r\n    if (isFinishedInit) {\r\n      window.requestAnimationFrame(function() {\r\n        scale(viewSize.width / 2, 0, 'keep');\r\n      });\r\n    }\r\n  };\r\n\r\n  /* 鼠标移动速度检测器 */\r\n  const mouseSpeedDetecor = function() {\r\n    let speed = mousePosition - lastmousePosition;\r\n    setmouseSpeedSec(speed);\r\n    setlastmousePosition(mousePosition);\r\n    setUpMouseSpeedDetecor();\r\n  };\r\n\r\n  /* 打开鼠标移动速度检测器 */\r\n  const setUpMouseSpeedDetecor = function() {\r\n    let timeOut = setTimeout(() => {\r\n      setmouseSpeedTemp(+new Date());\r\n    }, 24);\r\n    setmouseSpeedTimmer(timeOut);\r\n  };\r\n\r\n  /* 销毁速度检测器 */\r\n  const destroyMouseSpeedDetecor = function() {\r\n    if (typeof mouseSpeedTimmer !== undefined) {\r\n      setmouseSpeedTemp(0);\r\n      clearTimeout(mouseSpeedTimmer);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * ==================================Effects===============================\r\n   */\r\n  useEffect(function(): ReturnType<React.EffectCallback> {\r\n    if (isMounted === false) {\r\n      setIsMounted(true);\r\n      setUpMouseSpeedDetecor();\r\n    }\r\n    return function(): void {\r\n      setIsMounted(false);\r\n      destroyMouseSpeedDetecor();\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  //侧鼠标速度\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      if (mouseSpeedTemp !== 0) {\r\n        mouseSpeedDetecor();\r\n      }\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },\r\n    [mouseSpeedTemp]\r\n  );\r\n\r\n  //初始化状态以后初始化数轴\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      if (currentTimeType !== null) {\r\n        createAxisData();\r\n      }\r\n\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },\r\n    [currentTimeType]\r\n  );\r\n\r\n  //初始化状态以后初始化数轴\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      resize();\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },\r\n    [viewSize]\r\n  );\r\n\r\n  //初始化状态以后初始化数轴\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      tooltipUpdate();\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },\r\n    [x]\r\n  );\r\n\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      if (initArgsChange !== -1) {\r\n        update();\r\n      }\r\n    },\r\n    [initArgsChange]\r\n  );\r\n\r\n  return {\r\n    data: {\r\n      /**\r\n       * 当前时间类型\r\n       */\r\n      currentTimeType,\r\n      /**\r\n       * 初始时间范围\r\n       */\r\n      lastTimeScope,\r\n      /**\r\n       * 当前时间范围\r\n       */\r\n      currentTimeScope,\r\n      /**\r\n       * line的位置（上左定位）\r\n       *内容区和label区的分割线的位置\r\n       */\r\n      linePosition,\r\n      /**\r\n       * line的尺寸\r\n       */\r\n      lineSize,\r\n      /**\r\n       * line的颜色\r\n       */\r\n      lineColor,\r\n      /**\r\n       * 网格线的最大数量\r\n       */\r\n      netLineMaxCount,\r\n      /**\r\n       * 网格线组\r\n       */\r\n      netLineArr,\r\n      /**\r\n       * 轴网格线最小数量\r\n       */\r\n      netLineMinCount,\r\n      /**\r\n       * 真实tick组（实际的tick空间）\r\n       */\r\n      tickArr,\r\n      /**\r\n       * 显示tick组（用于显示的tick）\r\n       */\r\n      displayTickArr,\r\n      /**\r\n       * 是否已完成初始化\r\n       */\r\n      isFinishedInit,\r\n      /**\r\n       * 每次缩放的增减值\r\n       */\r\n      scaleStep,\r\n      /**\r\n       * tooltip\r\n       */\r\n      tooltipState,\r\n      /**\r\n       * tooltip是否显示\r\n       */\r\n      tooltipIsShow,\r\n      labelSpace,\r\n      xAxisUpdateTimeStamp,\r\n      viewSize,\r\n      displayTickCommonWidth,\r\n      displayTickCommonpixWidth,\r\n      /* 移动量 */\r\n      moveAmount,\r\n      x,\r\n      xAxisUpdateMoveMentTimeStamp,\r\n      xAxisUpdateScaleTimeStamp,\r\n      mouseSpeedSec,\r\n    },\r\n    funcs: {\r\n      /**\r\n       * 设置初始时间范围\r\n       */\r\n      setlastTimeScope,\r\n      /**\r\n       * 设置当前时间范围\r\n       */\r\n      setcurrentTimeScope,\r\n      /**\r\n       * 设置line的位置（上左定位）\r\n       *内容区和label区的分割线的位置\r\n       */\r\n      setlinePosition,\r\n      /**\r\n       * 设置line的尺寸\r\n       */\r\n      setlineSize,\r\n      /**\r\n       * 设置line的颜色\r\n       */\r\n      setlineColor,\r\n      /**\r\n       * 设置网格线的最大数量\r\n       */\r\n      setnetLineMaxCount,\r\n      /**\r\n       * 设置网格线组\r\n       */\r\n      setnetLineArr,\r\n      /**\r\n       * 设置轴网格线最小数量\r\n       */\r\n      setnetLineMinCount,\r\n      /**\r\n       * 设置真实tick组（实际的tick空间）\r\n       */\r\n      settickArr,\r\n      /**\r\n       * 设置显示tick组（用于显示的tick）\r\n       */\r\n      setdisplayTickArr,\r\n      /**\r\n       * 初始化轴\r\n       *@param {TtimeType} timeType 时间类型\r\n       *@param  {number} viewWidth 界面的全量宽度\r\n       *@param  {number} viewHeight 界面的全量高度\r\n       *@param {number | string} yAxisLabelSpace y轴的label空间\r\n       *@returns {void}\r\n       */\r\n      initAxisSates,\r\n      /**\r\n       * 更新轴\r\n       *@param  {number} viewWidth 界面的全量宽度\r\n       *@param  {number} viewHeight 界面的全量高度\r\n       *@param {number | string} yAxisLabelSpace y轴的label空间\r\n       *@returns {void}\r\n       */\r\n      updateAxisSates,\r\n      /**\r\n       * 移动轴\r\n       */\r\n      moveAxis,\r\n      moveContainer,\r\n      /**\r\n       * 缩放轴\r\n       */\r\n      scale,\r\n      /**\r\n       * tooltip移动\r\n       */\r\n      tooltipMove,\r\n      setx,\r\n      setcandleObj,\r\n      setinitArgs: function(arg: Iaxis) {\r\n        setinitArgs(Object.assign(true, initArgs, arg));\r\n        setinitArgsChange(+new Date());\r\n      },\r\n    },\r\n\r\n    /**\r\n     *初始化时用到的参数\r\n     */\r\n    initArgs,\r\n  };\r\n};\r\n\r\nexport default usexAxis;\r\n","import { createContext, useState, useContext, useRef, useCallback, useEffect, FC, ReactElement } from \"react\";\r\n\r\nimport {} from \"../interface/contextInterFace\";\r\nimport { pointCoord } from \"../interface/itemsInterFace\";\r\nimport {\r\n\tgetDecimalOfLength,\r\n\tgetIntOfLength,\r\n\tgetSpaceSize,\r\n\troundToNearestTenBigNumber,\r\n\tshiftNumber,\r\n} from \"../utils/consts\";\r\nimport _bigNumber from \"bignumber.js\";\r\nimport { Iaxis } from \"../interface/configInterFaces\";\r\nimport { IAxisobj, IyAxisobj } from \"../interface/hooksInterFace\";\r\nimport { DEFAULTAXISVALUES } from \"../utils/defaultValues\";\r\nimport { IToolTipItem, netLineItem, numberScope, numberScopeString, tickItem } from \"../interface/itemsInterFace\";\r\n\r\n/**\r\n * y轴钩子\r\n */\r\nconst useyAxis = function (args: Iaxis, xAxis?: IAxisobj): IyAxisobj {\r\n\txAxis = xAxis!;\r\n\t/**\r\n\t *默认参数状态\r\n\t */\r\n\tconst [initArgs, setinitArgs] = useState<Iaxis>(Object.assign(true, DEFAULTAXISVALUES, args));\r\n\tconst [initArgsChange, setinitArgsChange] = useState<number>(-1);\r\n\t/**\r\n\t * ============================state===========================\r\n\t */\r\n\tconst [isMounted, setIsMounted] = useState<boolean>(false);\r\n\t/**\r\n\t * 是否已完成初始化\r\n\t */\r\n\tconst [isFinishedInit, setisFinishedInit] = useState<boolean>(false);\r\n\t/**\r\n\t * y轴的更新\r\n\t */\r\n\tconst [yAxisUpdateTimeStamp, setyAxisUpdateTimeStamp] = useState<number>(-1);\r\n\r\n\t/**\r\n\t * ============================tooltip state===========================\r\n\t */\r\n\r\n\t/**\r\n\t * tooltip状态\r\n\t */\r\n\tconst [tooltipState, setTooltipState] = useState<IToolTipItem | null>({} as IToolTipItem);\r\n\t/**\r\n\t * tooltip显示状态\r\n\t */\r\n\tconst [tooltipIsShow, settooltipIsShow] = useState<boolean>(false);\r\n\r\n\t/**\r\n\t * ============================数据 state===========================\r\n\t */\r\n\r\n\t/**\r\n\t * 当前数据范围\r\n\t */\r\n\tconst [currentDataScope, setcurrentDataScope] = useState<numberScopeString>({\r\n\t\t/**\r\n\t\t * 最下面的值\r\n\t\t */\r\n\t\tstart: \"0\",\r\n\t\t/**\r\n\t\t * 最上面的值\r\n\t\t */\r\n\t\tend: \"0\",\r\n\t});\r\n\r\n\t/**\r\n\t * 当前数据整体长度（从0开始）\r\n\t */\r\n\tconst [currentDataSpace, setcurrentDataSpace] = useState<string>(\"0\");\r\n\r\n\t/**\r\n\t * 当前数据相对0的位置(以start为基准 )\r\n\t */\r\n\tconst [currentDataPositionOfStart, setcurrentDataPositionofStart] = useState<string>(\"0\");\r\n\r\n\t/**\r\n\t * ============================line 属性state===========================\r\n\t */\r\n\r\n\t/**\r\n\t * view的全量尺寸\r\n\t */\r\n\tconst [viewSize, setviewSize] = useState<{ width: number; height: number }>({\r\n\t\twidth: 0,\r\n\t\theight: 0,\r\n\t});\r\n\r\n\t/**\r\n\t * line的位置（上左定位）\r\n\t *内容区和label区的分割线的位置\r\n\t */\r\n\tconst [linePosition, setlinePosition] = useState<pointCoord>({ x: 0, y: 0 });\r\n\tconst [labelSpace, setlabelSpace] = useState<number>(0);\r\n\r\n\t/**\r\n\t * line的尺寸\r\n\t */\r\n\tconst [lineSize, setlineSize] = useState<{\r\n\t\t/**\r\n\t\t * line的长度\r\n\t\t */\r\n\t\theight: number;\r\n\t\t/**\r\n\t\t * line的粗细\r\n\t\t */\r\n\t\tsize: number;\r\n\t}>({\r\n\t\theight: 0,\r\n\t\tsize: 0,\r\n\t});\r\n\r\n\t/**\r\n\t * line的颜色\r\n\t */\r\n\tconst [lineColor, setlineColor] = useState<string>(\"\");\r\n\r\n\t/**\r\n\t * ============================网格线 属性state===========================\r\n\t */\r\n\r\n\t/**\r\n\t * 网格线组\r\n\t */\r\n\tconst [netLineArr, setnetLineArr] = useState<Array<netLineItem>>([]);\r\n\r\n\t/**\r\n\t * 网格线的最大数量\r\n\t */\r\n\tconst [netLineMaxCount, setnetLineMaxCount] = useState<number>(0);\r\n\r\n\t/**\r\n\t * 轴网格线最小数量\r\n\t */\r\n\tconst [netLineMinCount, setnetLineMinCount] = useState<number>(0);\r\n\r\n\t/**\r\n\t * ============================tick 属性state===========================\r\n\t */\r\n\r\n\t/**\r\n\t * 显示tick组（用于显示的tick）\r\n\t */\r\n\tconst [displayTickArr, setdisplayTickArr] = useState<Array<tickItem>>([]);\r\n\tconst [tickLength, settickLength] = useState<number>(0);\r\n\r\n\t/**\r\n\t * ==========================静态常量==============================\r\n\t */\r\n\r\n\t//计算用的缩进\r\n\tconst _shiftLength = 18;\r\n\t//显示时取小数点后几位\r\n\tconst displayFix = 7;\r\n\t/**\r\n\t * ==========================函数==============================\r\n\t */\r\n\r\n\t/**\r\n\t * 更新轴 (所有数字都依据_shiftLength转换成大数字用BigNumber.js进行计算 )\r\n\t *@param  {number} viewWidth 界面的全量宽度\r\n\t *@param  {number} viewHeight 界面的全量高度\r\n\t *@param {numberScope} dataScope 数据范围\r\n\t *@returns {void}\r\n\t */\r\n\tconst updateAxisSates = function (viewWidth: number, viewHeight: number, dataScope: numberScope) {\r\n\t\tconsole.log(dataScope);\r\n\t\tlet _dataScope: numberScopeString = {\r\n\t\t\tstart: new _bigNumber(dataScope.start)\r\n\t\t\t\t.times(new _bigNumber(10).exponentiatedBy(_shiftLength).toFixed())\r\n\t\t\t\t.toFixed(0),\r\n\t\t\tend: new _bigNumber(dataScope.end)\r\n\t\t\t\t.times(new _bigNumber(10).exponentiatedBy(_shiftLength).toFixed())\r\n\t\t\t\t.toFixed(0),\r\n\t\t};\r\n\t\tlet scopeResult = expandDataSpanceEdge(_dataScope);\r\n\r\n\t\tif (\r\n\t\t\tviewWidth === viewSize.width &&\r\n\t\t\tviewHeight === viewSize.height &&\r\n\t\t\tscopeResult.dataScope === currentDataScope\r\n\t\t) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t/* 设置各项属性 */\r\n\t\tsetviewSize({\r\n\t\t\twidth: viewWidth,\r\n\t\t\theight: viewHeight,\r\n\t\t});\r\n\r\n\t\tsetlinePosition({\r\n\t\t\tx: viewWidth - getSpaceSize(initArgs.labelSpace!, viewWidth),\r\n\t\t\ty: 0,\r\n\t\t});\r\n\t\tsetlineSize({\r\n\t\t\theight: viewHeight - getSpaceSize(xAxis.initArgs.labelSpace!, viewHeight) + 1,\r\n\t\t\tsize: initArgs.lineSize!,\r\n\t\t});\r\n\t\tsetlabelSpace(getSpaceSize(initArgs.labelSpace!, viewHeight));\r\n\r\n\t\t//计算数据边距\r\n\t\t//let _currentDataSpace = new _bigNumber(shiftNumber(dataScope.end - dataScope.start, _shiftLength)).toString();\r\n\r\n\t\t////\r\n\t\t// dataScope.start - _currentDataSpace * initArgs.displayPadding!,\r\n\t\tsetcurrentDataScope(scopeResult.dataScope);\r\n\t\tsetcurrentDataSpace(scopeResult.currentDataSpace);\r\n\t\tsetcurrentDataPositionofStart(new _bigNumber(dataScope.start).minus(\"0\").toString());\r\n\t\tsettickLength(getSpaceSize(initArgs.tickLength!, viewWidth));\r\n\t\tsetlineColor(initArgs.lineColor!);\r\n\t\tsetnetLineMaxCount(initArgs.netLineMaxCount!);\r\n\t\tsetnetLineMinCount(initArgs.netLineMinCount!);\r\n\t};\r\n\r\n\tconst update = function (viewWidth: number, viewHeight: number) {\r\n\t\t/* 设置各项属性 */\r\n\t\tsetviewSize({\r\n\t\t\twidth: viewWidth,\r\n\t\t\theight: viewHeight,\r\n\t\t});\r\n\t\tsetlinePosition({\r\n\t\t\tx: viewWidth - getSpaceSize(initArgs.labelSpace!, viewWidth),\r\n\t\t\ty: 0,\r\n\t\t});\r\n\t\tsetlineSize({\r\n\t\t\theight: viewHeight - getSpaceSize(xAxis.initArgs.labelSpace!, viewHeight) + 1,\r\n\t\t\tsize: initArgs.lineSize!,\r\n\t\t});\r\n\t\tsetlabelSpace(getSpaceSize(initArgs.labelSpace!, viewHeight));\r\n\t\tsettickLength(getSpaceSize(initArgs.tickLength!, viewWidth));\r\n\t\tsetlineColor(initArgs.lineColor!);\r\n\t\tsetnetLineMaxCount(initArgs.netLineMaxCount!);\r\n\t\tsetnetLineMinCount(initArgs.netLineMinCount!);\r\n\t};\r\n\r\n\t//扩展数据范围边界（使得显示范围不显得局促）\r\n\tconst expandDataSpanceEdge = function <T extends numberScopeString>(\r\n\t\tinput: T\r\n\t): {\r\n\t\tdataScope: T;\r\n\t\tcurrentDataSpace: string;\r\n\t} {\r\n\t\tlet result = { ...input };\r\n\t\tlet currentDataSpace = new _bigNumber(input.end).minus(input.start).toString();\r\n\r\n\t\tlet _expandAmount = new _bigNumber(currentDataSpace).times(initArgs.displayPadding!);\r\n\r\n\t\tcurrentDataSpace = new _bigNumber(currentDataSpace).plus(_expandAmount).toString();\r\n\r\n\t\tresult.start = new _bigNumber(input.start).minus(new _bigNumber(_expandAmount).div(2)).toString();\r\n\t\tresult.end = new _bigNumber(input.end).plus(new _bigNumber(_expandAmount).div(2)).toString();\r\n\t\treturn { dataScope: result, currentDataSpace };\r\n\t};\r\n\r\n\t//扩展像素范围边界（使得显示范围不显得局促）\r\n\tconst expandDataSpanceEdgePIX = function <T extends numberScope>(\r\n\t\tinput: T\r\n\t): {\r\n\t\tdataScope: T;\r\n\t\tcurrentDataSpace: string;\r\n\t} {\r\n\t\tlet result = { ...input };\r\n\t\tlet currentDataSpace = new _bigNumber(input.start).minus(input.end).toString();\r\n\r\n\t\tlet _expandAmount = new _bigNumber(currentDataSpace).times(initArgs.displayPadding!);\r\n\r\n\t\tcurrentDataSpace = new _bigNumber(currentDataSpace).plus(_expandAmount).toString();\r\n\r\n\t\tresult.start = Number(new _bigNumber(input.start).plus(new _bigNumber(_expandAmount).div(2)).toString());\r\n\t\tresult.end = Number(new _bigNumber(input.end).minus(new _bigNumber(_expandAmount).div(2)).toString());\r\n\t\treturn { dataScope: result, currentDataSpace };\r\n\t};\r\n\r\n\t/**\r\n\t * tick种子计算\r\n\t * 给定一个区间【开始，结束】，这是一段范围，需要在这个范围里找到8~4个tick\r\n\t * 这个tick需要满足以下条件\r\n\t * 1.显示tick的空间只能显示7位数字加一个小数点\r\n\t * 2.需要考虑到大于7位数字显示的情况\r\n\t * 3.需要考虑1位数字+6位小数的情况\r\n\t * (所有数字都依据_shiftLength转换成大数字用BigNumber.js进行计算 )\r\n\t *\r\n\t *\r\n\t * 解决思路：\r\n\t * 1.【开始，结束】【1.123456，4.215463】里的数字都*1000000 就算碰到1.123456遮掩的数字，也能进行整除处理 =》 【1123456，4215463】\r\n\t * 2.给“开始”数字例如 1123456 进行取整，从10位开始，先取成1123460,先计算跨度 4215463 - 1123460 =3092003 然后计算3092003/10 得到309200.3 我们的目标是<8，所以继续以此类推...\r\n\t * 3.上一个数字继续取整 1123460 进行取整，但是这次 10*2=20，那么先取成 1123480 ,先计算跨度 4215463 - 1123480 =3091983,然后计算3091983/20 得到154599.15 我们的目标是<8，所以继续以此类推...\r\n\t * 4.上一个数字继续取整 1123480 进行取整，但是这次 20*2=40，那么先取成 1123520 ,先计算跨度 4215463 - 1123520 =3091943,然后计算3091943/40 得到77298.575 我们的目标是<8，所以继续以此类推...\r\n\t * 5.上一个数字继续取整 1123520 进行取整，但是这次 40*2=80，那么先取成 1123600 ,先计算跨度 4215463 - 1123600 =3091863,然后计算3091863/80 得到38648.2875 我们的目标是<8，所以继续以此类推...\r\n\t * 6.上一个数字继续取整 1123600 进行取整，但是这次 80*2=160，那么先取成 1123760 ,先计算跨度 4215463 - 1123760 =3091703,然后计算3091703/160 得到19323.14375 我们的目标是<8，所以继续以此类推...\r\n\t * 7.上一个数字继续取整 1123760 进行取整，但是这次 160*2=380，那么先取成 1121140 ,先计算跨度 4215463 - 1121140 =3094323,然后计算 3094323/380 得到8142.9552631578945 我们的目标是<8，所以继续以此类推...\r\n\t * 8.上一个数字继续取整 1121140 进行取整，但是这次 380*2=760，那么先取成 1121800 ,先计算跨度 4215463 - 1121800 =3093663,然后计算 3093663/760 得到4070.6092105263156 我们的目标是<8，所以继续以此类推...\r\n\t * 9.上一个数字继续取整 1121800 进行取整，但是这次 760*2=1520，那么先取成 1123300 ,先计算跨度 4215463 - 1123300 =3092163,然后计算 3092163/1520 得到2034.3177631578947 我们的目标是<8，所以继续以此类推...\r\n\t * 10.上一个数字继续取整 1123300 进行取整，但是这次 1520*2=3040，那么先取成 1126340 ,先计算跨度 4215463 - 1126340 =3089123,然后计算 3089123/3040 得到1016.1588815789473 我们的目标是<8，所以继续以此类推...\r\n\t * 11.上一个数字继续取整 1126340 进行取整，但是这次 3040*2=6080，那么先取成 1132420 ,先计算跨度 4215463 - 1132420 =3083043,然后计算 3083043/6080 得到507.07944078947367 我们的目标是<8，所以继续以此类推...\r\n\t * 12.上一个数字继续取整 1132420 进行取整，但是这次 6080*2=12160，那么先取成 1144580 ,先计算跨度 4215463 - 1144580 =3070883,然后计算 3070883/12160 得到252.53972039473683 我们的目标是<8，所以继续以此类推...\r\n\t * 13.上一个数字继续取整 1144580 进行取整，但是这次 12160*2=24320，那么先取成 1168900 ,先计算跨度 4215463 - 1168900 =3046563,然后计算 3046563/24320 得到125.26986019736842 我们的目标是<8，所以继续以此类推...\r\n\t * 14.上一个数字继续取整 1168900 进行取整，但是这次 24320*2=48640，那么先取成 1217540 ,先计算跨度 4215463 - 1217540 =2997923,然后计算 2997923/48640 得到61.63493009868421 我们的目标是<8，所以继续以此类推...\r\n\t * 15.上一个数字继续取整 1217540 进行取整，但是这次 48640*2=97280，那么先取成 1217540 ,先计算跨度 4215463 - 1314820 =2900643,然后计算 2900643/97280 得到61.63493009868421 我们的目标是<8，所以继续以此类推...\r\n\t * 16.上一个数字继续取整 1217540 进行取整，但是这次 97280*2=194560 ，那么先取成 1412100 ,先计算跨度 4215463 - 1412100 =2803363,然后计算 2803363/194560 得到14.408732524671052 我们的目标是<8，所以继续以此类推...\r\n\t * 17.上一个数字继续取整 1412100 进行取整，但是这次 194560*2=389120 ，那么先取成 1801220 ,先计算跨度 4215463 - 1801220 =2414243,然后计算 2414243/389120 得到6.204366262335526 我们的目标是<8，任务完成；\r\n\t * 1801220 / 6.204366262335526 得到每步\r\n\t * 然后再用 【每步的数字】 / 1000000\r\n\t *\r\n\t * 实际计算和上面写的算法有一点点不太一样，每次计算完成后不再是step * 2  而是 step + “0” 也就是加一位数\r\n\t *\r\n\t */\r\n\tconst getTickSeed = function (): string[] {\r\n\t\tlet dataScope = { ...currentDataScope };\r\n\r\n\t\tlet resultTickArr: string[] = [];\r\n\r\n\t\t//范围的计算数值(直接加权7位数进行运算，算完再换算回来 )\r\n\t\tlet scope = {\r\n\t\t\tstart: dataScope.start,\r\n\t\t\tend: dataScope.end,\r\n\t\t};\r\n\r\n\t\t//步数\r\n\t\tlet step = \"10\";\r\n\t\tlet stepAdd = \"10\";\r\n\t\t//取整范围\r\n\t\tlet intGetPar = \"10\";\r\n\t\tvar tickCount = \"8\";\r\n\t\tvar startInteger: string = roundToNearestTenBigNumber(scope.start, Number(intGetPar));\r\n\t\tvar integerTimes = 0;\r\n\t\twhile (true) {\r\n\t\t\t//算跨度\r\n\t\t\t//scope.end - startInteger\r\n\t\t\tlet scDf = new _bigNumber(scope.end).minus(startInteger).toString();\r\n\t\t\t//算数量\r\n\t\t\t//scDf / step\r\n\t\t\ttickCount = new _bigNumber(scDf).div(step).toFixed().toString();\r\n\r\n\t\t\t//看算出来的数量是否大于最大数量，大于的话就继续算\r\n\t\t\tif (new _bigNumber(tickCount).gt(initArgs.netLineMaxCount!)) {\r\n\t\t\t\t//把step 加一个0\r\n\t\t\t\tlet postStep = (Number(step) + Number(stepAdd)).toString();\r\n\t\t\t\t/**\r\n\t\t\t\t * 这里的思路较原思路有所改变\r\n\t\t\t\t * 当step每多一个位 就将每个step的步进多加一位 例如原来的步进是10 如果现在step是100 那么步进就要来到100\r\n\t\t\t\t * 取整范围也是，比如之前是个位数取整，步进多了一位就要变成十位取整，以此类推\r\n\t\t\t\t */\r\n\t\t\t\tif (postStep.length > step.length) {\r\n\t\t\t\t\tstepAdd = stepAdd + \"0\";\r\n\t\t\t\t\tintGetPar = intGetPar + \"0\";\r\n\t\t\t\t\tstartInteger = roundToNearestTenBigNumber(scope.start, Number(intGetPar));\r\n\t\t\t\t\tintegerTimes = integerTimes + 1;\r\n\t\t\t\t}\r\n\t\t\t\tstep = postStep;\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//算出每个tick的数据\r\n\t\tfor (var i = 0; i < Number(tickCount); i++) {\r\n\t\t\t//startInteger + (step * i)\r\n\t\t\tresultTickArr.push(new _bigNumber(startInteger).plus(new _bigNumber(step).times(i)).toString());\r\n\t\t}\r\n\r\n\t\treturn resultTickArr;\r\n\t};\r\n\r\n\t/**\r\n\t * 取得显示tick\r\n\t */\r\n\tconst computDisplayTicks = function (tickSeed: string[]): tickItem[] {\r\n\t\tlet result: tickItem[] = [];\r\n\t\tlet index = 0;\r\n\t\tfor (var item of tickSeed) {\r\n\t\t\tresult.push({\r\n\t\t\t\tindex: index,\r\n\t\t\t\tcolor: initArgs.tickColor!,\r\n\t\t\t\tlength: getSpaceSize(initArgs.tickLength!, viewSize.width),\r\n\t\t\t\tsize: initArgs.tickSize!,\r\n\t\t\t\tcPosition: {\r\n\t\t\t\t\tx: linePosition.x,\r\n\t\t\t\t\ty: (function () {\r\n\t\t\t\t\t\tlet pre = Number(\r\n\t\t\t\t\t\t\tnew _bigNumber(item)\r\n\t\t\t\t\t\t\t\t.minus(currentDataScope.start)\r\n\t\t\t\t\t\t\t\t.div(currentDataSpace)\r\n\t\t\t\t\t\t\t\t.toFixed(_shiftLength)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\treturn lineSize.height - lineSize.height * pre;\r\n\t\t\t\t\t})(),\r\n\t\t\t\t},\r\n\t\t\t\tvalue: item,\r\n\t\t\t\tdisplayValue: new _bigNumber(shiftNumber(item, -_shiftLength)).toFixed(displayFix),\r\n\t\t\t});\r\n\t\t\tindex++;\r\n\t\t}\r\n\t\treturn result;\r\n\t};\r\n\r\n\t/**\r\n\t * 取得显示line\r\n\t */\r\n\tconst computDisplayLines = function (tickSeed: string[]): netLineItem[] {\r\n\t\tlet result: netLineItem[] = [];\r\n\t\tlet index = 0;\r\n\t\tfor (var item of tickSeed) {\r\n\t\t\tresult.push({\r\n\t\t\t\tcolor: initArgs.netLineColor!,\r\n\t\t\t\tlength: linePosition.x,\r\n\t\t\t\tsize: initArgs.netLineSize!,\r\n\t\t\t\tcPosition: {\r\n\t\t\t\t\tx: 0,\r\n\t\t\t\t\ty: (function () {\r\n\t\t\t\t\t\tlet pre = Number(\r\n\t\t\t\t\t\t\tnew _bigNumber(item)\r\n\t\t\t\t\t\t\t\t.minus(currentDataScope.start)\r\n\t\t\t\t\t\t\t\t.div(currentDataSpace)\r\n\t\t\t\t\t\t\t\t.toFixed(_shiftLength)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\treturn lineSize.height - lineSize.height * pre;\r\n\t\t\t\t\t})(),\r\n\t\t\t\t},\r\n\t\t\t\tvalue: item,\r\n\t\t\t});\r\n\t\t\tindex++;\r\n\t\t}\r\n\t\treturn result;\r\n\t};\r\n\r\n\t/**\r\n\t * 计算tick\r\n\t */\r\n\tconst computTicks = function () {\r\n\t\t//获得当前轴的整数列（种子）\r\n\t\tlet tickSeed: string[] = getTickSeed();\r\n\t\tlet _displayTickArr = computDisplayTicks(tickSeed);\r\n\t\tlet _netLineArr = computDisplayLines(tickSeed);\r\n\r\n\t\tsetdisplayTickArr(_displayTickArr);\r\n\t\tsetnetLineArr(_netLineArr);\r\n\t\tsetisFinishedInit(true);\r\n\t\tsetyAxisUpdateTimeStamp(+new Date());\r\n\t};\r\n\r\n\t/**\r\n\t * 计算tooltip\r\n\t */\r\n\tconst tooltipMove = function (position: pointCoord, isShowTooltip: boolean) {\r\n\t\tlet tooltipY = position.y;\r\n\t\tif (tooltipY > lineSize.height) {\r\n\t\t\tisShowTooltip = false;\r\n\t\t}\r\n\r\n\t\tsettooltipIsShow(isShowTooltip);\r\n\t\tif (isShowTooltip === false) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet pre = 1 - tooltipY / lineSize.height;\r\n\t\tlet value = new _bigNumber(currentDataScope.start).plus(new _bigNumber(currentDataSpace).times(pre)).toString();\r\n\r\n\t\tlet _tooltipState: IToolTipItem = {\r\n\t\t\tposition: {\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: tooltipY,\r\n\t\t\t},\r\n\t\t\tlength: linePosition.x,\r\n\t\t\tvalue: value,\r\n\t\t\tdisplayValue: new _bigNumber(shiftNumber(value, -_shiftLength)).toFixed(displayFix),\r\n\t\t\trelatedTickItem: null,\r\n\t\t\tsize: getSpaceSize(initArgs.tooltip!.lineSize!, viewSize.width),\r\n\t\t};\r\n\t\tsetTooltipState(_tooltipState);\r\n\t};\r\n\r\n\t/**\r\n\t * ==================================Effects===============================\r\n\t */\r\n\tuseEffect(function (): ReturnType<React.EffectCallback> {\r\n\t\tif (isMounted === false) {\r\n\t\t\tsetIsMounted(true);\r\n\t\t}\r\n\t\treturn function (): void {\r\n\t\t\tsetIsMounted(false);\r\n\t\t};\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, []);\r\n\r\n\tuseEffect(\r\n\t\tfunction (): ReturnType<React.EffectCallback> {\r\n\t\t\tif (currentDataSpace !== \"0\") {\r\n\t\t\t\tcomputTicks();\r\n\t\t\t}\r\n\t\t},\r\n\t\t[currentDataScope]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\tfunction (): ReturnType<React.EffectCallback> {\r\n\t\t\tif (initArgsChange !== -1) {\r\n\t\t\t\tupdate(viewSize.width, viewSize.height);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[initArgsChange]\r\n\t);\r\n\r\n\treturn {\r\n\t\tdata: {\r\n\t\t\tisFinishedInit,\r\n\t\t\ttooltipState,\r\n\t\t\ttooltipIsShow,\r\n\t\t\tcurrentDataScope,\r\n\t\t\tcurrentDataSpace,\r\n\t\t\tcurrentDataPositionOfStart,\r\n\t\t\tviewSize,\r\n\t\t\tlinePosition,\r\n\t\t\tlabelSpace,\r\n\t\t\tlineColor,\r\n\t\t\tnetLineArr,\r\n\t\t\tnetLineMaxCount,\r\n\t\t\tnetLineMinCount,\r\n\t\t\tdisplayTickArr,\r\n\t\t\tlineSize,\r\n\t\t\ttickLength,\r\n\t\t\tyAxisUpdateTimeStamp,\r\n\t\t},\r\n\t\tfuncs: {\r\n\t\t\tupdateAxisSates,\r\n\t\t\ttooltipMove,\r\n\t\t\texpandDataSpanceEdge,\r\n\t\t\texpandDataSpanceEdgePIX,\r\n\t\t\tsetinitArgs: function (arg: Iaxis) {\r\n\t\t\t\tsetinitArgs(Object.assign(true, initArgs, arg));\r\n\t\t\t\tsetinitArgsChange(+new Date());\r\n\t\t\t},\r\n\t\t},\r\n\t\tinitArgs,\r\n\t};\r\n};\r\n\r\nexport default useyAxis;\r\n","import {\r\n  createContext,\r\n  useState,\r\n  useContext,\r\n  useRef,\r\n  useCallback,\r\n  useEffect,\r\n  FC,\r\n  ReactElement,\r\n} from 'react';\r\n\r\nimport {\r\n  GMT0000TolocalTime,\r\n  anyTimeToGMT0000ToTarget,\r\n  findIntersectionByKey,\r\n  findIntersectionCandle,\r\n  getRightDate,\r\n  getSpaceSize,\r\n  localTimeToGMT0000,\r\n} from '../utils/consts';\r\nimport _bigNumber from 'bignumber.js';\r\nimport { merge } from 'lodash';\r\nimport useDebounce from './debounceHook';\r\nimport useThrottle from './throttleHook';\r\nimport { IdataConfig, IuseCandleView } from '../interface/configInterFaces';\r\nimport {\r\n  IAxisobj,\r\n  IuseCandleHook,\r\n  IyAxisobj,\r\n} from '../interface/hooksInterFace';\r\nimport { DEFAULTDATAVALUES } from '../utils/defaultValues';\r\nimport {\r\n  IToolTipItem,\r\n  IcandleData,\r\n  IcandleItem,\r\n  IcandleUpdateItem,\r\n  numberScope,\r\n  numberScopeString,\r\n  tickItem,\r\n} from '../interface/itemsInterFace';\r\nimport { TtimeType } from '../interface/timeDefineInterFace';\r\n\r\ninterface MessageEventInit<T = any> extends EventInit {\r\n  lastEventId?: string;\r\n  channel?: string;\r\n  data?: T;\r\n  origin?: string;\r\n  ports?: MessagePort[];\r\n  source?: Window;\r\n}\r\ninterface MessageEvent<T = any> extends Event {\r\n  readonly data: T;\r\n  readonly origin: string;\r\n  readonly ports: any;\r\n  readonly source: Window;\r\n  initMessageEvent(\r\n    typeArg: string,\r\n    canBubbleArg: boolean,\r\n    cancelableArg: boolean,\r\n    dataArg: T,\r\n    originArg: string,\r\n    lastEventIdArg: string,\r\n    sourceArg: Window\r\n  ): void;\r\n}\r\n\r\ndeclare var MessageEvent: {\r\n  prototype: MessageEvent;\r\n  new <T>(type: string, eventInitDict?: MessageEventInit<T>): MessageEvent<T>;\r\n};\r\n\r\n/**\r\n * 数据处理钩子\r\n *\r\n * 1.静态模式下拿到数据的处理步骤\r\n *   1.1 全部由过去到现在进行一遍排序\r\n *   1.2 检查 data[0] ~ data[1] 的时间范围是否为当前设置的时间类型的时间范围：\r\n *      1.2.1 如果比当前设置的时间范围小，就进行归并\r\n *      1.2.3 归并之后的数据放进allComputedCandleData堆里\r\n *      1.2.4 如果比当前设置的时间范围大，就不进行任何操作，直接停止更新。\r\n *      1.2.4 如果等于当前设置的时间范围，就不进行归并操作，放进allComputedCandleData堆里。\r\n *   1.3 根据x轴的tick 在 allComputedCandleData里找到的数据生成并计算完位置等信息后放进 displayCandleData\r\n *   1.4 根据上面1.3的计算更新y轴的范围\r\n *\r\n *\r\n * 2.静态模式下移动和缩放时响应的方式：\r\n *   2.1 根据x轴的tick 在 allComputedCandleData里找到的数据生成并计算完位置等信息后放进 displayCandleData\r\n *   2.2 根据上面1.3的计算更新y轴的范围\r\n *\r\n * 但不是每次移动都这样，需要一个响亮来进行控制，当拖动速度很快时只进行移动计算，不往 displayarr里加入任何东西 只计算视图内的数据，同时发起webworker离线计算接下来可能要更新的数据\r\n *当速度小于某个值的时候，就把webworker算好的数据更新进来\r\n */\r\nconst useCandleHook = function(\r\n  args: IdataConfig,\r\n  xAxis: IAxisobj,\r\n  yAxis: IyAxisobj,\r\n  baseConfig: IuseCandleView\r\n): IuseCandleHook {\r\n  xAxis = xAxis!;\r\n  yAxis = yAxis!;\r\n  const [initArgs, setinitArgs] = useState<IdataConfig>(\r\n    merge(DEFAULTDATAVALUES, args)\r\n  );\r\n  let updateThrottlereComputAllDisplayedCandleData = useThrottle();\r\n  let updateThrottle = useThrottle();\r\n  /**\r\n   * ============================state===========================\r\n   */\r\n  const [isMounted, setIsMounted] = useState<boolean>(false);\r\n  const [currentTimeTypeName, setcurrentTimeTypeName] = useState<string>('');\r\n  const [miny, setminy] = useState<number>(0);\r\n  const [isFetchingData, setisFetchingData] = useState<boolean>(true);\r\n  const [fetchDataStemp, setfetchDataStemp] = useState<number>(-1);\r\n  const [streamData, setstreamData] = useState<IcandleUpdateItem | null>(null);\r\n  const [stopDynamicFetching, setstopDynamicFetching] = useState<boolean>(\r\n    false\r\n  );\r\n  const [lastMaxMiny, setlastMaxMiny] = useState<numberScope>({\r\n    start: 0,\r\n    end: 0,\r\n  });\r\n\r\n  const [workMessage, seworkMessage] = useState<MessageEvent<any>>();\r\n  const [LastScopeddcData, setLastScopeddcData] = useState<IcandleData[]>([]);\r\n\r\n  /**\r\n   * 动态数据暂存处\r\n   */\r\n  const [TempDynamicData, setTempDynamicData] = useState<IcandleItem[] | null>(\r\n    null\r\n  );\r\n  const [isFirstTimeUpdate, setisFirstTimeUpdate] = useState<boolean>(false);\r\n\r\n  /**\r\n   * 是否已完成初始化\r\n   */\r\n  const [isFinishedInit, setisFinishedInit] = useState<boolean>(false);\r\n  const [isDQuickUpdateing, setisDQuickUpdateing] = useState<boolean>(false);\r\n\r\n  const [cursorCandleItem, setCursorCandleItem] = useState<IcandleData | null>(\r\n    null\r\n  );\r\n  const [latestCandleItem, setlatestCandleItem] = useState<IcandleData | null>(\r\n    null\r\n  );\r\n\r\n  /**\r\n   * 上次更新的X轴时间戳\r\n   */\r\n  const [lastTimexAsixStemp, setlastTimexAsixStemp] = useState<number>(798);\r\n\r\n  /**\r\n   * volume 数据图表的高度\r\n   */\r\n  const [volumChartPixHeight, setvolumChartPixHeight] = useState<number>(0);\r\n  /**\r\n   * volume 数据图表 当前视窗区域的最大值\r\n   */\r\n  const [volumChartViewMax, setvolumChartViewMax] = useState<number>(0);\r\n\r\n  /**\r\n   * 是否为静态数据模式\r\n   */\r\n  const [isStaticData, setisStaticData] = useState<boolean>(false);\r\n\r\n  /**\r\n   * 所有的candle数据（原始数据，未经过加工）\r\n   */\r\n  const [orgCandleData, setorgCandleData] = useState<IcandleItem[]>([]);\r\n\r\n  /**\r\n   * 用于显示的candle数据(经过加工和归并之后的数据 )\r\n   */\r\n  const [displayCandleData, setdisplayCandleData] = useState<IcandleData[]>([]);\r\n\r\n  /**\r\n   * 记录当前视窗内y轴数据的最大值和最小值\r\n   */\r\n  const [displayCandleMaxMin, setdisplayCandleMaxMin] = useState<\r\n    numberScopeString\r\n  >({ start: '0', end: '0' });\r\n  const [org_displayCandleMaxMin, setorg_displayCandleMaxMin] = useState<\r\n    numberScopeString\r\n  >({ start: '0', end: '0' });\r\n  const [yScale, setyScale] = useState<number>(1);\r\n\r\n  /**\r\n   * latestCandle\r\n   * 最新的candle\r\n   * 最末尾的Candle\r\n   */\r\n  const [latestCandle, setlatestCandle] = useState<IcandleData>();\r\n  const [\r\n    latestCandleToolTip,\r\n    setlatestCandleToolTip,\r\n  ] = useState<IToolTipItem | null>(null);\r\n  const [\r\n    latestVolumeToolTip,\r\n    setlatestVolumeToolTip,\r\n  ] = useState<IToolTipItem | null>(null);\r\n\r\n  /**\r\n   * 视图范围内最末尾的candle\r\n   * 最新的candle\r\n   */\r\n  const [\r\n    displayLatestCandle,\r\n    setdisplayLatestCandle,\r\n  ] = useState<IcandleData | null>(null);\r\n  const [\r\n    latestdisplayLatestCandle,\r\n    setlatestdisplayLatestCandle,\r\n  ] = useState<IToolTipItem | null>(null);\r\n  const [\r\n    latestdisplayLatestVolume,\r\n    setlatestdisplayLatestVolume,\r\n  ] = useState<IToolTipItem | null>(null);\r\n\r\n  /**\r\n   * view的全量尺寸\r\n   */\r\n  const [viewSize, setviewSize] = useState<{ width: number; height: number }>({\r\n    width: 0,\r\n    height: 0,\r\n  });\r\n\r\n  const [updateStamp, setupdateStamp] = useState<number>(-1);\r\n  const [initDyStamp, setinitDyStamp] = useState<number>(-1);\r\n\r\n  /**\r\n   * ==================================Ref===============================\r\n   */\r\n\r\n  /**\r\n   * 所有的归并后的数据(数据来源于orgCandleData )\r\n   */\r\n  let allComputedCandleData = useRef<{ [propName: string]: IcandleItem }>(\r\n    {} as { [propName: string]: IcandleItem }\r\n  );\r\n  let isUpdateing = useRef<boolean>(false);\r\n  let isQuickUpdateing = useRef<boolean>(false);\r\n  let isEscapeItems = useRef<boolean>(false);\r\n  let mWorker = useRef<Worker>();\r\n\r\n  /**\r\n   * ==========================静态常量==============================\r\n   */\r\n  //显示时取小数点后几位\r\n  const displayFix = 7;\r\n\r\n  /**\r\n   * ==========================函数==============================\r\n   */\r\n\r\n  /**\r\n   * 判断数据的事件跨度是否和当前设置的时间跨度相符\r\n   */\r\n  const determineTimeSpaceConsistent = function(\r\n    data: IcandleItem[]\r\n  ): 'same' | 'bigger' | 'smaller' {\r\n    if (data.length === 1) {\r\n      return 'smaller';\r\n    }\r\n    let inputDataTimeSpace =\r\n      getRightDate(data[1].time) - getRightDate(data[0].time);\r\n    let configDataTimeSpace = xAxis.data.currentTimeType!.timeGap;\r\n    if (inputDataTimeSpace === configDataTimeSpace) {\r\n      return 'same';\r\n    } else if (inputDataTimeSpace > configDataTimeSpace) {\r\n      return 'bigger';\r\n    }\r\n    return 'smaller';\r\n  };\r\n\r\n  const getMin = function(item: IcandleItem, start: number): number {\r\n    let result: number = start;\r\n    if (result > Number(item.open)) {\r\n      result = Number(item.open);\r\n    }\r\n\r\n    if (result > Number(item.close)) {\r\n      result = Number(item.close);\r\n    }\r\n\r\n    if (result > Number(item.high)) {\r\n      result = Number(item.high);\r\n    }\r\n\r\n    if (result > Number(item.low)) {\r\n      result = Number(item.low);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const getMax = function(item: IcandleItem, end: number): number {\r\n    let result: number = end;\r\n    if (result < Number(item.open)) {\r\n      result = Number(item.open);\r\n    }\r\n\r\n    if (result < Number(item.close)) {\r\n      result = Number(item.close);\r\n    }\r\n\r\n    if (result < Number(item.high)) {\r\n      result = Number(item.high);\r\n    }\r\n\r\n    if (result < Number(item.low)) {\r\n      result = Number(item.low);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  //按照当前的时间刻度归并数据（确保数据已经排序）\r\n  //数据只支持比当前设置的最小单位小的\r\n  //合并完数据就直接把数据放进allComputedCandleData堆里去了\r\n  const mergeData = function(data: IcandleItem[]): numberScopeString {\r\n    //归并的方式是这样的，首先确保数据已经排序，排序顺序为从最早到最晚\r\n    //那么我们可以从数组的最晚数据开始进行归并\r\n    //拿取最后一个数据的时间，通过时间配置对象取到整数\r\n    //将这个整数进行保存。然后归并到一个新的IcandleData对象里\r\n    //继续下一个，\r\n    //拿取下一个数据的时间，通过时间配置对象取到整数\r\n    //通过当前的项目的整数时间和上一个对象的整数时间进行比对\r\n    //一致就归并到一起\r\n    //不一致就另起一个新的IcandleData 将数据放进去，以此类推到数组循环结束\r\n    let _currentCandleStick: IcandleData = ({\r\n      time: -1,\r\n      open: -1,\r\n      close: -1,\r\n      high: -1,\r\n      low: -1,\r\n      volume: 0,\r\n    } as unknown) as IcandleData;\r\n\r\n    let prevItem: IcandleItem = data[data.length - 1];\r\n    //let result: IcandleData[] = [];\r\n\r\n    let _displayCandleMaxMin: numberScopeString = {\r\n      /**\r\n       * 最低点\r\n       * */\r\n      start: '9999999999999999999999',\r\n      /**\r\n       * 最高点\r\n       * */\r\n      end: '-9999999999999999999999',\r\n    };\r\n    for (let i = data.length - 1; i > -1; i--) {\r\n      let item = data[i];\r\n      let time = xAxis.data.currentTimeType!.roundingFunction(\r\n        getRightDate(item.time),\r\n        baseConfig.timeZone!.displayTimeZone!\r\n      );\r\n\r\n      if (\r\n        _currentCandleStick.time === -1 ||\r\n        time !== _currentCandleStick.time\r\n      ) {\r\n        if (\r\n          time !== _currentCandleStick.time &&\r\n          _currentCandleStick.time !== -1 &&\r\n          typeof allComputedCandleData.current[_currentCandleStick.time] ===\r\n            'undefined'\r\n        ) {\r\n          allComputedCandleData.current[\r\n            _currentCandleStick.time\r\n          ] = _currentCandleStick;\r\n          //result.push(_currentCandleStick);\r\n        }\r\n\r\n        _currentCandleStick = {\r\n          time: time,\r\n          open: -1,\r\n          close: -1,\r\n          high: '-9999999999999999999999',\r\n          low: '9999999999999999999999',\r\n          volume: 0,\r\n        };\r\n      }\r\n\r\n      _currentCandleStick.open = item.open;\r\n      if (\r\n        time <\r\n          xAxis.data.currentTimeType!.roundingFunction(\r\n            getRightDate(prevItem.time),\r\n            baseConfig!.timeZone!.displayTimeZone!\r\n          ) ||\r\n        _currentCandleStick.close === -1\r\n      ) {\r\n        _currentCandleStick.close = item.close;\r\n      }\r\n      if (Number(_currentCandleStick.high) < Number(item.high)) {\r\n        _currentCandleStick.high = item.high;\r\n      }\r\n\r\n      if (Number(_currentCandleStick.low) > Number(item.low)) {\r\n        _currentCandleStick.low = item.low;\r\n      }\r\n\r\n      _displayCandleMaxMin.start = getMin(\r\n        item,\r\n        Number(_displayCandleMaxMin.start)\r\n      ).toString();\r\n      _displayCandleMaxMin.end = getMax(\r\n        item,\r\n        Number(_displayCandleMaxMin.end)\r\n      ).toString();\r\n\r\n      _currentCandleStick.volume =\r\n        Number(_currentCandleStick.volume) + Number(item.volume);\r\n      prevItem = item;\r\n\r\n      if (i === 0) {\r\n        allComputedCandleData.current[\r\n          _currentCandleStick.time\r\n        ] = _currentCandleStick;\r\n        //result.push(_currentCandleStick);\r\n      }\r\n    }\r\n\r\n    return _displayCandleMaxMin;\r\n  };\r\n\r\n  /**\r\n   * 将数据直接放进allComputedCandleData\r\n   * @param data 输入数据\r\n   */\r\n  const putDataIntoAllComputedCandleData = function(\r\n    data: IcandleItem[]\r\n  ): numberScopeString {\r\n    let _displayCandleMaxMin: numberScopeString = {\r\n      /**\r\n       * 最低点\r\n       * */\r\n      start: '9999999999999999999999',\r\n      /**\r\n       * 最高点\r\n       * */\r\n      end: '-9999999999999999999999',\r\n    };\r\n    for (var item of data) {\r\n      if (typeof allComputedCandleData.current[item.time] === 'undefined') {\r\n        _displayCandleMaxMin.start = getMin(\r\n          item,\r\n          Number(_displayCandleMaxMin.start)\r\n        ).toString();\r\n        _displayCandleMaxMin.end = getMax(\r\n          item,\r\n          Number(_displayCandleMaxMin.end)\r\n        ).toString();\r\n        allComputedCandleData.current[item.time] = { ...item };\r\n      }\r\n    }\r\n\r\n    return _displayCandleMaxMin;\r\n  };\r\n\r\n  const getCandleColor = function(\r\n    start: string,\r\n    end: string,\r\n    type: 'wick' | 'candle'\r\n  ): string {\r\n    if (Number(start) > Number(end)) {\r\n      if (type === 'wick') return initArgs.candleStyles!.wickFallColor!;\r\n      if (type === 'candle') return initArgs.candleStyles!.candleFallColor!;\r\n    }\r\n    if (type === 'wick') return initArgs.candleStyles!.wickRiseColor!;\r\n    if (type === 'candle') return initArgs.candleStyles!.candleRiseColor!;\r\n    return '#fff';\r\n  };\r\n\r\n  const getCandleStatus = function(\r\n    start: string,\r\n    end: string,\r\n    type: 'wick' | 'candle'\r\n  ): 'rise' | 'fall' {\r\n    if (Number(start) > Number(end)) {\r\n      if (type === 'wick') return 'fall';\r\n      if (type === 'candle') return 'fall';\r\n    }\r\n    if (type === 'wick') return 'rise';\r\n    if (type === 'candle') return 'rise';\r\n    return 'rise';\r\n  };\r\n\r\n  const getDataSpaceFromNumberScope = function(\r\n    dataScope: numberScopeString,\r\n    start: number,\r\n    end: number\r\n  ) {\r\n    let space = Number(dataScope.end) - Number(dataScope.start);\r\n    let cspace = end - start;\r\n    let precent = Number((cspace / space).toFixed(5));\r\n    let yHeight =\r\n      xAxis.data.viewSize.height -\r\n      getSpaceSize(xAxis.initArgs.labelSpace!, xAxis.data.viewSize.height);\r\n    return yHeight * precent;\r\n  };\r\n\r\n  const getDataY = function(\r\n    dataScope: numberScopeString,\r\n    dataPoint: string\r\n  ): number {\r\n    let space = Number(dataScope.end) - Number(dataScope.start);\r\n    let precent = Number(\r\n      ((Number(dataPoint) - Number(dataScope.start)) / space).toFixed(5)\r\n    );\r\n    let yHeight =\r\n      xAxis.data.viewSize.height -\r\n      getSpaceSize(xAxis.initArgs.labelSpace!, xAxis.data.viewSize.height);\r\n    return yHeight - yHeight * precent;\r\n  };\r\n\r\n  //用y轴数据计算单个指标的各种属性\r\n  const computSingalCandledata = function(\r\n    //进行计算的项目\r\n    dataitem: IcandleData,\r\n    //扩展后的范围（数据）\r\n    dataScope: numberScopeString,\r\n    //未扩展的范围（数据）\r\n    orgScope: numberScopeString\r\n  ): IcandleData {\r\n    dataitem.candleColor = getCandleColor(\r\n      dataitem.open as string,\r\n      dataitem.close as string,\r\n      'candle'\r\n    );\r\n    dataitem.wickColor = getCandleColor(\r\n      dataitem.open as string,\r\n      dataitem.close as string,\r\n      'wick'\r\n    );\r\n    dataitem.candleStateus = getCandleStatus(\r\n      dataitem.open as string,\r\n      dataitem.close as string,\r\n      'candle'\r\n    );\r\n    dataitem.wickStateus = getCandleStatus(\r\n      dataitem.open as string,\r\n      dataitem.close as string,\r\n      'wick'\r\n    );\r\n    //快速渲染\r\n    if (isQuickUpdateing.current == true) {\r\n      dataitem.wickWidth = 1.2;\r\n      dataitem.candlePixPosition = {\r\n        x: 0,\r\n        y: getDataY(\r\n          dataScope,\r\n          Math.max(Number(dataitem.close), Number(dataitem.open)).toString()\r\n        ),\r\n      };\r\n      dataitem.wickPixPosition = {\r\n        x: 0, //x在渲染时直接取currentTick这里就不用计算了\r\n        y: getDataY(dataScope, dataitem.high.toString()),\r\n      };\r\n      dataitem.wickLength = getDataSpaceFromNumberScope(\r\n        dataScope,\r\n        Number(dataitem.low),\r\n        Number(dataitem.high)\r\n      );\r\n      //全量渲染\r\n    } else {\r\n      try {\r\n        dataitem.candleWidth = getSpaceSize(\r\n          initArgs.candleStyles!.candleWidth!,\r\n          xAxis.data.displayTickCommonpixWidth!\r\n        );\r\n        dataitem.wickWidth = getSpaceSize(\r\n          initArgs.candleStyles!.wickWidth!,\r\n          xAxis.data.displayTickCommonpixWidth!\r\n        );\r\n      } catch (_e) {}\r\n\r\n      dataitem.candlePixPosition = {\r\n        x: 0, //x在渲染时直接取currentTick这里就不用计算了\r\n        y: getDataY(\r\n          dataScope,\r\n          Math.max(Number(dataitem.close), Number(dataitem.open)).toString()\r\n        ),\r\n      };\r\n      dataitem.wickPixPosition = {\r\n        x: 0, //x在渲染时直接取currentTick这里就不用计算了\r\n        y: getDataY(dataScope, dataitem.high.toString()),\r\n      };\r\n      dataitem.candleLength = getDataSpaceFromNumberScope(\r\n        dataScope,\r\n        Math.min(Number(dataitem.open), Number(dataitem.close)),\r\n        Math.max(Number(dataitem.open), Number(dataitem.close))\r\n      );\r\n      if (dataitem.candleLength < 1) {\r\n        dataitem.candleLength = 1;\r\n      }\r\n      dataitem.wickLength = getDataSpaceFromNumberScope(\r\n        dataScope,\r\n        Number(dataitem.low),\r\n        Number(dataitem.high)\r\n      );\r\n    }\r\n    try {\r\n      //顺便计算单个tick的数据空间是否在最左边边缘\r\n      //记录视图范围内最末尾的candle\r\n      if (\r\n        xAxis.data.lineSize.width -\r\n          xAxis.data.x -\r\n          dataitem.currentTick!.pixSpace!.start >=\r\n          0 &&\r\n        dataitem.currentTick!.pixSpace!.end -\r\n          (xAxis.data.lineSize.width - xAxis.data.x) <=\r\n          dataitem.currentTick!.pixSpace!.end -\r\n            dataitem.currentTick!.pixSpace!.start\r\n      ) {\r\n        setdisplayLatestCandle(dataitem);\r\n      }\r\n    } catch (_e) {}\r\n    dataitem.updateTag = orgScope.start + orgScope.end;\r\n    return dataitem;\r\n  };\r\n\r\n  //用y轴数据计算单个指标的各种属性\r\n  const computSingalCandledataMini = function(\r\n    //candle项目\r\n    dataitem: IcandleData,\r\n    //未扩展的范围（数据）\r\n    orgScope: numberScopeString\r\n  ): void {\r\n    try {\r\n      //顺便计算单个tick的数据空间是否在最左边边缘\r\n      //记录视图范围内最末尾的candle\r\n      if (\r\n        xAxis.data.lineSize.width -\r\n          xAxis.data.x -\r\n          dataitem.currentTick!.pixSpace!.start >=\r\n          0 &&\r\n        dataitem.currentTick!.pixSpace!.end -\r\n          (xAxis.data.lineSize.width - xAxis.data.x) <=\r\n          dataitem.currentTick!.pixSpace!.end -\r\n            dataitem.currentTick!.pixSpace!.start\r\n      ) {\r\n        setdisplayLatestCandle(dataitem);\r\n      }\r\n    } catch (_e) {}\r\n  };\r\n\r\n  /**\r\n   * 从x轴指针里查找数据\r\n   * @param tickArr x轴指针\r\n   * @param dataScope 范围\r\n   * @returns\r\n   */\r\n  const findDataByTicks = function(\r\n    tickArr: tickItem[]\r\n  ): IcandleData[] | { data: IcandleData[]; scope: numberScopeString } {\r\n    let result: IcandleData[] = [];\r\n    let _displayCandleMaxMin: numberScopeString = {\r\n      /**\r\n       * 最低点\r\n       * */\r\n      start: '9999999999999999999999',\r\n      /**\r\n       * 最高点\r\n       * */\r\n      end: '-9999999999999999999999',\r\n    };\r\n    let maxVolume: number = -99999999999999;\r\n    for (let inde_i = 0; inde_i < tickArr.length; inde_i++) {\r\n      let item = tickArr[inde_i];\r\n      if (typeof allComputedCandleData.current[item.value] !== 'undefined') {\r\n        let dataitem: IcandleData = allComputedCandleData.current[\r\n          item.value\r\n        ] as IcandleData;\r\n        dataitem!.currentTick! = item;\r\n\r\n        _displayCandleMaxMin.start = getMin(\r\n          dataitem,\r\n          Number(_displayCandleMaxMin.start)\r\n        ).toString();\r\n        _displayCandleMaxMin.end = getMax(\r\n          dataitem,\r\n          Number(_displayCandleMaxMin.end)\r\n        ).toString();\r\n\r\n        if (maxVolume < Number(dataitem.volume)) {\r\n          maxVolume = Number(dataitem.volume);\r\n        }\r\n\r\n        result.push(dataitem);\r\n      }\r\n    }\r\n    setvolumChartViewMax(maxVolume);\r\n\r\n    return { data: result, scope: _displayCandleMaxMin };\r\n  };\r\n\r\n  //将数据里所有的时间按照用户设置的数据源时区还原GMT +0000，然后再设置到显示时区\r\n  const seAllDataDateToUserConfigedGMT = function(data: IcandleData[]) {\r\n    for (let item of data) {\r\n      //如果填写的是\"本地时间\"，就不做任何操作\r\n      if (baseConfig.timeZone!.dataSourceTimeZone === 'local') {\r\n        item.time = Number(item.time);\r\n      } else {\r\n        //否则，先把时间按照用户设置的归零，然后再设置到显示时间\r\n        item.time = anyTimeToGMT0000ToTarget(\r\n          Number(item.time),\r\n          baseConfig.timeZone!.dataSourceTimeZone,\r\n          baseConfig.timeZone!.displayTimeZone\r\n        );\r\n      }\r\n    }\r\n\r\n    return data;\r\n  };\r\n\r\n  /**\r\n   * 初始化动态数据\r\n   */\r\n  const initDynamicData = async function() {\r\n    //清空堆数据\r\n    Object.keys(allComputedCandleData.current).forEach(\r\n      key => delete allComputedCandleData.current[key]\r\n    );\r\n    setupdateStamp(-1);\r\n    setorgCandleData([]);\r\n    setdisplayCandleData([]);\r\n    setyScale(1);\r\n    setminy(0);\r\n    setisFetchingData(true);\r\n    setCursorCandleItem(null);\r\n    setlatestCandleItem(null);\r\n    setvolumChartPixHeight(0);\r\n    setvolumChartViewMax(0);\r\n    setdisplayCandleMaxMin({ start: '0', end: '0' });\r\n    setorg_displayCandleMaxMin({ start: '0', end: '0' });\r\n    setlatestCandleToolTip(null);\r\n    setlatestVolumeToolTip(null);\r\n    setdisplayLatestCandle(null);\r\n    setlatestdisplayLatestCandle(null);\r\n    setlatestdisplayLatestVolume(null);\r\n    allComputedCandleData.current = {};\r\n    isUpdateing.current = false;\r\n    isQuickUpdateing.current = false;\r\n    isEscapeItems.current = false;\r\n    setisFinishedInit(false);\r\n    setstopDynamicFetching(false);\r\n    // TODO: 1.获得时间范围，获得当前x轴时间范围的end,然后往后推用户设置的数据条数（也就是时间单位）\r\n    let endTime = xAxis.data.currentTimeScope.end;\r\n    /**\r\n     * 当前的整数时间\r\n     */\r\n    let _timeInteger = xAxis.data.currentTimeType!.roundingFunction(\r\n      endTime,\r\n      baseConfig!.timeZone!.displayTimeZone!\r\n    );\r\n\r\n    /**\r\n     * 获得末尾时间\r\n     */\r\n    let startTime = xAxis.data.currentTimeType!.backwardTimeUnit!(\r\n      _timeInteger,\r\n      initArgs.dynamicData!.dataFetchCountPreTime!,\r\n      baseConfig!.timeZone!.displayTimeZone!\r\n    );\r\n    let result: IcandleItem[] = await initArgs.dynamicData!.dataFetchCallback!(\r\n      (xAxis.data.currentTimeType!.name as unknown) as TtimeType,\r\n      startTime,\r\n      endTime\r\n    );\r\n    if (result.length !== 0) {\r\n      setTempDynamicData(seAllDataDateToUserConfigedGMT(result));\r\n      setisFirstTimeUpdate(true);\r\n    }\r\n    //计算volum图的像素高度\r\n    let heightPixVolumArea = getSpaceSize(\r\n      initArgs.candleStyles?.volumChart?.volumeChartHeight!,\r\n      xAxis.data.linePosition.y\r\n    );\r\n    setvolumChartPixHeight(heightPixVolumArea);\r\n    setisFetchingData(false);\r\n\r\n    setisFinishedInit(true);\r\n  };\r\n\r\n  /**\r\n   * 在数据滚动或者缩放时发起的动态数据拉取\r\n   */\r\n  const lunchDynamicData = async function(endTime: number) {\r\n    if (isFetchingData) {\r\n      return;\r\n    }\r\n    setisFetchingData(true);\r\n    /**\r\n     * 获得末尾时间\r\n     */\r\n    let startTime = xAxis.data.currentTimeType!.backwardTimeUnit!(\r\n      endTime,\r\n      initArgs.dynamicData!.dataFetchCountPreTime!,\r\n      baseConfig!.timeZone!.displayTimeZone!\r\n    );\r\n\r\n    let timeZoneD = 0;\r\n\r\n    if (baseConfig.timeZone!.displayTimeZone === 'local') {\r\n      let date = new Date();\r\n      let localtimeZone = Math.abs(date.getTimezoneOffset() / 60);\r\n      timeZoneD = localtimeZone;\r\n    } else {\r\n      timeZoneD = baseConfig.timeZone!.displayTimeZone;\r\n    }\r\n    //如果设置了时间归零\r\n    //查询时间会被错开，所以查询的时候就再还原一下时间\r\n    startTime = anyTimeToGMT0000ToTarget(\r\n      startTime,\r\n      timeZoneD,\r\n      baseConfig.timeZone!.fetchConditionTimeZone\r\n    );\r\n    endTime = anyTimeToGMT0000ToTarget(\r\n      endTime,\r\n      timeZoneD,\r\n      baseConfig.timeZone!.fetchConditionTimeZone\r\n    );\r\n\r\n    let result: IcandleItem[] = await initArgs.dynamicData!.dataFetchCallback!(\r\n      (xAxis.data.currentTimeType!.name as unknown) as TtimeType,\r\n      startTime,\r\n      endTime\r\n    );\r\n\r\n    //返回数据为0或为空\r\n    //停止拉取数据了\r\n    if (typeof result === 'undefined' || result === null) {\r\n      setstopDynamicFetching(true);\r\n      return;\r\n    }\r\n\r\n    //如果result的结果等于1\r\n    //然后这个结果在显示candle集合里的最末尾\r\n    if (result.length === 1) {\r\n      let intTime = anyTimeToGMT0000ToTarget(\r\n        Number(result[0].time),\r\n        baseConfig.timeZone!.dataSourceTimeZone,\r\n        baseConfig.timeZone!.displayTimeZone\r\n      );\r\n      //说明数据已经到头了\r\n      if (intTime === displayCandleData[0].time) {\r\n        setstopDynamicFetching(true);\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (result.length !== 0) {\r\n      setTempDynamicData(seAllDataDateToUserConfigedGMT(result));\r\n    }\r\n    setisFetchingData(false);\r\n  };\r\n\r\n  /**\r\n   * 更新动态数据\r\n   */\r\n  const updateDynamicData = function(data: IcandleItem[]) {\r\n    if (isFetchingData) {\r\n      return;\r\n    }\r\n    if (!isFinishedInit) {\r\n      return;\r\n    }\r\n\r\n    //排序\r\n    let _data = data.sort(function(a, b) {\r\n      return getRightDate(a.time) - getRightDate(b.time);\r\n    });\r\n\r\n    //判断时间类型是不是一致，还是大了还是小了\r\n    var isConsistentOfDateType = determineTimeSpaceConsistent(data);\r\n\r\n    //大了就没办法了，直接return\r\n    if (isConsistentOfDateType === 'bigger') {\r\n      console.log(\r\n        'The time interval of the data is inconsistent with the given configured time interval!'\r\n      );\r\n      return;\r\n    }\r\n\r\n    //将新数据加入到当前现有的数据里去\r\n    //小了的话就按照配置的时间类型进行归并\r\n    if (isConsistentOfDateType === 'smaller') {\r\n      mergeData(_data);\r\n    } else {\r\n      //如果是一致的，就直接将这些数据放进堆里\r\n      putDataIntoAllComputedCandleData(_data);\r\n    }\r\n\r\n    //新老数据合并做个备份\r\n    let _orgCandleData = [..._data, ...orgCandleData];\r\n\r\n    setorgCandleData(_orgCandleData);\r\n    if (isFirstTimeUpdate) {\r\n      setisFirstTimeUpdate(false);\r\n      setinitDyStamp(+new Date());\r\n    } else {\r\n      setfetchDataStemp(+new Date());\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 初始化静态数据\r\n   */\r\n  const initStaticData = function() {\r\n    //清空堆数据\r\n    Object.keys(allComputedCandleData.current).forEach(\r\n      key => delete allComputedCandleData.current[key]\r\n    );\r\n    //排序\r\n    let _orgCandleData = seAllDataDateToUserConfigedGMT(\r\n      initArgs.staticData!.sort(function(a, b) {\r\n        return getRightDate(a.time) - getRightDate(b.time);\r\n      })\r\n    );\r\n\r\n    //判断时间类型是不是一致，还是大了还是小了\r\n    var isConsistentOfDateType = determineTimeSpaceConsistent(_orgCandleData);\r\n\r\n    //大了就没办法了，直接return\r\n    if (isConsistentOfDateType === 'bigger') {\r\n      console.log(\r\n        'The time interval of the data is inconsistent with the given configured time interval!'\r\n      );\r\n      return;\r\n    }\r\n\r\n    let dataScope: numberScopeString = { start: '500', end: '700' };\r\n    //小了的话就按照配置的时间类型进行归并\r\n    if (isConsistentOfDateType === 'smaller') {\r\n      dataScope = mergeData(_orgCandleData);\r\n    } else {\r\n      //如果是一致的，就直接将这些数据放进堆里\r\n      dataScope = putDataIntoAllComputedCandleData(_orgCandleData);\r\n    }\r\n\r\n    //dataScope  这个scope是指所有数据的scope,并不是当前屏幕显示范围的scope\r\n\r\n    //用于显示的数据\r\n    let result = findDataByTicks(xAxis.data.tickArr) as {\r\n      data: IcandleData[];\r\n      scope: numberScopeString;\r\n    };\r\n\r\n    for (let item of result.data) {\r\n      item = computSingalCandledata(item, result.scope, result.scope);\r\n    }\r\n    dataScope = result.scope;\r\n\r\n    //计算volum图的像素高度\r\n    let heightPixVolumArea = getSpaceSize(\r\n      initArgs.candleStyles?.volumChart?.volumeChartHeight!,\r\n      xAxis.data.linePosition.y\r\n    );\r\n\r\n    setvolumChartPixHeight(heightPixVolumArea);\r\n\r\n    setorgCandleData(_orgCandleData);\r\n    setdisplayCandleData(result.data);\r\n    setviewSize(xAxis.data.viewSize);\r\n    setisFinishedInit(true);\r\n    setorg_displayCandleMaxMin(result.scope);\r\n    setyScale(1);\r\n    setminy(0);\r\n    //更新y轴\r\n    yAxis.funcs.updateAxisSates(\r\n      xAxis.data.viewSize.width,\r\n      xAxis.data.viewSize.height,\r\n      {\r\n        start: Number(dataScope.start),\r\n        end: Number(dataScope.end),\r\n      }\r\n    );\r\n    setdisplayCandleMaxMin(dataScope);\r\n    setupdateStamp(+new Date());\r\n    setisFetchingData(false);\r\n  };\r\n\r\n  //只计算缩放和刚进来的数据，不进行全量更新\r\n  //这个算法主要的运算方式是：\r\n  //1.重新用xAxis.data.tickArr循环一遍，从哈希表里直接取到当前的显示canle组\r\n  //2.然后循环取出来的列表再循环一次计算位置，\r\n  //3.计算位置的时候判断这个列表里有哪些candle项目已经被计算过计算过的就不算了，没计算过的计算一下\r\n  const updatePartialCandleData = function() {\r\n    let _xAxisdatatickArr = [...xAxis.data.tickArr];\r\n    let _viewSize = { ...xAxis.data.viewSize };\r\n    let _org_displayCandleMaxMin = { ...org_displayCandleMaxMin };\r\n    let isEscapeItems_current = isEscapeItems.current;\r\n    let isQuickUpdateing_current = isQuickUpdateing.current;\r\n\r\n    //用于显示的数据\r\n    let result = findDataByTicks(_xAxisdatatickArr) as {\r\n      data: IcandleData[];\r\n      scope: numberScopeString;\r\n    };\r\n\r\n    //result.data 为 和目前x轴tick的交集displaycandles\r\n    //result.scope 为扩展之前的数据范围 真实的数据范围\r\n    if (result.data.length === 0) {\r\n      //没找到\r\n      setdisplayCandleData([]);\r\n      checkDynamicData();\r\n      return;\r\n    }\r\n\r\n    //先通知y轴更新了\r\n    requestAnimationFrame(function() {\r\n      //更新y轴\r\n      yAxis.funcs.updateAxisSates(_viewSize.width, _viewSize.height, {\r\n        start: Number(result.scope.start),\r\n        end: Number(result.scope.end),\r\n      });\r\n    });\r\n\r\n    //上次缩放或重置后使用的最大值最小值(数据范围，不是像素 )\r\n    //而且是未经扩展过的数据范围（素）的\r\n\r\n    let currentTag =\r\n      _org_displayCandleMaxMin.start + _org_displayCandleMaxMin.end;\r\n    let orgMaxMiny: numberScope = {\r\n      //start 找 y+length 最大的\r\n      start: -9999999999999999,\r\n      //end找y最小的\r\n      end: 99999999999999,\r\n    };\r\n    //进行数据计算\r\n    let index = 0;\r\n\r\n    for (var item of result.data) {\r\n      //如果已经打开了省略模式\r\n\r\n      //如果已经打开了省略模式\r\n      if (isEscapeItems_current) {\r\n        if (Number(index) % 2) {\r\n          //全部进行全量计算\r\n          //如果上次更新的tag和现在当前的值不一致，说明是上次缩放后还没来得及计算的元素\r\n          //这样的元素就需要重新进行计算，\r\n          //否则就不需要进行计算\r\n          if (\r\n            typeof item.updateTag === 'undefined' ||\r\n            item.updateTag !== currentTag\r\n          ) {\r\n            item = computSingalCandledata(\r\n              item,\r\n              _org_displayCandleMaxMin,\r\n              _org_displayCandleMaxMin\r\n            );\r\n          } else {\r\n            computSingalCandledataMini(item, _org_displayCandleMaxMin);\r\n          }\r\n          item.isEscaped = false;\r\n        } else {\r\n          //省略过的只收集数据\r\n          computSingalCandledataMini(item, result.scope);\r\n          item.isEscaped = true;\r\n        }\r\n      } else {\r\n        //全部进行全量计算\r\n        //如果上次更新的tag和现在当前的值不一致，说明是上次缩放后还没来得及计算的元素\r\n        //这样的元素就需要重新进行计算，\r\n        //否则就不需要进行计算\r\n        if (\r\n          typeof item.updateTag === 'undefined' ||\r\n          item.updateTag !== currentTag\r\n        ) {\r\n          item = computSingalCandledata(\r\n            item,\r\n            _org_displayCandleMaxMin,\r\n            _org_displayCandleMaxMin\r\n          );\r\n        } else {\r\n          computSingalCandledataMini(item, _org_displayCandleMaxMin);\r\n        }\r\n        item.isEscaped = false;\r\n      }\r\n\r\n      if (isQuickUpdateing_current) {\r\n        if (\r\n          Number(item.wickPixPosition?.y) + Number(item.wickLength) >\r\n          orgMaxMiny.start\r\n        ) {\r\n          //求（像素）y最大值\r\n          orgMaxMiny.start =\r\n            Number(item.wickPixPosition?.y) + Number(item.wickLength);\r\n        }\r\n        //求（像素）y最小值\r\n        if (Number(item.wickPixPosition?.y) < orgMaxMiny.end) {\r\n          orgMaxMiny.end = Number(item.wickPixPosition?.y);\r\n        }\r\n      } else {\r\n        if (\r\n          Math.max(\r\n            Number(item.candlePixPosition?.y) + Number(item.candleLength),\r\n            Number(item.wickPixPosition?.y) + Number(item.wickLength)\r\n          ) > orgMaxMiny.start\r\n        ) {\r\n          //求（像素）y最大值\r\n          orgMaxMiny.start = Math.max(\r\n            Number(item.candlePixPosition?.y) + Number(item.candleLength),\r\n            Number(item.wickPixPosition?.y) + Number(item.wickLength)\r\n          );\r\n        }\r\n        //求（像素）y最小值\r\n        if (\r\n          Math.min(\r\n            Number(item.candlePixPosition?.y),\r\n            Number(item.wickPixPosition?.y)\r\n          ) < orgMaxMiny.end\r\n        ) {\r\n          orgMaxMiny.end = Math.min(\r\n            Number(item.candlePixPosition?.y),\r\n            Number(item.wickPixPosition?.y)\r\n          );\r\n        }\r\n      }\r\n\r\n      index++;\r\n    }\r\n\r\n    //对查找出来的边界进行扩展\r\n    ///let expandedMaxMin = yAxis.funcs.expandDataSpanceEdgePIX(orgMaxMiny);\r\n\r\n    let currentheight = orgMaxMiny.start - orgMaxMiny.end;\r\n    let expendHeight =\r\n      currentheight + currentheight * yAxis.initArgs.displayPadding!;\r\n    let scale = yAxis.data.lineSize.height / expendHeight;\r\n    let y =\r\n      -orgMaxMiny.end + (currentheight * yAxis.initArgs.displayPadding!) / 2;\r\n\r\n    setdisplayCandleData(result.data);\r\n\r\n    setdisplayCandleMaxMin(result.scope);\r\n\r\n    if (result.data.length !== 0) {\r\n      setminy(y * scale);\r\n      setyScale(scale);\r\n      checkDynamicData(result.data);\r\n      setupdateStamp(+new Date());\r\n    }\r\n  };\r\n\r\n  /*\r\n\t第三版结合所有优点根据情况决定是计算还是更新\r\n\t*/\r\n  const updatePartialCandleDataV3 = function() {\r\n    let onlyUpdatePositionAndScale = function(_cArr?: IcandleData[]) {\r\n      let isFromAppend = false;\r\n      if (typeof _cArr === 'undefined') {\r\n        _cArr = [...displayCandleData];\r\n        _cArr = _cArr.sort(function(a, b) {\r\n          return Number(a.time) - Number(b.time);\r\n        });\r\n      } else {\r\n        isFromAppend = true;\r\n      }\r\n      if (_cArr.length === 0) {\r\n        return;\r\n      }\r\n      let _LastScopeddcData = [...LastScopeddcData];\r\n      let barr = [];\r\n      /* if (_LastScopeddcData.length !== 0) {\r\n\t\t\t\tbarr = _LastScopeddcData;\r\n\t\t\t} else { */\r\n      barr = _cArr;\r\n      /* } */\r\n      let currentScopeDisplayCandleData = findIntersectionCandle(\r\n        barr,\r\n        xAxis.data.currentTimeScope\r\n      );\r\n      if (isFromAppend) {\r\n        currentScopeDisplayCandleData = _cArr;\r\n      } else {\r\n        currentScopeDisplayCandleData = findIntersectionCandle(\r\n          barr,\r\n          xAxis.data.currentTimeScope\r\n        );\r\n      }\r\n      let orgMaxMiny: numberScope = {\r\n        //start 找 y+length 最大的\r\n        start: -9999999999999999,\r\n        //end找y最小的\r\n        end: 99999999999999,\r\n      };\r\n      let _displayCandleMaxMin: numberScopeString = {\r\n        /**\r\n         * 最低点\r\n         * */\r\n        start: '9999999999999999999999',\r\n        /**\r\n         * 最高点\r\n         * */\r\n        end: '-9999999999999999999999',\r\n      };\r\n      let maxVolume: number = -99999999999999;\r\n\r\n      let i = 0;\r\n      while (i < currentScopeDisplayCandleData.length) {\r\n        let item = currentScopeDisplayCandleData[i];\r\n        if (isQuickUpdateing.current) {\r\n          if (\r\n            Number(item.wickPixPosition?.y) + Number(item.wickLength) >\r\n            orgMaxMiny.start\r\n          ) {\r\n            //求（像素）y最大值\r\n            orgMaxMiny.start =\r\n              Number(item.wickPixPosition?.y) + Number(item.wickLength);\r\n          }\r\n          //求（像素）y最小值\r\n          if (Number(item.wickPixPosition?.y) < orgMaxMiny.end) {\r\n            orgMaxMiny.end = Number(item.wickPixPosition?.y);\r\n          }\r\n        } else {\r\n          if (\r\n            Math.max(\r\n              Number(item.candlePixPosition?.y) + Number(item.candleLength),\r\n              Number(item.wickPixPosition?.y) + Number(item.wickLength)\r\n            ) > orgMaxMiny.start\r\n          ) {\r\n            //求（像素）y最大值\r\n            orgMaxMiny.start = Math.max(\r\n              Number(item.candlePixPosition?.y) + Number(item.candleLength),\r\n              Number(item.wickPixPosition?.y) + Number(item.wickLength)\r\n            );\r\n          }\r\n          //求（像素）y最小值\r\n          if (\r\n            Math.min(\r\n              Number(item.candlePixPosition?.y),\r\n              Number(item.wickPixPosition?.y)\r\n            ) < orgMaxMiny.end\r\n          ) {\r\n            orgMaxMiny.end = Math.min(\r\n              Number(item.candlePixPosition?.y),\r\n              Number(item.wickPixPosition?.y)\r\n            );\r\n          }\r\n        }\r\n        i++;\r\n      }\r\n\r\n      let currentheight = orgMaxMiny.start - orgMaxMiny.end;\r\n      let expendHeight =\r\n        currentheight + currentheight * yAxis.initArgs.displayPadding!;\r\n      let scale = yAxis.data.lineSize.height / expendHeight;\r\n      let y =\r\n        -orgMaxMiny.end + (currentheight * yAxis.initArgs.displayPadding!) / 2;\r\n\r\n      setminy(y * scale);\r\n      setyScale(scale);\r\n      /* setLastScopeddcData(() => currentScopeDisplayCandleData); */\r\n\r\n      for (let i = 0; i < currentScopeDisplayCandleData.length; i++) {\r\n        let item = currentScopeDisplayCandleData[i];\r\n        computSingalCandledataMini(item, org_displayCandleMaxMin);\r\n\r\n        _displayCandleMaxMin.start = getMin(\r\n          item,\r\n          Number(_displayCandleMaxMin.start)\r\n        ).toString();\r\n        _displayCandleMaxMin.end = getMax(\r\n          item,\r\n          Number(_displayCandleMaxMin.end)\r\n        ).toString();\r\n        if (maxVolume < Number(item.volume)) {\r\n          maxVolume = Number(item.volume);\r\n        }\r\n      }\r\n\r\n      //先通知y轴更新了\r\n      requestAnimationFrame(function() {\r\n        if (currentScopeDisplayCandleData.length === 0) {\r\n          return;\r\n        }\r\n        //更新y轴\r\n        yAxis.funcs.updateAxisSates(viewSize.width, viewSize.height, {\r\n          start: Number(_displayCandleMaxMin.start),\r\n          end: Number(_displayCandleMaxMin.end),\r\n        });\r\n      });\r\n\r\n      setdisplayCandleMaxMin(_displayCandleMaxMin);\r\n      setvolumChartViewMax(maxVolume);\r\n      setupdateStamp(+new Date());\r\n    };\r\n\r\n    let updateAndAppendNewCandle = function() {\r\n      let _totalCandleDisplayArr = [...displayCandleData];\r\n      if (_totalCandleDisplayArr.length === 0) {\r\n        return;\r\n      }\r\n      let orgMaxMiny: numberScope = {\r\n        //start 找 y+length 最大的\r\n        start: -9999999999999999,\r\n        //end找y最小的\r\n        end: 99999999999999,\r\n      };\r\n      let backwardDCArr: IcandleData[] = [];\r\n      //判断是前面少了还是后面少了\r\n      if (xAxis.data.tickArr[0].value !== _totalCandleDisplayArr[0].time) {\r\n        let index = 0;\r\n        while (\r\n          typeof xAxis.data.tickArr[index] !== 'undefined' &&\r\n          xAxis.data.tickArr[index].value < _totalCandleDisplayArr[0].time\r\n        ) {\r\n          let item = (allComputedCandleData.current[\r\n            xAxis.data.tickArr[index].value\r\n          ] as unknown) as IcandleData;\r\n          if (typeof item !== 'undefined') {\r\n            item.currentTick = xAxis.data.tickArr[index];\r\n            backwardDCArr.push(item);\r\n          }\r\n          index++;\r\n        }\r\n      }\r\n\r\n      let forwardDCArr: IcandleData[] = [];\r\n      if (\r\n        xAxis.data.tickArr[xAxis.data.tickArr.length - 1].value !==\r\n        _totalCandleDisplayArr[_totalCandleDisplayArr.length - 1].time\r\n      ) {\r\n        let index = xAxis.data.tickArr.length - 1;\r\n        while (\r\n          typeof xAxis.data.tickArr[index] !== 'undefined' &&\r\n          xAxis.data.tickArr[index].value >\r\n            _totalCandleDisplayArr[_totalCandleDisplayArr.length - 1].time\r\n        ) {\r\n          let item = (allComputedCandleData.current[\r\n            xAxis.data.tickArr[index].value\r\n          ] as unknown) as IcandleData;\r\n          if (typeof item !== 'undefined') {\r\n            item.currentTick = xAxis.data.tickArr[index];\r\n            forwardDCArr.unshift(item);\r\n          }\r\n          index--;\r\n        }\r\n      }\r\n\r\n      let _displayCandleData = [\r\n        ...backwardDCArr,\r\n        ..._totalCandleDisplayArr,\r\n        ...forwardDCArr,\r\n      ];\r\n\r\n      let currentScopeDisplayCandleData = findIntersectionCandle(\r\n        _displayCandleData,\r\n        xAxis.data.currentTimeScope\r\n      );\r\n\r\n      let _org_displayCandleMaxMin = org_displayCandleMaxMin;\r\n      let currentTag =\r\n        _org_displayCandleMaxMin.start + _org_displayCandleMaxMin.end;\r\n\r\n      for (var item of currentScopeDisplayCandleData) {\r\n        if (\r\n          typeof item.updateTag === 'undefined' ||\r\n          item.updateTag !== currentTag\r\n        ) {\r\n          item = computSingalCandledata(\r\n            item,\r\n            _org_displayCandleMaxMin,\r\n            _org_displayCandleMaxMin\r\n          );\r\n        } else {\r\n          computSingalCandledataMini(item, _org_displayCandleMaxMin);\r\n        }\r\n      }\r\n      setdisplayCandleData(_displayCandleData);\r\n      checkDynamicData(_displayCandleData);\r\n      return currentScopeDisplayCandleData;\r\n    };\r\n    window.requestAnimationFrame(function() {\r\n      if (xAxis.data.tickArr.length > 120) {\r\n        let inputArr: IcandleData[] | undefined = undefined;\r\n        if (\r\n          xAxis.data.lastTimeScope.start !==\r\n            xAxis.data.currentTimeScope.start &&\r\n          xAxis.data.lastTimeScope.end !== xAxis.data.currentTimeScope.end\r\n        ) {\r\n          if (Math.abs(xAxis.data.mouseSpeedSec) < 3) {\r\n            inputArr = updateAndAppendNewCandle();\r\n          }\r\n        } else {\r\n          inputArr = updateAndAppendNewCandle();\r\n        }\r\n\r\n        onlyUpdatePositionAndScale(inputArr);\r\n      } else {\r\n        updatePartialCandleData();\r\n      }\r\n    });\r\n  };\r\n\r\n  //只计算缩放和刚进来的数据，不进行全量更新\r\n  //这个算法主要的运算方式是：\r\n  //1.重新用xAxis.data.tickArr循环一遍，从哈希表里直接取到当前的显示canle组\r\n  //2.然后循环取出来的列表再循环一次计算位置，\r\n  //3.计算位置的时候判断这个列表里有哪些candle项目已经被计算过计算过的就不算了，没计算过的计算一下\r\n  //多线程版本\r\n  const updatePartialCandleDataWorker = function() {\r\n    let _xAxisdatatickArr = [...xAxis.data.tickArr];\r\n    let _viewSize = { ...xAxis.data.viewSize };\r\n    let _org_displayCandleMaxMin = { ...org_displayCandleMaxMin };\r\n    let isEscapeItems_current = isEscapeItems.current;\r\n    let isQuickUpdateing_current = isQuickUpdateing.current;\r\n    let allComputedCandleData_current = allComputedCandleData.current;\r\n    let xAxis_initArgs_labelSpace = xAxis.initArgs.labelSpace;\r\n    let initArgs_candleStyles_wickFallColor = initArgs.candleStyles!\r\n      .wickFallColor!;\r\n    let initArgs_candleStyles_candleFallColor = initArgs.candleStyles!\r\n      .candleFallColor!;\r\n    let initArgs_candleStyles_wickRiseColor = initArgs.candleStyles!\r\n      .wickRiseColor!;\r\n    let initArgs_candleStyles_candleRiseColor = initArgs.candleStyles!\r\n      .candleRiseColor!;\r\n    let initArgs_candleStyles_candleWidth = initArgs.candleStyles!.candleWidth!;\r\n    let initArgs_candleStyles_wickWidth = initArgs.candleStyles!.wickWidth!;\r\n    let xAxis_data_displayTickCommonpixWidth = xAxis.data\r\n      .displayTickCommonpixWidth!;\r\n    let xAxis_data_lineSize_width = xAxis.data.lineSize.width;\r\n    let xAxis_data_x = xAxis.data.x;\r\n\r\n    mWorker.current?.postMessage({\r\n      message: 'move',\r\n      _xAxisdatatickArr: _xAxisdatatickArr,\r\n      _viewSize: _viewSize,\r\n      _org_displayCandleMaxMin: _org_displayCandleMaxMin,\r\n      isEscapeItems_current: isEscapeItems_current,\r\n      isQuickUpdateing_current: isQuickUpdateing_current,\r\n      allComputedCandleData_current: allComputedCandleData_current,\r\n      xAxis_initArgs_labelSpace: xAxis_initArgs_labelSpace,\r\n      initArgs_candleStyles_wickFallColor: initArgs_candleStyles_wickFallColor,\r\n      initArgs_candleStyles_candleFallColor: initArgs_candleStyles_candleFallColor,\r\n      initArgs_candleStyles_wickRiseColor: initArgs_candleStyles_wickRiseColor,\r\n      initArgs_candleStyles_candleRiseColor: initArgs_candleStyles_candleRiseColor,\r\n      initArgs_candleStyles_candleWidth: initArgs_candleStyles_candleWidth,\r\n      initArgs_candleStyles_wickWidth: initArgs_candleStyles_wickWidth,\r\n      xAxis_data_displayTickCommonpixWidth: xAxis_data_displayTickCommonpixWidth,\r\n      xAxis_data_lineSize_width: xAxis_data_lineSize_width,\r\n      xAxis_data_x: xAxis_data_x,\r\n    });\r\n\r\n    //let currentheight = orgMaxMiny.start - orgMaxMiny.end;\r\n    //let expendHeight = currentheight + currentheight * yAxis.initArgs.displayPadding!;\r\n    //let scale = yAxis.data.lineSize.height / expendHeight;\r\n    //let y = -orgMaxMiny.end + (currentheight * yAxis.initArgs.displayPadding!) / 2;\r\n    //\r\n    //setdisplayCandleData(() => {\r\n    //\treturn result.data;\r\n    //});\r\n    //\r\n    //setdisplayCandleMaxMin(() => {\r\n    //\treturn result.scope;\r\n    //});\r\n    //\r\n    //if (result.data.length !== 0) {\r\n    //\tsetminy(y * scale);\r\n    //\tsetyScale(scale);\r\n    //\tcheckDynamicData(result.data);\r\n    //\tsetupdateStamp(+new Date());\r\n    //}\r\n  };\r\n\r\n  //只计算刚进来的数据，不做全量更新\r\n  //第二个版本\r\n  //1.用二分查找直接取到剩下还能用的candle\r\n  //2.使用推进法扩展candle\r\n  /* const updatePartialCandleDataV2 = function () {\r\n\t\tlet _cArr = [...displayCandleData];\r\n\t\tlet lastDisplayCandleData = findIntersectionCandle(_cArr, xAxis.data.currentTimeScope);\r\n\r\n\t\tlet backwardDCArr: IcandleData[] = [];\r\n\t\t//判断是前面少了还是后面少了\r\n\t\tif (xAxis.data.tickArr[0].value !== lastDisplayCandleData[0].time) {\r\n\t\t\tlet index = 0;\r\n\t\t\twhile (xAxis.data.tickArr[index].value < lastDisplayCandleData[0].time) {\r\n\t\t\t\tlet item = allComputedCandleData.current[xAxis.data.tickArr[index].value] as unknown as IcandleData;\r\n\t\t\t\tif (typeof item !== \"undefined\") {\r\n\t\t\t\t\titem.currentTick = xAxis.data.tickArr[index];\r\n\t\t\t\t\tbackwardDCArr.push(item);\r\n\t\t\t\t}\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet forwardDCArr: IcandleData[] = [];\r\n\t\tif (\r\n\t\t\txAxis.data.tickArr[xAxis.data.tickArr.length - 1].value !==\r\n\t\t\tlastDisplayCandleData[lastDisplayCandleData.length - 1].time\r\n\t\t) {\r\n\t\t\tlet index = xAxis.data.tickArr.length - 1;\r\n\t\t\twhile (xAxis.data.tickArr[index].value > lastDisplayCandleData[lastDisplayCandleData.length - 1].time) {\r\n\t\t\t\tlet item = allComputedCandleData.current[xAxis.data.tickArr[index].value] as unknown as IcandleData;\r\n\t\t\t\tif (typeof item !== \"undefined\") {\r\n\t\t\t\t\titem.currentTick = xAxis.data.tickArr[index];\r\n\t\t\t\t\tforwardDCArr.unshift(item);\r\n\t\t\t\t}\r\n\t\t\t\tindex--;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (backwardDCArr.length === 0 && forwardDCArr.length === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//上次缩放或重置后使用的最大值最小值(数据范围，不是像素 )\r\n\t\t//而且是未经扩展过的数据范围（素）的\r\n\t\tlet _org_displayCandleMaxMin = org_displayCandleMaxMin;\r\n\t\tlet currentTag = _org_displayCandleMaxMin.start + _org_displayCandleMaxMin.end;\r\n\r\n\t\t//继承上一次的结果，并从这次的新结果里查找最大的y和最小的y\r\n\t\tlet orgMaxMiny: numberScope = { ...lastMaxMiny };\r\n\t\t//继承上一次的\r\n\t\tlet _displayCandleMaxMin: numberScopeString = { ...displayCandleMaxMin };\r\n\r\n\t\t///计算新选出来的displaycandle项目\r\n\t\tlet comp = function (arrayCD: IcandleData[]): IcandleData[] {\r\n\t\t\t//进行数据计算\r\n\t\t\tlet index = 0;\r\n\t\t\tisEscapeItems.current = false;\r\n\t\t\tfor (var item of arrayCD) {\r\n\t\t\t\t//如果已经打开了省略模式\r\n\r\n\t\t\t\t//全部进行全量计算\r\n\t\t\t\t//如果上次更新的tag和现在当前的值不一致，说明是上次缩放后还没来得及计算的元素\r\n\t\t\t\t//这样的元素就需要重新进行计算，\r\n\t\t\t\t//否则就不需要进行计算\r\n\t\t\t\tif (typeof item.updateTag === \"undefined\" || item.updateTag !== currentTag) {\r\n\t\t\t\t\titem = computSingalCandledata(item, _org_displayCandleMaxMin, _org_displayCandleMaxMin);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcomputSingalCandledataMini(item, _org_displayCandleMaxMin);\r\n\t\t\t\t}\r\n\t\t\t\titem.isEscaped = false;\r\n\r\n\t\t\t\tif (isQuickUpdateing.current) {\r\n\t\t\t\t\tif (Number(item.wickPixPosition?.y) + Number(item.wickLength) > orgMaxMiny.start) {\r\n\t\t\t\t\t\t//求（像素）y最大值\r\n\t\t\t\t\t\torgMaxMiny.start = Number(item.wickPixPosition?.y) + Number(item.wickLength);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//求（像素）y最小值\r\n\t\t\t\t\tif (Number(item.wickPixPosition?.y) < orgMaxMiny.end) {\r\n\t\t\t\t\t\torgMaxMiny.end = Number(item.wickPixPosition?.y);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tMath.max(\r\n\t\t\t\t\t\t\tNumber(item.candlePixPosition?.y) + Number(item.candleLength),\r\n\t\t\t\t\t\t\tNumber(item.wickPixPosition?.y) + Number(item.wickLength)\r\n\t\t\t\t\t\t) > orgMaxMiny.start\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\t//求（像素）y最大值\r\n\t\t\t\t\t\torgMaxMiny.start = Math.max(\r\n\t\t\t\t\t\t\tNumber(item.candlePixPosition?.y) + Number(item.candleLength),\r\n\t\t\t\t\t\t\tNumber(item.wickPixPosition?.y) + Number(item.wickLength)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//求（像素）y最小值\r\n\t\t\t\t\tif (Math.min(Number(item.candlePixPosition?.y), Number(item.wickPixPosition?.y)) < orgMaxMiny.end) {\r\n\t\t\t\t\t\torgMaxMiny.end = Math.min(Number(item.candlePixPosition?.y), Number(item.wickPixPosition?.y));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_displayCandleMaxMin.start = getMin(item, Number(_displayCandleMaxMin.start)).toString();\r\n\t\t\t\t_displayCandleMaxMin.end = getMax(item, Number(_displayCandleMaxMin.end)).toString();\r\n\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\t\t\treturn arrayCD;\r\n\t\t};\r\n\r\n\t\tlet _displayCandleData = comp(backwardDCArr).concat(lastDisplayCandleData).concat(comp(forwardDCArr));\r\n\r\n\t\tlet currentheight = orgMaxMiny.start - orgMaxMiny.end;\r\n\t\tlet expendHeight = currentheight + currentheight * yAxis.initArgs.displayPadding!;\r\n\t\tlet scale = yAxis.data.lineSize.height / expendHeight;\r\n\t\tlet y = -orgMaxMiny.end + (currentheight * yAxis.initArgs.displayPadding!) / 2;\r\n\r\n\t\tsetdisplayCandleData(_displayCandleData);\r\n\r\n\t\tsetdisplayCandleMaxMin(() => {\r\n\t\t\treturn _displayCandleMaxMin;\r\n\t\t});\r\n\r\n\t\tif (_displayCandleData.length !== 0) {\r\n\t\t\tsetminy(y * scale);\r\n\t\t\tsetyScale(scale);\r\n\t\t\tcheckDynamicData(_displayCandleData);\r\n\t\t\tsetupdateStamp(+new Date());\r\n\t\t\tsetlastMaxMiny(orgMaxMiny);\r\n\t\t}\r\n\t}; */\r\n\r\n  //进行全量更新\r\n  const reComputAllDisplayedCandleData = function() {\r\n    //用于显示的数据\r\n    let result = findDataByTicks(xAxis.data.tickArr) as {\r\n      data: IcandleData[];\r\n      scope: numberScopeString;\r\n    };\r\n    if (result.data.length === 0) {\r\n      setdisplayCandleData([]);\r\n      checkDynamicData();\r\n      return;\r\n    }\r\n\r\n    requestAnimationFrame(function() {\r\n      //更新y轴\r\n      yAxis.funcs.updateAxisSates(\r\n        xAxis.data.viewSize.width,\r\n        xAxis.data.viewSize.height,\r\n        {\r\n          start: Number(result.scope.start),\r\n          end: Number(result.scope.end),\r\n        }\r\n      );\r\n    });\r\n\r\n    setdisplayCandleMaxMin(() => {\r\n      return result.scope;\r\n    });\r\n\r\n    //if (xAxis.data.tickArr.length > 2000) {\r\n    //\tisEscapeItems.current = true;\r\n    //} else {\r\n    //\tisEscapeItems.current = false;\r\n    //}\r\n\r\n    let index = 0;\r\n    for (let item of result.data) {\r\n      //如果已经打开了省略模式\r\n      if (isEscapeItems.current) {\r\n        if (Number(index) % 2) {\r\n          //没有被省略的进行全量计算\r\n          item = computSingalCandledata(item, result.scope, result.scope);\r\n          item.isEscaped = false;\r\n        } else {\r\n          //省略过的只收集数据\r\n          computSingalCandledataMini(item, result.scope);\r\n          item.isEscaped = true;\r\n        }\r\n      } else {\r\n        //全部进行全量计算\r\n        item = computSingalCandledata(item, result.scope, result.scope);\r\n        item.isEscaped = false;\r\n      }\r\n      index++;\r\n    }\r\n\r\n    setdisplayCandleData(result.data);\r\n    setviewSize(xAxis.data.viewSize);\r\n\r\n    if (result.data.length !== 0) {\r\n      let scale =\r\n        xAxis.data.linePosition.y /\r\n        (xAxis.data.linePosition.y! * yAxis.initArgs.displayPadding! +\r\n          xAxis.data.linePosition.y);\r\n      let y = (xAxis.data.linePosition.y! * yAxis.initArgs.displayPadding!) / 2;\r\n      setminy(y * scale);\r\n      setyScale(scale);\r\n      setorg_displayCandleMaxMin(result.scope);\r\n      checkDynamicData(result.data);\r\n      setupdateStamp(+new Date());\r\n      setlastMaxMiny({\r\n        start: xAxis.data.linePosition.y,\r\n        end: 0,\r\n      });\r\n    }\r\n  };\r\n\r\n  const checkDynamicData = async function(data?: IcandleData[]) {\r\n    //如果当前缩放、拖动超过所有内存中数据能显示的范围\r\n    //判断是否为动态数据加载模式\r\n    if (\r\n      initArgs.dynamicData!.enabled! &&\r\n      !isStaticData &&\r\n      !stopDynamicFetching\r\n    ) {\r\n      if (typeof data !== 'undefined') {\r\n        if (Number(data[0].time) - Number(xAxis.data.tickArr[0].value) > 0) {\r\n          //往下拉取数据\r\n          lunchDynamicData(Number(data[0].time));\r\n        }\r\n      } else {\r\n        lunchDynamicData(\r\n          Number(xAxis.data.tickArr[xAxis.data.tickArr.length - 1].value)\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 缩放的更新\r\n   */\r\n  const scaleUpdate = function() {\r\n    if (!isUpdateing.current) {\r\n      isUpdateing.current = true;\r\n      //如果数据太多就设置为简便更新\r\n      if (xAxis.data.tickArr.length > 500) {\r\n        setisDQuickUpdateing(true);\r\n        isQuickUpdateing.current = true;\r\n      } else {\r\n        setisDQuickUpdateing(false);\r\n        isQuickUpdateing.current = false;\r\n      }\r\n\r\n      if (isQuickUpdateing.current) {\r\n        updateThrottlereComputAllDisplayedCandleData(function() {\r\n          reComputAllDisplayedCandleData();\r\n          xAxis.funcs.setx(0);\r\n        }, 50);\r\n      } else {\r\n        reComputAllDisplayedCandleData();\r\n        xAxis.funcs.setx(0);\r\n      }\r\n      isUpdateing.current = false;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 移动的更新\r\n   */\r\n  const moveUpdate = function() {\r\n    if (!isUpdateing.current) {\r\n      isUpdateing.current = true;\r\n      //如果数据太多就设置为简便更新\r\n      if (xAxis.data.tickArr.length > 500) {\r\n        setisDQuickUpdateing(true);\r\n        isQuickUpdateing.current = true;\r\n      } else {\r\n        setisDQuickUpdateing(false);\r\n        isQuickUpdateing.current = false;\r\n      }\r\n      if (isQuickUpdateing.current) {\r\n        updatePartialCandleDataV3();\r\n      } else {\r\n        updatePartialCandleDataV3();\r\n      }\r\n      isUpdateing.current = false;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 更新最末尾的Candle\r\n   */\r\n  let updateLatestCandleData = function(candleItem: IcandleUpdateItem): void {\r\n    setstreamData(candleItem);\r\n  };\r\n\r\n  let updateStreamData = function() {\r\n    if (!isFinishedInit) {\r\n      return;\r\n    }\r\n    if (displayCandleData.length === 0) {\r\n      return;\r\n    }\r\n    if (streamData === null) {\r\n      return;\r\n    }\r\n    if (latestCandleItem === null) {\r\n      return null;\r\n    }\r\n\r\n    let { time, open, close, high, low, volume, isMergeMode } = {\r\n      ...streamData,\r\n    };\r\n\r\n    //将新进来的数据的时间，归零到格林威治时间\r\n    if (baseConfig.timeZone!.dataSourceTimeZone === 'local') {\r\n      time = Number(new Date(time).getTime());\r\n    } else {\r\n      time = anyTimeToGMT0000ToTarget(\r\n        Number(new Date(time).getTime()),\r\n        baseConfig.timeZone!.dataSourceTimeZone,\r\n        baseConfig.timeZone!.displayTimeZone\r\n      );\r\n    }\r\n    let _displayCandleData = [...displayCandleData];\r\n    let currentRoundTime = xAxis.data.currentTimeType?.roundingFunction!(\r\n      Number(time),\r\n      baseConfig!.timeZone!.displayTimeZone!\r\n    )!;\r\n    let _latestCandleItem = { ...latestCandleItem };\r\n    let isNew = false;\r\n    _latestCandleItem.isEscaped = false;\r\n\r\n    let isChangeDisplayCandleArr = false;\r\n\r\n    //如果只是更新现有的\r\n    if (currentRoundTime === _latestCandleItem?.time!) {\r\n      //是否为快速合并模式\r\n      if (typeof isMergeMode !== 'undefined' && isMergeMode === true) {\r\n        _latestCandleItem.close = close;\r\n        _latestCandleItem.high = Math.max(\r\n          Number(_latestCandleItem.high),\r\n          Number(close)\r\n        );\r\n        _latestCandleItem.low = Math.min(\r\n          Number(_latestCandleItem.low),\r\n          Number(close)\r\n        );\r\n        _latestCandleItem.volume = volume;\r\n      } else {\r\n        _latestCandleItem.time = currentRoundTime;\r\n        //_latestCandleItem.open = open!; //可以不用填open的，如果用户数据源没设置好还能兼容一下\r\n        _latestCandleItem.close = close!;\r\n        _latestCandleItem.high = high!;\r\n        _latestCandleItem.low = low!;\r\n        _latestCandleItem.volume = volume;\r\n      }\r\n\r\n      //匹配displayCandleData\r\n      for (var i = _displayCandleData.length - 1; i > -1; i--) {\r\n        if (_displayCandleData[i].time === currentRoundTime) {\r\n          _latestCandleItem.currentTick = _displayCandleData[i].currentTick;\r\n\r\n          _latestCandleItem = computSingalCandledata(\r\n            _latestCandleItem,\r\n            org_displayCandleMaxMin,\r\n            org_displayCandleMaxMin\r\n          );\r\n          _displayCandleData[i] = _latestCandleItem;\r\n          isChangeDisplayCandleArr = true;\r\n          _latestCandleItem.updateTag = '0';\r\n          break;\r\n        }\r\n      }\r\n    } else if (currentRoundTime > Number(_latestCandleItem?.time!)) {\r\n      //如果是下一个时间刻度\r\n      //是否为快速合并模式\r\n      if (typeof isMergeMode !== 'undefined' && isMergeMode === true) {\r\n        _latestCandleItem.time = currentRoundTime;\r\n        _latestCandleItem.open = close;\r\n        _latestCandleItem.close = close;\r\n        _latestCandleItem.high = close;\r\n        _latestCandleItem.low = close;\r\n        _latestCandleItem.volume = volume;\r\n      } else {\r\n        _latestCandleItem.time = currentRoundTime;\r\n        _latestCandleItem.open = open!;\r\n        _latestCandleItem.close = close!;\r\n        _latestCandleItem.high = high!;\r\n        _latestCandleItem.low = low!;\r\n        _latestCandleItem.volume = volume;\r\n        _latestCandleItem.updateTag = '0';\r\n      }\r\n\r\n      //查找ticks\r\n      for (var i = xAxis.data.tickArr.length - 1; i > -1; i--) {\r\n        let tick = xAxis.data.tickArr[i];\r\n        if (tick.value === _latestCandleItem.time) {\r\n          _latestCandleItem.currentTick = tick;\r\n          break;\r\n        }\r\n      }\r\n\r\n      _latestCandleItem = computSingalCandledata(\r\n        _latestCandleItem,\r\n        org_displayCandleMaxMin,\r\n        org_displayCandleMaxMin\r\n      );\r\n\r\n      //在可见范围内更新，不可见就不更新\r\n      if (\r\n        xAxis.data.currentTimeScope.start <= currentRoundTime &&\r\n        xAxis.data.currentTimeScope.end >= currentRoundTime\r\n      ) {\r\n        _displayCandleData.push(_latestCandleItem);\r\n        isChangeDisplayCandleArr = true;\r\n      }\r\n\r\n      isNew = true;\r\n    } else {\r\n      //既不等于\r\n      //又不大于\r\n      //那就有可能是上次时间类型的数据流响应 直接忽略\r\n      return;\r\n    }\r\n\r\n    allComputedCandleData.current[currentRoundTime] = _latestCandleItem;\r\n    setvolumChartViewMax(\r\n      Math.max(Number(_latestCandleItem.volume), volumChartViewMax)\r\n    );\r\n    setlatestCandleItem({ ..._latestCandleItem });\r\n    if (!isNew) {\r\n      let newMaxMin = {\r\n        start: Math.min(\r\n          Number(displayCandleMaxMin.start),\r\n          Number(_latestCandleItem.close)\r\n        ).toString(),\r\n        end: Math.max(\r\n          Number(displayCandleMaxMin.end),\r\n          Number(_latestCandleItem.close)\r\n        ).toString(),\r\n      };\r\n      if (\r\n        newMaxMin.start !== displayCandleMaxMin.start ||\r\n        newMaxMin.end !== displayCandleMaxMin.end\r\n      ) {\r\n        setfetchDataStemp(+new Date());\r\n      } else {\r\n        if (isChangeDisplayCandleArr) {\r\n          setdisplayCandleData(_displayCandleData);\r\n        }\r\n        //更新tooltip\r\n        setupdateStamp(+new Date());\r\n      }\r\n    } else {\r\n      //可见范围内的话就移动一下\r\n      if (\r\n        xAxis.data.currentTimeScope.start <= currentRoundTime &&\r\n        xAxis.data.currentTimeScope.end >= currentRoundTime\r\n      ) {\r\n        xAxis.funcs.moveContainer!(\r\n          0,\r\n          0 -\r\n            (_latestCandleItem!.currentTick!.pixSpace!.end -\r\n              _latestCandleItem!.currentTick!.pixSpace!.start),\r\n          true\r\n        );\r\n      }\r\n      if (isChangeDisplayCandleArr) {\r\n        setdisplayCandleData(_displayCandleData);\r\n      }\r\n      //更新tooltip\r\n      setupdateStamp(+new Date());\r\n    }\r\n\r\n    return _latestCandleItem;\r\n  };\r\n\r\n  /**\r\n   * 更新最末尾的tooltip\r\n   */\r\n  let updateLatestCandleTooltip = function() {\r\n    if (orgCandleData.length !== 0 && displayCandleData.length !== 0) {\r\n      var dataItem: IcandleData;\r\n      if (latestCandleItem === null) {\r\n        if (isStaticData) {\r\n          let soted = orgCandleData.sort(function(a, b) {\r\n            return getRightDate(a.time) - getRightDate(b.time);\r\n          });\r\n          let intTime = xAxis.data.currentTimeType!.roundingFunction!(\r\n            getRightDate(orgCandleData[orgCandleData.length - 1].time!),\r\n            baseConfig.timeZone!.displayTimeZone!\r\n          )!;\r\n          dataItem = allComputedCandleData.current[intTime] as IcandleData;\r\n        } else {\r\n          dataItem = allComputedCandleData.current[\r\n            displayCandleData[displayCandleData.length - 1].time\r\n          ] as IcandleData;\r\n        }\r\n      } else {\r\n        dataItem = latestCandleItem;\r\n      }\r\n\r\n      if (typeof dataItem !== 'undefined') {\r\n        let copyedItem = { ...dataItem };\r\n\r\n        let orgScope = { ...displayCandleMaxMin };\r\n        ////这里的数据是给tooltip计算的\r\n        ////如果后面不复原的话，会影响搭配lastcandle\r\n        let edgeScope = yAxis.funcs.expandDataSpanceEdge(orgScope);\r\n        computSingalCandledata(copyedItem, edgeScope.dataScope, orgScope);\r\n\r\n        let _tooltipState: IToolTipItem = {\r\n          position: {\r\n            x: 0,\r\n            y: (function() {\r\n              if (Number(copyedItem.close) > Number(copyedItem.open)) {\r\n                return copyedItem.candlePixPosition!.y!;\r\n              }\r\n              return (\r\n                copyedItem.candlePixPosition!.y! + copyedItem.candleLength!\r\n              );\r\n            })(),\r\n          },\r\n          length: xAxis.data.lineSize.width,\r\n          value: copyedItem.close,\r\n          displayValue: new _bigNumber(copyedItem.close).toFixed(displayFix),\r\n          relatedTickItem: null,\r\n          size: getSpaceSize(\r\n            initArgs.candleStyles!.currentPriceTooltip!.lineSize!,\r\n            viewSize.width\r\n          ),\r\n        };\r\n\r\n        setlatestCandleToolTip(_tooltipState);\r\n\r\n        //这里给lastcandle进行复原计算\r\n        //computSingalCandledata(copyedItem, org_displayCandleMaxMin, org_displayCandleMaxMin);\r\n        setlatestCandleItem(copyedItem);\r\n\r\n        let currentHeight =\r\n          volumChartPixHeight * (Number(copyedItem.volume) / volumChartViewMax);\r\n        let _latestVolumeToolTip: IToolTipItem = {\r\n          position: {\r\n            x: 0,\r\n            y: xAxis.data.linePosition.y - currentHeight,\r\n          },\r\n          length: xAxis.data.lineSize.width,\r\n          value: copyedItem.volume,\r\n          displayValue: new _bigNumber(copyedItem.volume).toFixed(displayFix),\r\n          relatedTickItem: null,\r\n          size: getSpaceSize(\r\n            initArgs.candleStyles!.volumChart?.currentPriceTooltip.lineSize!,\r\n            viewSize.width\r\n          ),\r\n        };\r\n        setlatestVolumeToolTip(_latestVolumeToolTip);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 视图范围内最末尾的candle\r\n   */\r\n  let updateLatestdisplayLatestCandle = function() {\r\n    if (displayLatestCandle !== null) {\r\n      let edgeScope = yAxis.funcs.expandDataSpanceEdge(displayCandleMaxMin);\r\n      let _displayLatestCandle = computSingalCandledata(\r\n        { ...displayLatestCandle },\r\n        edgeScope.dataScope,\r\n        displayCandleMaxMin\r\n      );\r\n      if (_displayLatestCandle.isEscaped! === true) {\r\n        return;\r\n      }\r\n      let _tooltipState: IToolTipItem = {\r\n        position: {\r\n          x: 0,\r\n          y: (function() {\r\n            let y = 0;\r\n            if (\r\n              Number(_displayLatestCandle.close) >\r\n              Number(_displayLatestCandle.open)\r\n            ) {\r\n              y = _displayLatestCandle.candlePixPosition!.y!;\r\n            } else {\r\n              y =\r\n                _displayLatestCandle.candlePixPosition!.y! +\r\n                _displayLatestCandle.candleLength!;\r\n              if (isNaN(y)) {\r\n                y = _displayLatestCandle.candlePixPosition!.y! + 0;\r\n              }\r\n            }\r\n            return y;\r\n          })(),\r\n        },\r\n        length: xAxis.data.lineSize.width,\r\n        value: _displayLatestCandle.close,\r\n        displayValue: new _bigNumber(_displayLatestCandle.close).toFixed(\r\n          displayFix\r\n        ),\r\n        relatedTickItem: null,\r\n        size: getSpaceSize(\r\n          initArgs.candleStyles!.viewLastPriceTooltip!.lineSize!,\r\n          viewSize.width\r\n        ),\r\n      };\r\n      setlatestdisplayLatestCandle(_tooltipState);\r\n\r\n      let currentHeight =\r\n        volumChartPixHeight *\r\n        (Number(_displayLatestCandle.volume) / volumChartViewMax);\r\n      let _latestdisplayLatestVolume: IToolTipItem = {\r\n        position: {\r\n          x: 0,\r\n          y: xAxis.data.linePosition.y - currentHeight,\r\n        },\r\n        length: xAxis.data.lineSize.width,\r\n        value: _displayLatestCandle.volume,\r\n        displayValue: new _bigNumber(_displayLatestCandle.volume).toFixed(\r\n          displayFix\r\n        ),\r\n        relatedTickItem: null,\r\n        size: getSpaceSize(\r\n          initArgs.candleStyles!.volumChart?.viewLastPriceTooltip.lineSize!,\r\n          viewSize.width\r\n        ),\r\n      };\r\n      setlatestdisplayLatestVolume(_latestdisplayLatestVolume);\r\n    }\r\n  };\r\n\r\n  let getCurrentCursorCandle = function() {\r\n    if (\r\n      xAxis.data.tooltipIsShow &&\r\n      typeof xAxis.data.tooltipState !== 'undefined' &&\r\n      xAxis.data.tooltipState !== null &&\r\n      typeof xAxis.data.tooltipState!.relatedTickItem !== 'undefined' &&\r\n      xAxis.data.tooltipState!.relatedTickItem !== null\r\n    ) {\r\n      let key = xAxis.data.tooltipState!.relatedTickItem!.value!.toString();\r\n      let item = allComputedCandleData.current[key] as IcandleItem;\r\n      setCursorCandleItem(item);\r\n    }\r\n  };\r\n\r\n  let workerReciveMessage = function(e: MessageEvent<any>) {\r\n    let data = e.data;\r\n\r\n    if (data.message === 'setdisplayLatestCandle') {\r\n      setdisplayLatestCandle(data.data);\r\n      return;\r\n    }\r\n\r\n    if (data.message === 'not found') {\r\n      //没找到\r\n      setdisplayCandleData([]);\r\n      checkDynamicData();\r\n      return;\r\n    }\r\n\r\n    if (data.message === 'updateYaxis') {\r\n      requestAnimationFrame(function() {\r\n        //更新y轴\r\n        yAxis.funcs.updateAxisSates(\r\n          xAxis.data.viewSize.width,\r\n          xAxis.data.viewSize.height,\r\n          {\r\n            start: Number(data.data.start),\r\n            end: Number(data.data.end),\r\n          }\r\n        );\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (data.message === 'finishWork') {\r\n      let currentheight = data.data.orgMaxMiny.start - data.data.orgMaxMiny.end;\r\n      let expendHeight =\r\n        currentheight + currentheight * yAxis.initArgs.displayPadding!;\r\n      let scale = yAxis.data.lineSize.height / expendHeight;\r\n      let y =\r\n        -data.data.orgMaxMiny.end +\r\n        (currentheight * yAxis.initArgs.displayPadding!) / 2;\r\n      //\r\n      setdisplayCandleData(data.data.result.data);\r\n      //\r\n      setdisplayCandleMaxMin(data.data.result.scope);\r\n      //\r\n      if (data.data.result.data.length !== 0) {\r\n        setminy(y * scale);\r\n        setyScale(scale);\r\n        checkDynamicData(data.data.result.data);\r\n        setupdateStamp(+new Date());\r\n      }\r\n      return;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * ==================================Effects===============================\r\n   */\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      if (typeof workMessage !== 'undefined') {\r\n        workerReciveMessage(workMessage);\r\n      }\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },\r\n    [workMessage]\r\n  );\r\n  useEffect(function(): ReturnType<React.EffectCallback> {\r\n    if (isMounted === false) {\r\n      setIsMounted(true);\r\n      if (\r\n        typeof initArgs.staticData !== 'undefined' &&\r\n        initArgs.staticData!.length > 0\r\n      ) {\r\n        setisStaticData(true);\r\n      } else {\r\n        setisStaticData(false);\r\n      }\r\n    }\r\n    return function(): void {\r\n      setIsMounted(false);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  //这里专门用于第一次载入时的更新\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      //静态模式是依据initArgs.staticData.length 进行的\r\n      //如果initArgs.staticData.length > 0 就说明现在需要进行静态数据的展示\r\n      if (\r\n        isMounted === true &&\r\n        xAxis.data.isFinishedInit &&\r\n        yAxis.data.isFinishedInit\r\n      ) {\r\n        //记录一下当前的时间类型\r\n        setcurrentTimeTypeName(xAxis.data.currentTimeType?.name!);\r\n        //如果是静态数据\r\n        if (isStaticData) {\r\n          //初始化静态数据\r\n          initStaticData();\r\n        } else if (initArgs.dynamicData!.enabled) {\r\n          //否则进入动态数据模式\r\n          initDynamicData();\r\n        }\r\n      }\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },\r\n    [xAxis.data.isFinishedInit, yAxis.data.isFinishedInit]\r\n  );\r\n\r\n  //数据动态载入完成以后需要重新渲染一下数据\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      //静态模式是依据initArgs.staticData.length 进行的\r\n      //如果initArgs.staticData.length > 0 就说明现在需要进行静态数据的展示\r\n      if (fetchDataStemp !== -1) {\r\n        moveUpdate();\r\n      }\r\n\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },\r\n    [fetchDataStemp]\r\n  );\r\n\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      //静态模式是依据initArgs.staticData.length 进行的\r\n      //如果initArgs.staticData.length > 0 就说明现在需要进行静态数据的展示\r\n      if (initDyStamp !== -1) {\r\n        window.requestAnimationFrame(function() {\r\n          scaleUpdate();\r\n        });\r\n      }\r\n\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },\r\n    [initDyStamp]\r\n  );\r\n\r\n  //这里专门用户时间类型切换时的更新\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      if (\r\n        xAxis.data.xAxisUpdateTimeStamp !== -1 &&\r\n        xAxis.data.xAxisUpdateTimeStamp !== lastTimexAsixStemp\r\n      ) {\r\n        if (xAxis.data.currentTimeType !== null && currentTimeTypeName !== '') {\r\n          //这里判断是否更新了时间类型（就是时间单位）\r\n          if (xAxis.data.currentTimeType.name !== currentTimeTypeName) {\r\n            //记录一下当前的时间类型\r\n            setcurrentTimeTypeName(xAxis.data.currentTimeType?.name);\r\n            //如果是静态数据\r\n            if (isStaticData) {\r\n              //初始化静态数据\r\n              initStaticData();\r\n            } else if (initArgs.dynamicData!.enabled) {\r\n              //否则进入动态数据模式\r\n              initDynamicData();\r\n            }\r\n          }\r\n          setlastTimexAsixStemp(xAxis.data.xAxisUpdateTimeStamp);\r\n        }\r\n      }\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },\r\n    [xAxis.data.xAxisUpdateTimeStamp, xAxis.data.currentTimeType]\r\n  );\r\n\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      if (xAxis.data.xAxisUpdateMoveMentTimeStamp !== -1) {\r\n        moveUpdate();\r\n      }\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },\r\n    [xAxis.data.xAxisUpdateMoveMentTimeStamp]\r\n  );\r\n\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      if (xAxis.data.xAxisUpdateScaleTimeStamp !== -1) {\r\n        window.requestAnimationFrame(function() {\r\n          scaleUpdate();\r\n        });\r\n      }\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },\r\n    [xAxis.data.xAxisUpdateScaleTimeStamp]\r\n  );\r\n\r\n  //这里专门用于计算完candle之后的操作\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      if (updateStamp !== -1) {\r\n        updateLatestCandleTooltip();\r\n        updateLatestdisplayLatestCandle();\r\n      }\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },\r\n    [updateStamp]\r\n  );\r\n\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      getCurrentCursorCandle();\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },\r\n    [xAxis.data.tooltipState]\r\n  );\r\n\r\n  //ws动态更新第一个数据\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      if (\r\n        streamData !== null &&\r\n        //\r\n        streamData.time !== -1 &&\r\n        isFinishedInit === true &&\r\n        isFetchingData === false\r\n      ) {\r\n        updateStreamData();\r\n      }\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },\r\n    [streamData, isFinishedInit, isFetchingData]\r\n  );\r\n\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      if (TempDynamicData !== null) {\r\n        updateDynamicData([...TempDynamicData]);\r\n      }\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },\r\n    [TempDynamicData]\r\n  );\r\n\r\n  return {\r\n    data: {\r\n      displayCandleData,\r\n      isDQuickUpdateing,\r\n      latestCandleToolTip,\r\n      latestdisplayLatestCandle,\r\n      volumChartPixHeight,\r\n      volumChartViewMax,\r\n      latestVolumeToolTip,\r\n      latestdisplayLatestVolume,\r\n      cursorCandleItem,\r\n      latestCandleItem,\r\n      yScale,\r\n      miny,\r\n      updateStamp,\r\n      isFetchingData,\r\n      isFinishedInit,\r\n    },\r\n    funcs: {\r\n      updateLatestCandleData,\r\n      setinitArgs: function(arg: IdataConfig) {\r\n        setinitArgs(merge(initArgs, arg));\r\n      },\r\n    },\r\n    initArgs,\r\n  };\r\n};\r\n\r\nexport default useCandleHook;\r\n"],"names":["formatDate","date","format","Date","replace","getFullYear","toString","substring","getMonth","getDate","getHours","getMinutes","getSeconds","anyTimeToGMT0000ToTarget","time","currentTimeZone","targetTimeZone","localtimeZone","Math","abs","getTimezoneOffset","setHours","getTime","getSpaceSize","arg","length","indexOf","Number","isNaN","console","log","getRangePosition","value","range","pixWidth","start","end","findIntersection","tickArr","scope","result","item","push","findIntersectionByKey","findIntersectionCandle","candle","shiftNumber","_number","_shiftLength","_bigNumber","times","exponentiatedBy","arrayToHash","arr","keyProperty","reduce","hash","obj","index","roundToNearestTenBigNumber","num","intGetPar","bigNum","remainder","modulo","minus","plus","integerValue","ROUND_FLOOR","binarySearchByKeyStrictlyEqual","inputArr","target","targetType","key","getItem","mid","left","right","floor","binarySearchByKey","startIndex","endIndex","slice","getRightDate","dateTime","thousandsSplit","numStr","trim","split","output","j","i","getUnitNumber","_num","_lan","_fix","translateNumberT","translateNumberF","translateNumberK","toFixed","nIARR","dividedBy","getLength","p1","p2","sqrt","pow","x","y","useThrottle","useState","isMounted","setIsMounted","ThrottleFunction","useRef","ThrottleTimeOut","useEffect","_func","_time","current","setTimeout","runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","globalThis","Function","DEFAULTAXISVALUES","labelSpace","fontColor","fontSize","netLineColor","lineColor","tickColor","tickLength","netLineMaxCount","netLineMinCount","netLineSize","lineSize","tickSize","backgroundColor","tooltip","enabled","color","dashLength","spaceLength","label","fontsize","backGroundColor","backGroundAlpha","formatter","axisItem","initTimePoint","displayPadding","DEFAULTDATAVALUES","staticData","dynamicData","showLoading","stopUserOperateWhenLoading","dataFetchCountPreTime","dataFetchCallback","candleStyles","candleWidth","wickWidth","candleRiseColor","candleFallColor","wickRiseColor","wickFallColor","currentPriceTooltip","displayValue","viewLastPriceTooltip","volumChart","volumeChartHeight","alpha","riseColor","fallColor","language","DEFAULTVALUES","title","enableTitle","enableinfo","timeFormat","width","height","resizeDebounceTime","timeZone","dataSourceTimeZone","fetchConditionTimeZone","displayTimeZone","yAxis","xAxis","data","LANGUAGES","zh","today","yesterday","unitsecond","unitminute","unithour","unithalfOur","unitoclock","unitday","unitdayst","unitdaynd","unitdayrd","thisMonth","nextMonth","January","February","March","April","May","June","July","August","September","October","November","December","year","thisyear","lastyear","oneMin","twoMin","threeMin","fiveMin","tenMin","fifteenMin","halfhour","oneHour","oneday","oneWeek","onemonth","oneYear","en","getshifttime","hourShift","ONEMIN","lang","timeGap","roundingFunction","timeStamp","now","setSeconds","setMilliseconds","forwardSingleUnit","setMinutes","backwardSingleUnit","forwardTimeUnit","backwardTimeUnit","getInitTimeScope","initTime","lan","TENMIN","FIFMIN","HALFHOUR","HOUR","DAY","setDate","MONTH","setMonth","YEAR","setFullYear","timeTypeMap","1min","2min","3min","5min","10min","15min","30min","1h","1d","1w","currentDay","getDay","offsetDays","1m","1y","findRoundTimeCountFromArray","array","timeShift","currentType","getItemTime","getTimeShift","gap","_timeTypeMap","findRoundTimeCount","timeType","result_c","count","step","round","latestEqualIndex","nextRound","nextEqualIndex","stepCount","countSelectedElements","timeTypeItem","candleViewContext","createContext","useCandleViewContext","useContext","styleInject","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","Rectangle","PixiComponent","Graphics","applyProps","instance","oldProps","props","new_props","assign","DEFAULTRECTANGLE","newxy","xyComput","clear","beginFill","opacity","drawRect","size","endFill","position","alignX","alignY","utils","string2hex","DashedLine","_","newProps","defaults","positionStart","positionStop","lineStyle","x1","y1","x2","y2","hyp","units","dashSpaceRatio","dashX","spaceX","dashY","spaceY","moveTo","lineTo","drawDash","XAxis","_ref","CVData","useCandleViewPixiContext","tooltipTextRef","xBackground","useMemo","React","PIXI","hookObjs","xAxisObj","initArgs","viewSize","linePosition","yAxisObj","xAsixElem","ticks","displayTickArr","Fragment","cPosition","makeTicks","labels","Text","anchor","text","_item$displayValue","resolution","align","fill","makeLabels","tooltipState","tooltipIsShow","_CVData$hookObjs$xAxi","_CVData$hookObjs$xAxi2","labelPadding","relatedTickItem","_CVData$hookObjs$xAxi3","_CVData$hookObjs$xAxi4","_CVData$hookObjs$xAxi5","_CVData$hookObjs$xAxi6","_CVData$hookObjs$xAxi7","_CVData$hookObjs$xAxi8","_CVData$hookObjs$xAxi9","_CVData$hookObjs$xAxi10","Container","memo","DataTooltop","updateTemp","setupdateTemp","lastDataTooltipTextRef","lastDataTooltipTextRef2","lastDataTooltipTextRef3","lastDataTooltipTextRef4","latestCandleToolTip","candleObj","_CVData$hookObjs$cand16","latestdisplayLatestCandle","_CVData$hookObjs$cand17","_CVData$hookObjs$cand18","_CVData$hookObjs$cand19","_CVData$hookObjs$cand20","_CVData$hookObjs$cand21","_CVData$hookObjs$cand22","_CVData$hookObjs$cand23","_CVData$hookObjs$cand24","_CVData$hookObjs$cand25","_CVData$hookObjs$cand26","_CVData$hookObjs$cand27","_CVData$hookObjs$cand28","_CVData$hookObjs$cand29","_CVData$hookObjs$cand30","_CVData$hookObjs$cand31","_CVData$hookObjs$cand32","_CVData$hookObjs$cand33","_CVData$hookObjs$cand34","_CVData$hookObjs$cand73","lastCandleTooltip","latestCandleItem","_CVData$hookObjs$cand","candleColor","_CVData$hookObjs$cand2","_CVData$hookObjs$cand3","_CVData$hookObjs$cand4","_CVData$hookObjs$cand5","_CVData$hookObjs$cand6","_CVData$hookObjs$cand7","_CVData$hookObjs$cand8","_CVData$hookObjs$cand9","_CVData$hookObjs$cand10","_CVData$hookObjs$cand11","_CVData$hookObjs$cand12","_CVData$hookObjs$cand13","_CVData$hookObjs$cand14","_CVData$hookObjs$cand15","_CVData$hookObjs$cand74","LastVolumeTooltip","_CVData$hookObjs$cand35","latestVolumeToolTip","_CVData$hookObjs$cand36","_CVData$hookObjs$cand37","_CVData$hookObjs$cand38","_CVData$hookObjs$cand39","_CVData$hookObjs$cand40","_CVData$hookObjs$cand41","_CVData$hookObjs$cand42","_CVData$hookObjs$cand43","_CVData$hookObjs$cand44","_CVData$hookObjs$cand45","_CVData$hookObjs$cand46","_CVData$hookObjs$cand47","_CVData$hookObjs$cand48","_CVData$hookObjs$cand49","_CVData$hookObjs$cand50","_CVData$hookObjs$cand51","_CVData$hookObjs$cand52","_CVData$hookObjs$cand53","_CVData$hookObjs$cand75","LatestVolumeToolTip","_CVData$hookObjs$cand54","latestdisplayLatestVolume","_CVData$hookObjs$cand55","_CVData$hookObjs$cand56","_CVData$hookObjs$cand57","_CVData$hookObjs$cand58","_CVData$hookObjs$cand59","_CVData$hookObjs$cand60","_CVData$hookObjs$cand61","_CVData$hookObjs$cand62","_CVData$hookObjs$cand63","_CVData$hookObjs$cand64","_CVData$hookObjs$cand65","_CVData$hookObjs$cand66","_CVData$hookObjs$cand67","_CVData$hookObjs$cand68","_CVData$hookObjs$cand69","_CVData$hookObjs$cand70","_CVData$hookObjs$cand71","_CVData$hookObjs$cand72","_CVData$hookObjs$cand76","YAxis","yBackground","yTicks","yLabels","_CVData$hookObjs$yAxi","_CVData$hookObjs$yAxi2","_CVData$hookObjs$yAxi3","_CVData$hookObjs$yAxi4","_CVData$hookObjs$yAxi5","_CVData$hookObjs$yAxi6","_CVData$hookObjs$yAxi7","_CVData$hookObjs$yAxi8","_CVData$hookObjs$yAxi9","_CVData$hookObjs$yAxi10","DataToolTip","Data","getColor","status","_CVData$initArgs$data","_CVData$initArgs$data2","_CVData$initArgs$data3","_CVData$initArgs$data4","_CVData$initArgs$data5","_CVData$initArgs$data6","_CVData$initArgs$data7","_CVData$initArgs$data8","displayCandleData","isDQuickUpdateing","candleStateus","candleLength","currentTick","candlePixPosition","makeCandle","wick","isEscaped","wickLength","wickPixPosition","makeWick","miny","scale","yScale","NetLines","netLinesx","netLineArr","makeNetLinesx","netLinesy","makeNetLinesy","VolumChat","chat","currentHeight","volumChartPixHeight","volume","volumChartViewMax","_loop","makeChat","Info","className","infoLayer","cursorCandleItem","_tooltipState","currentTimeType","_CVData$initArgs$time","BigNumber","open","close","high","low","currentItem","_CVData$initArgs$time2","makeInfo","Loading","isFetchingData","isFinishedInit","candleViewPixiContext","$","useJquery","resizeDebounce","debounceFunction","debounceTimeOut","clearTimeout","useDebounce","offset","setoffset","relativePosition","isMouseDown","setisMouseDown","mouseDownPosition","setmouseDownPosition","mousePosition","setmousePosition","touchScaleStartLength","settouchScaleStartLength","isTouchScale","setisTouchScale","canvasConatiner","resizeObserverRef","initCandleView","getCanvasSize","createResizeObserver","funcs","setcanvasBackgroundColor","parent","setcanvasWidth","setcanvasHeight","top","ResizeObserver","entries","observe","preventDefault","e","addEventListener","disconnect","removeEventListener","canvasWidth","canvasHeight","onMouseDown","event","pageX","pageY","setrelativePosition","onMouseMove","moveContainer","tooltipMove","onMouseUp","onWheel","movement","deltaY","scaleStep","nativeEvent","stopPropagation","onMouseEnter","onMouseLeave","onTouchStart","targetTouches","onTouchMove","cancelable","min","point","max","onTouchEnd","Stage","options","backgroundAlpha","raf","renderOnComponentChange","Provider","VolumChart","args","merge","setinitArgs","igorn","config","initArgsChange","setinitArgsChange","lastmousePosition","setlastmousePosition","mouseSpeedSec","setmouseSpeedSec","mouseSpeedTemp","setmouseSpeedTemp","mouseSpeedTimmer","setmouseSpeedTimmer","setisFinishedInit","xAxisUpdateTimeStamp","setxAxisUpdateTimeStamp","xAxisUpdateMoveMentTimeStamp","setxAxisUpdateMoveMentTimeStamp","xAxisUpdateScaleTimeStamp","setxAxisUpdateScaleTimeStamp","setTooltipState","settooltipIsShow","moveAmount","setmoveAmount","setx","scaleValue","orgScope","setorgScope","tickStep","settickStep","setcurrentTimeType","lastTimeScope","setlastTimeScope","currentTimeScope","setcurrentTimeScope","setviewSize","yAxisSpace","setlinePosition","setlabelSpace","setlineSize","setlineColor","setnetLineArr","setnetLineMaxCount","setnetLineMinCount","settickArr","setdisplayTickArr","displayTickCommonWidth","setdisplayTickCommonWidth","displayTickCommonpixWidth","setdisplayTickCommonpixWidth","setcandleObj","timeSpeculation_backrward","timeInteger","initTimeScopeStart","currentTime","timeScopeArr","unshift","updateTicks","targetTickArr","timeScope","isComputCommonProp","_moveAmount","moveDir","forwardArr","initTimeScopeEnd","timeSpeculation_forward","createTickers","backwardArr","commonPixProperties","computTickCommonProp","dataWidth","incriseWidth","computDataPixTick","sort","a","b","totalArrLength","dataSpace","pixSpace","resultItem","createDisplayTickers","_tickStep","cArr","createNetLines","displaytickItems","results","createDisplayTickersByDate","displayTickRoundValuesArray","displayTickArr1","displayTickArr2","isFind","getTickWithFormated","displayTickArr2Map","xCondition","currentIndex","moveAxis","isSaveScope","_config$data","_config$data$dynamicD","pureLength","sign","changeScope","_displayTickerArr","_currentTimeScope","resultInterArr","newTicks","resultInterDisplayArr","newTickArr","newTickHash","nextStep","Array","from","Set","updateDisplayTicks","_netLineArr","precent","_config$data2","_config$data2$dynamic","leftPrecent","rightPrecent","total","q","_tickArr","setscaleValue","setUpMouseSpeedDetecor","timeOut","_flexTimeScope","_timeInteger","realTimeArr","_tickerArr","createAxisData","window","requestAnimationFrame","tooltipUpdate","initAxisSates","viewWidth","viewHeight","yAxisLabelSpace","setyAxisSpace","updateAxisSates","isShowTooltip","tooltipX","_tickItem","tickerArr","centerIndex","midTick","findTick","usexAxis","yAxisUpdateTimeStamp","setyAxisUpdateTimeStamp","currentDataScope","setcurrentDataScope","currentDataSpace","setcurrentDataSpace","currentDataPositionOfStart","setcurrentDataPositionofStart","settickLength","expandDataSpanceEdge","input","_expandAmount","div","dataScope","tickSeed","_displayTickArr","pre","computDisplayTicks","resultTickArr","stepAdd","tickCount","startInteger","scDf","gt","postStep","getTickSeed","computDisplayLines","_dataScope","scopeResult","tooltipY","expandDataSpanceEdgePIX","useyAxis","baseConfig","updateThrottlereComputAllDisplayedCandleData","currentTimeTypeName","setcurrentTimeTypeName","setminy","setisFetchingData","fetchDataStemp","setfetchDataStemp","streamData","setstreamData","stopDynamicFetching","setstopDynamicFetching","lastMaxMiny","workMessage","TempDynamicData","setTempDynamicData","isFirstTimeUpdate","setisFirstTimeUpdate","setisDQuickUpdateing","setCursorCandleItem","setlatestCandleItem","lastTimexAsixStemp","setlastTimexAsixStemp","setvolumChartPixHeight","setvolumChartViewMax","isStaticData","setisStaticData","orgCandleData","setorgCandleData","setdisplayCandleData","displayCandleMaxMin","setdisplayCandleMaxMin","org_displayCandleMaxMin","setorg_displayCandleMaxMin","setyScale","setlatestCandleToolTip","setlatestVolumeToolTip","displayLatestCandle","setdisplayLatestCandle","setlatestdisplayLatestCandle","setlatestdisplayLatestVolume","updateStamp","setupdateStamp","initDyStamp","setinitDyStamp","allComputedCandleData","isUpdateing","isQuickUpdateing","isEscapeItems","determineTimeSpaceConsistent","inputDataTimeSpace","configDataTimeSpace","getMin","getMax","mergeData","_currentCandleStick","prevItem","_displayCandleMaxMin","putDataIntoAllComputedCandleData","getCandleColor","getCandleStatus","getDataSpaceFromNumberScope","space","getDataY","dataPoint","yHeight","computSingalCandledata","dataitem","wickColor","wickStateus","_e","updateTag","computSingalCandledataMini","findDataByTicks","maxVolume","inde_i","seAllDataDateToUserConfigedGMT","initDynamicData","endTime","startTime","_context","heightPixVolumArea","_initArgs$candleStyle","_initArgs$candleStyle2","lunchDynamicData","_context2","timeZoneD","initStaticData","_orgCandleData","isConsistentOfDateType","_initArgs$candleStyle3","_initArgs$candleStyle4","reComputAllDisplayedCandleData","checkDynamicData","setlastMaxMiny","scaleUpdate","moveUpdate","updateAndAppendNewCandle","_totalCandleDisplayArr","backwardDCArr","forwardDCArr","_displayCandleData","currentScopeDisplayCandleData","_org_displayCandleMaxMin","currentTag","_cArr","isFromAppend","barr","orgMaxMiny","_item$wickPixPosition9","_item$wickPixPosition10","_item$wickPixPosition11","_item$wickPixPosition12","_item$candlePixPositi5","_item$wickPixPosition13","_item$candlePixPositi6","_item$wickPixPosition14","_item$candlePixPositi7","_item$wickPixPosition15","_item$candlePixPositi8","_item$wickPixPosition16","currentheight","onlyUpdatePositionAndScale","_xAxisdatatickArr","_viewSize","isEscapeItems_current","isQuickUpdateing_current","_item$wickPixPosition","_item$wickPixPosition2","_item$wickPixPosition3","_item$wickPixPosition4","_item$candlePixPositi","_item$wickPixPosition5","_item$candlePixPositi2","_item$wickPixPosition6","_item$candlePixPositi3","_item$wickPixPosition7","_item$candlePixPositi4","_item$wickPixPosition8","updatePartialCandleData","message","workerReciveMessage","_xAxis$data$currentTi2","_xAxis$data$currentTi3","dataItem","intTime","copyedItem","edgeScope","_latestVolumeToolTip","_initArgs$candleStyle5","updateLatestCandleTooltip","_displayLatestCandle","_latestdisplayLatestVolume","_initArgs$candleStyle6","updateLatestdisplayLatestCandle","getCurrentCursorCandle","isMergeMode","currentRoundTime","_xAxis$data$currentTi","_latestCandleItem","isNew","isChangeDisplayCandleArr","_latestCandleItem2","_latestCandleItem3","tick","newMaxMin","updateStreamData","_data","updateDynamicData","updateLatestCandleData","candleItem","useCandleHook","canvasBackgroundColor","dataArea","setdataArea","_initArgs$yAxis2","_initArgs$yAxis","_initArgs$yAxis3","_initArgs$yAxis4","setInitArgs","appendData","setTimeFormat","_initArgs"],"mappings":"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"}