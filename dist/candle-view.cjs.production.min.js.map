{"version":3,"file":"candle-view.cjs.production.min.js","sources":["../node_modules/regenerator-runtime/runtime.js","../src/content/utils/consts.ts","../src/content/hooks/throttleHook.ts","../src/content/utils/defaultValues.ts","../src/content/utils/languages.ts","../src/content/utils/timeFormatDefine.ts","../src/content/context/candleViewContext.ts","../src/content/utils/basicShaps.ts","../src/content/com/xAxis.tsx","../src/content/com/dataToolTip.tsx","../src/content/com/yAxis.tsx","../src/content/com/data.tsx","../src/content/com/netLines.tsx","../src/content/com/volumChart.tsx","../src/content/com/info.tsx","../src/content/com/loadingLay.tsx","../src/content/index.tsx","../src/content/hooks/debounceHook.ts","../src/content/hooks/xAxisHook.ts","../src/content/hooks/yAxisHook.ts","../src/content/hooks/candleHook.ts"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","import _bigNumber from \"bignumber.js\";\r\nimport { IcandleData, jsonObjectType, numberScope, pointCoord, tickItem } from \"../interface/itemsInterFace\";\r\n\r\n/**\r\n * 格式化时间\r\n */\r\nexport const formatDate = function (date: Date, format: string): string {\r\n\tdate = date || new Date();\r\n\tformat = format || \"yyyy-MM-dd HH:mm:ss\";\r\n\tvar result = format\r\n\t\t.replace(\"yyyy\", date.getFullYear().toString())\r\n\t\t.replace(\"yy\", date.getFullYear().toString().substring(2, 4))\r\n\t\t.replace(\"MM\", (date.getMonth() < 9 ? \"0\" : \"\") + (date.getMonth() + 1).toString())\r\n\t\t.replace(\"dd\", (date.getDate() < 10 ? \"0\" : \"\") + date.getDate().toString())\r\n\t\t.replace(\"HH\", (date.getHours() < 10 ? \"0\" : \"\") + date.getHours().toString())\r\n\t\t.replace(\"mm\", (date.getMinutes() < 10 ? \"0\" : \"\") + date.getMinutes().toString())\r\n\t\t.replace(\"ss\", (date.getSeconds() < 10 ? \"0\" : \"\") + date.getSeconds().toString());\r\n\r\n\treturn result;\r\n};\r\n\r\n/**\r\n * 将本地时间时区换算成格林威治时间 GMT+0000\r\n * 例如输入时间为 GMT +0800\r\n * 它将会把时间换算成 GMT+0000  也就是减去八小时\r\n */\r\nexport const localTimeToGMT0000 = function (time: number | Date) {\r\n\tlet date = new Date(time);\r\n\tlet timeZone = Math.abs(date.getTimezoneOffset() / 60);\r\n\tdate.setHours(date.getHours() - timeZone);\r\n\treturn date.getTime();\r\n};\r\nexport const GMT0000TolocalTime = function (time: number | Date) {\r\n\tlet date = new Date(time);\r\n\tlet timeZone = Math.abs(date.getTimezoneOffset() / 60);\r\n\tdate.setHours(date.getHours() + timeZone);\r\n\treturn date.getTime();\r\n};\r\n\r\n/**\r\n * 将某个时间重置到GMT +0000 然后再变换到GMT +0n00\r\n */\r\nexport const anyTimeToGMT0000ToTarget = function (\r\n\ttime: number | Date,\r\n\tcurrentTimeZone: number | \"local\",\r\n\ttargetTimeZone: number | \"local\"\r\n) {\r\n\tlet date = new Date(time);\r\n\tlet localtimeZone = Math.abs(date.getTimezoneOffset() / 60);\r\n\tif (targetTimeZone === \"local\") {\r\n\t\ttargetTimeZone = localtimeZone;\r\n\t}\r\n\r\n\tif (currentTimeZone === \"local\") {\r\n\t\tcurrentTimeZone = localtimeZone;\r\n\t}\r\n\tdate.setHours(date.getHours() - currentTimeZone + targetTimeZone);\r\n\treturn date.getTime();\r\n};\r\n\r\n/**\r\n * 获得长度\r\n *@param  {number | string} arg 输入值\r\n *@param  {number} length 相对的长度\r\n *@returns {number}\r\n */\r\nexport const getSpaceSize = function (arg: number | string, length: number): number {\r\n\tif (typeof arg === \"string\" && arg === \"auto\") {\r\n\t\treturn length;\r\n\t}\r\n\r\n\tif (typeof arg === \"string\" && arg.indexOf(\"%\") !== -1) {\r\n\t\tlet value = Number(arg.replace(\"%\", \"\")) / 100;\r\n\t\treturn length * value;\r\n\t}\r\n\r\n\tif (typeof arg === \"string\" && arg.indexOf(\"px\") !== -1) {\r\n\t\treturn Number(arg.replace(\"px\", \"\"));\r\n\t}\r\n\r\n\tif (typeof arg === \"number\" || !isNaN(Number(arg))) {\r\n\t\treturn Number(arg);\r\n\t}\r\n\r\n\tconsole.log(\"no useful length !\");\r\n\treturn 0;\r\n};\r\n\r\n/**\r\n * 通过时间 计算点的坐标\r\n *@param  {number} value 值\r\n *@param  {number} length 数组长度\r\n *@param {number} pixWidth 像素长度\r\n */\r\nexport const getRangePosition = function (\r\n\t//\r\n\tvalue: number,\r\n\trange: numberScope,\r\n\tpixWidth: number\r\n): number {\r\n\treturn pixWidth * ((value - range.start) / (range.end - range.start));\r\n};\r\n\r\n/**\r\n * 求tick的交集\r\n */\r\nexport const findIntersection = function (tickArr: tickItem[], scope: numberScope): tickItem[] {\r\n\tlet result: tickItem[] = [];\r\n\r\n\tif (tickArr.length < 300) {\r\n\t\tfor (var item of tickArr) {\r\n\t\t\tif (Number(item.value) >= scope.start && Number(item.value) <= scope.end) {\r\n\t\t\t\tresult.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\tresult = findIntersectionByKey(tickArr as unknown as jsonObjectType[], scope, \"value\") as unknown as tickItem[];\r\n\t}\r\n\r\n\treturn result;\r\n};\r\n\r\n/**\r\n * 求candle的交集\r\n */\r\nexport const findIntersectionCandle = function (candle: IcandleData[], scope: numberScope): IcandleData[] {\r\n\tlet result: IcandleData[] = [];\r\n\t//for (var item of candle) {\r\n\t//\tif (Number(item.time) >= scope.start && Number(item.time) <= scope.end) {\r\n\t//\t\tresult.push(item);\r\n\t//\t}\r\n\t//}\r\n\r\n\tresult = findIntersectionByKey(candle as unknown as jsonObjectType[], scope, \"time\") as unknown as IcandleData[];\r\n\r\n\treturn result;\r\n};\r\n\r\n//换算区块链的数字单位\r\nexport const shiftNumber = function (_number: string | number, _shiftLength: number): string {\r\n\treturn new _bigNumber(_number).times(new _bigNumber(10).exponentiatedBy(_shiftLength)).toString();\r\n};\r\n\r\n/**\r\n * 将数组快速转换为hash表\r\n */\r\nexport const arrayToHash = function (arr: any[], keyProperty: string) {\r\n\treturn arr.reduce((hash, obj, index) => {\r\n\t\thash[obj[keyProperty]] = obj;\r\n\t\thash[obj[keyProperty]].index = index;\r\n\t\treturn hash;\r\n\t}, {});\r\n};\r\n\r\n/**\r\n * 获得某个数字的小数位数\r\n */\r\nexport const getDecimalOfLength = function (num: number): number {\r\n\treturn new _bigNumber(num).decimalPlaces() as number;\r\n};\r\n\r\n/**\r\n * 获得某个数字的整数位数\r\n */\r\nexport const getIntOfLength = function (num: number): number {\r\n\treturn new _bigNumber(num).toFixed(0).toString().length;\r\n};\r\n\r\n/**\r\n * 把任意整数的末尾数字算成整数例如 12345678  算成 12345680\r\n * “四舍五入”到最近的十的倍数 (N的倍数)\r\n */\r\nexport const roundToNearestTenBigNumber = function (num: string, intGetPar: number) {\r\n\t// 创建BigNumber实例\r\n\tconst bigNum = new _bigNumber(num);\r\n\r\n\t// 计算末尾数字（余数）\r\n\tconst remainder = bigNum.modulo(intGetPar);\r\n\r\n\t// 判断并进行相应的加减操作\r\n\t// 注意：BigNumber的运算需要使用其提供的方法，不能直接使用+-*/等运算符\r\n\tlet result;\r\n\t// 加（intGetPar - 余数）\r\n\t//永远往大推，不要往小推\r\n\tresult = bigNum.minus(remainder).plus(intGetPar);\r\n\r\n\t// 确保结果是整数，虽然一般操作结果已经是整数，但可做显式转换\r\n\treturn result.integerValue(_bigNumber.ROUND_FLOOR).toString();\r\n};\r\n\r\n//这是我自己写的\r\n\r\n///**\r\n// * 查找点\r\n// * @param inputArr 查找的数组\r\n// * @param target 目标数字\r\n// * @param key 目标字段\r\n// * @param targetType 找 起点<= 目标  还是 终点>= 目标\r\n// */\r\n//function binarySearchByKey(\r\n//\tinputArr: jsonObjectType[],\r\n//\ttarget: number,\r\n//\tkey: string,\r\n//\ttargetType: \"forStart\" | \"forEnd\"\r\n//): number | null {\r\n//\tif (targetType === \"forStart\" && target <= (inputArr[0][key] as number)) {\r\n//\t\treturn 0;\r\n//\t}\r\n//\tif (targetType === \"forEnd\" && target >= (inputArr[inputArr.length - 1][key] as number)) {\r\n//\t\treturn inputArr.length - 1;\r\n//\t}\r\n//\r\n//\tlet left = 0;\r\n//\tlet right = inputArr.length - 1;\r\n//\tlet mid: number;\r\n//\r\n//\twhile (left <= right) {\r\n//\t\tmid = left + Math.floor((right - left) / 2);\r\n//\r\n//\t\tif (inputArr[mid][key] === target) {\r\n//\t\t\tif (targetType === \"forStart\") {\r\n//\t\t\t\t// 查找起点，继续在左半边查找可能更小的索引\r\n//\t\t\t\tright = mid - 1;\r\n//\t\t\t} else {\r\n//\t\t\t\t// 查找终点，继续在右半边查找可能更大的索引\r\n//\t\t\t\tleft = mid + 1;\r\n//\t\t\t}\r\n//\t\t} else if ((inputArr[mid][key] as number) < target) {\r\n//\t\t\tleft = mid + 1;\r\n//\t\t} else {\r\n//\t\t\tright = mid - 1;\r\n//\t\t}\r\n//\t}\r\n//\r\n//\t// 根据targetType确定返回值\r\n//\tif (targetType === \"forStart\") {\r\n//\t\t// 如果是查找起点，返回第一个大于等于target的索引\r\n//\t\treturn left;\r\n//\t} else {\r\n//\t\t// 如果是查找终点，由于循环结束时left已经越过了目标，所以返回right\r\n//\t\treturn right;\r\n//\t}\r\n//}\r\n//\r\n///**\r\n// * 二分查找法求交集\r\n// * @param inputArr 输入数组\r\n// * @param scope 范围\r\n// * @param key 目标字段\r\n// * @returns 返回找到的数组范围\r\n// */\r\n//export const findIntersectionByKey = function (\r\n//\tinputArr: jsonObjectType[],\r\n//\tscope: numberScope,\r\n//\tkey: string\r\n//): jsonObjectType[] {\r\n//\tlet startIndex = binarySearchByKey(inputArr, scope.start, key, \"forStart\");\r\n//\tlet endIndex = binarySearchByKey(inputArr, scope.end, key, \"forEnd\");\r\n//\r\n//\t// 确保索引有效\r\n//\tstartIndex = startIndex === null ? 0 : startIndex;\r\n//\tendIndex = endIndex === null ? inputArr.length - 1 : endIndex;\r\n//\r\n//\t// 调整endIndex以确保包含等于scope.end的元素\r\n//\tif (endIndex < inputArr.length && inputArr[endIndex][key] < scope.end) {\r\n//\t\tendIndex++;\r\n//\t}\r\n//\r\n//\treturn inputArr.slice(startIndex, endIndex);\r\n//};\r\n\r\n/**\r\n * 查找点\r\n * @param inputArr 查找的数组\r\n * @param target 目标数字\r\n * @param key 目标字段\r\n * @param targetType 找 起点=== 目标  还是 终点=== 目标\r\n */\r\nexport function binarySearchByKeyStrictlyEqual(\r\n\tinputArr: jsonObjectType[] | number[],\r\n\ttarget: number,\r\n\ttargetType: \"forStart\" | \"forEnd\",\r\n\tkey?: string\r\n): number | null {\r\n\tlet getItem = function (arr: any[], index: any): number {\r\n\t\tif (typeof arr[index] === \"object\" || typeof key !== \"undefined\") {\r\n\t\t\treturn Number(arr[index][key!]);\r\n\t\t}\r\n\t\treturn Number(arr[index]);\r\n\t};\r\n\tif (targetType === \"forStart\" && target === (getItem(inputArr, 0) as number)) {\r\n\t\treturn 0;\r\n\t}\r\n\tif (targetType === \"forEnd\" && target === (getItem(inputArr, inputArr.length - 1) as number)) {\r\n\t\treturn inputArr.length - 1;\r\n\t}\r\n\r\n\tlet left = 0;\r\n\tlet right = inputArr.length - 1;\r\n\tlet mid: number;\r\n\r\n\twhile (left <= right) {\r\n\t\tmid = left + Math.floor((right - left) / 2);\r\n\r\n\t\tif (getItem(inputArr, mid) === target) {\r\n\t\t\tif (targetType === \"forStart\") {\r\n\t\t\t\t// 查找起点，继续在左半边查找可能更小的索引\r\n\t\t\t\tright = mid - 1;\r\n\t\t\t} else {\r\n\t\t\t\t// 查找终点，继续在右半边查找可能更大的索引\r\n\t\t\t\tleft = mid + 1;\r\n\t\t\t}\r\n\t\t} else if ((getItem(inputArr, mid) as number) < target) {\r\n\t\t\tleft = mid + 1;\r\n\t\t} else {\r\n\t\t\tright = mid - 1;\r\n\t\t}\r\n\t}\r\n\r\n\t// 根据targetType确定返回值\r\n\tif (targetType === \"forStart\") {\r\n\t\t// 如果是查找起点，返回第一个大于等于target的索引\r\n\t\treturn left;\r\n\t} else {\r\n\t\t// 如果是查找终点，由于循环结束时left已经越过了目标，所以返回right\r\n\t\treturn right;\r\n\t}\r\n}\r\n\r\n//ai帮忙优化的版本，确实优雅一些\r\n/**\r\n * 查找点\r\n * @param inputArr 查找的数组\r\n * @param target 目标数字\r\n * @param key 目标字段\r\n * @param targetType 找 起点<= 目标  还是 终点>= 目标\r\n */\r\nfunction binarySearchByKey(\r\n\tinputArr: jsonObjectType[],\r\n\ttarget: number,\r\n\tkey: string,\r\n\ttargetType: \"forStart\" | \"forEnd\"\r\n): number | null {\r\n\tif (typeof inputArr[0] === \"undefined\") {\r\n\t\treturn -1;\r\n\t}\r\n\tif (targetType === \"forStart\" && target <= (inputArr[0][key] as number)) {\r\n\t\treturn 0;\r\n\t}\r\n\tif (targetType === \"forEnd\" && target >= (inputArr[inputArr.length - 1][key] as number)) {\r\n\t\treturn inputArr.length - 1;\r\n\t}\r\n\r\n\tlet left = 0;\r\n\tlet right = inputArr.length - 1;\r\n\tlet mid: number;\r\n\r\n\twhile (left <= right) {\r\n\t\tmid = left + Math.floor((right - left) / 2);\r\n\r\n\t\tif (inputArr[mid][key] === target) {\r\n\t\t\tif (targetType === \"forStart\") {\r\n\t\t\t\t// 查找起点，继续在左半边查找可能更小的索引\r\n\t\t\t\tright = mid - 1;\r\n\t\t\t} else {\r\n\t\t\t\t// 查找终点，继续在右半边查找可能更大的索引\r\n\t\t\t\tleft = mid + 1;\r\n\t\t\t}\r\n\t\t} else if ((inputArr[mid][key] as number) < target) {\r\n\t\t\tleft = mid + 1;\r\n\t\t} else {\r\n\t\t\tright = mid - 1;\r\n\t\t}\r\n\t}\r\n\r\n\t// 根据targetType确定返回值\r\n\tif (targetType === \"forStart\") {\r\n\t\t// 如果是查找起点，返回第一个大于等于target的索引\r\n\t\treturn left;\r\n\t} else {\r\n\t\t// 如果是查找终点，由于循环结束时left已经越过了目标，所以返回right\r\n\t\treturn right;\r\n\t}\r\n}\r\n\r\n/**\r\n * 二分查找法求交集\r\n * @param inputArr 输入数组\r\n * @param scope 范围\r\n * @param key 目标字段\r\n * @returns 返回找到的数组范围\r\n */\r\nexport const findIntersectionByKey = function (\r\n\tinputArr: jsonObjectType[],\r\n\tscope: numberScope,\r\n\tkey: string\r\n): jsonObjectType[] {\r\n\tlet startIndex = binarySearchByKey(inputArr, scope.start, key, \"forStart\");\r\n\tlet endIndex = binarySearchByKey(inputArr, scope.end, key, \"forEnd\");\r\n\r\n\t// 确保索引有效\r\n\tstartIndex = startIndex === null ? 0 : startIndex;\r\n\tendIndex = endIndex === null ? inputArr.length - 1 : endIndex;\r\n\tif (typeof inputArr[endIndex] === \"undefined\") {\r\n\t\treturn [];\r\n\t}\r\n\tif (endIndex < inputArr.length && (inputArr[endIndex][key] as number) < scope.end) {\r\n\t\t// 调整endIndex以确保包含等于scope.end的元素\r\n\t\tendIndex++;\r\n\t}\r\n\r\n\treturn inputArr.slice(startIndex, endIndex);\r\n};\r\n\r\n/**\r\n * 获得正确的时间\r\n */\r\nexport const getRightDate = function (dateTime: number | string) {\r\n\tif (typeof dateTime === \"number\") {\r\n\t\treturn dateTime;\r\n\t}\r\n\treturn +new Date(dateTime);\r\n};\r\n\r\n//千分位分割\r\nexport const thousandsSplit = function (num: number): string {\r\n\tvar numStr = num.toString().trim().split(\".\")[0].split(\"\");\r\n\tvar output = \"\";\r\n\r\n\tvar j = 0;\r\n\tfor (var i = numStr.length - 1; i > -1; i--) {\r\n\t\tif (j % 3 == 0 && j != 0) {\r\n\t\t\toutput = numStr[i] + \",\" + output;\r\n\t\t} else {\r\n\t\t\toutput = numStr[i] + output;\r\n\t\t}\r\n\t\tj++;\r\n\t}\r\n\tif (num.toString().split(\".\")[1]) {\r\n\t\toutput += \".\" + num.toString().split(\".\")[1];\r\n\t}\r\n\treturn output;\r\n};\r\n\r\n//通过语言信息获得单位换算\r\nexport const getUnitNumber = function (_num: number, _lan: string, _fix: number): string {\r\n\tif (typeof _lan === \"undefined\") {\r\n\t\t_lan = \"en\";\r\n\t}\r\n\r\n\tif (typeof _fix === \"undefined\") {\r\n\t\t_fix = 0;\r\n\t}\r\n\r\n\tvar result: string = _num.toString();\r\n\r\n\tswitch (_lan) {\r\n\t\tcase \"en\":\r\n\t\t\tresult = translateNumberT(_num, _fix);\r\n\t\t\tbreak;\r\n\t\tcase \"ja\":\r\n\t\t\tresult = translateNumberF(_num, _fix);\r\n\t\t\tbreak;\r\n\t\tcase \"ko\":\r\n\t\t\tresult = translateNumberK(_num, _fix);\r\n\t\t\tbreak;\r\n\t\tcase \"zh\":\r\n\t\t\tresult = translateNumberF(_num, _fix);\r\n\t\t\tbreak;\r\n\t\tcase \"ru\":\r\n\t\t\tresult = translateNumberT(_num, _fix);\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\treturn result;\r\n};\r\n\r\n//韩文\r\nexport const translateNumberK = function (_num: number, _fix: number): string {\r\n\tif (typeof _fix === \"undefined\") {\r\n\t\t_fix = 0;\r\n\t}\r\n\tvar num = new _bigNumber(_num).toFixed().split(\".\");\r\n\tvar nIARR = num[0].split(\"\");\r\n\tvar nFARR = [];\r\n\tif (typeof num[1] !== \"undefined\") {\r\n\t\tnFARR = num[1].split(\"\");\r\n\t}\r\n\r\n\t/**\r\n\t * 万 = 10000\r\n\t * 亿 = 100000000\r\n\t * 兆 = 1000000000000\r\n\t */\r\n\r\n\t//兆 = 1000000000000\r\n\tif (nIARR.length >= 13) {\r\n\t\tlet num = new _bigNumber(_num).dividedBy(new _bigNumber(10).exponentiatedBy(12).toFixed()).toFixed(_fix, 1);\r\n\t\treturn num + \"조\";\r\n\t}\r\n\r\n\t//亿 = 100000000\r\n\tif (nIARR.length >= 9) {\r\n\t\tlet num = new _bigNumber(_num).dividedBy(new _bigNumber(10).exponentiatedBy(8).toFixed()).toFixed(_fix, 1);\r\n\t\treturn num + \"억\";\r\n\t}\r\n\r\n\t//万 = 10000\r\n\tif (nIARR.length >= 5) {\r\n\t\tlet num = new _bigNumber(_num).dividedBy(new _bigNumber(10).exponentiatedBy(4).toFixed()).toFixed(_fix, 1);\r\n\t\treturn num + \"만\";\r\n\t}\r\n\r\n\treturn new _bigNumber(_num).toFixed(_fix);\r\n};\r\n\r\n//中文\r\nexport const translateNumberF = function (_num: number, _fix: number): string {\r\n\tif (typeof _fix === \"undefined\") {\r\n\t\t_fix = 0;\r\n\t}\r\n\tvar num = new _bigNumber(_num).toFixed().split(\".\");\r\n\tvar nIARR = num[0].split(\"\");\r\n\tvar nFARR = [];\r\n\tif (typeof num[1] !== \"undefined\") {\r\n\t\tnFARR = num[1].split(\"\");\r\n\t}\r\n\r\n\t/**\r\n\t * 百 = 100\r\n\t * 千 = 1000\r\n\t * 万 = 10000\r\n\t * 百万 = 1000000\r\n\t * 千万 = 10000000\r\n\t * 亿 = 100000000\r\n\t * 兆 = 1000000000000\r\n\t */\r\n\r\n\t//兆 = 1000000000000\r\n\tif (nIARR.length >= 13) {\r\n\t\tlet num = new _bigNumber(_num).dividedBy(new _bigNumber(10).exponentiatedBy(12).toFixed()).toFixed(_fix, 1);\r\n\t\treturn num + \"兆\";\r\n\t}\r\n\r\n\t//亿 = 100000000\r\n\tif (nIARR.length >= 9) {\r\n\t\tlet num = new _bigNumber(_num).dividedBy(new _bigNumber(10).exponentiatedBy(8).toFixed()).toFixed(_fix, 1);\r\n\t\treturn num + \"亿\";\r\n\t}\r\n\r\n\t//千万 = 10000000\r\n\tif (nIARR.length >= 8) {\r\n\t\tlet num = new _bigNumber(_num).dividedBy(new _bigNumber(10).exponentiatedBy(7).toFixed()).toFixed(_fix, 1);\r\n\t\treturn num + \"千萬\";\r\n\t}\r\n\r\n\t//百万 = 1000000\r\n\tif (nIARR.length >= 7) {\r\n\t\tlet num = new _bigNumber(_num).dividedBy(new _bigNumber(10).exponentiatedBy(6).toFixed()).toFixed(_fix, 1);\r\n\t\treturn num + \"百萬\";\r\n\t}\r\n\r\n\t//万 = 10000\r\n\tif (nIARR.length >= 5) {\r\n\t\tlet num = new _bigNumber(_num).dividedBy(new _bigNumber(10).exponentiatedBy(4).toFixed()).toFixed(_fix, 1);\r\n\t\treturn num + \"萬\";\r\n\t}\r\n\r\n\treturn new _bigNumber(_num).toFixed(_fix);\r\n};\r\n\r\n//换算单位英文\r\nexport const translateNumberT = function (_num: number, _fix: number): string {\r\n\tif (typeof _fix === \"undefined\") {\r\n\t\t_fix = 0;\r\n\t}\r\n\tvar num = new _bigNumber(_num).toFixed().split(\".\");\r\n\tvar nIARR = num[0].split(\"\");\r\n\tvar nFARR = [];\r\n\tif (typeof num[1] !== \"undefined\") {\r\n\t\tnFARR = num[1].split(\"\");\r\n\t}\r\n\r\n\t/**\r\n\t * k = 1000\r\n\t * m = 10000000\r\n\t * b = 1000000000\r\n\t * t = 10000000000\r\n\t */\r\n\r\n\t//t = 10000000000\r\n\tif (nIARR.length >= 11) {\r\n\t\tlet num = new _bigNumber(_num).dividedBy(new _bigNumber(10).exponentiatedBy(10).toFixed()).toFixed(_fix, 1);\r\n\t\treturn num + \"T\";\r\n\t}\r\n\r\n\t//b = 1000000000\r\n\tif (nIARR.length >= 10) {\r\n\t\tlet num = new _bigNumber(_num).dividedBy(new _bigNumber(10).exponentiatedBy(9).toFixed()).toFixed(_fix, 1);\r\n\t\treturn num + \"B\";\r\n\t}\r\n\r\n\t//m = 1000000\r\n\tif (nIARR.length >= 7) {\r\n\t\tlet num = new _bigNumber(_num).dividedBy(new _bigNumber(10).exponentiatedBy(6).toFixed()).toFixed(_fix, 1);\r\n\t\treturn num + \"M\";\r\n\t}\r\n\r\n\t//k = 1000\r\n\tif (nIARR.length >= 4) {\r\n\t\tlet num = new _bigNumber(_num).dividedBy(new _bigNumber(10).exponentiatedBy(3).toFixed()).toFixed(_fix, 1);\r\n\t\treturn num + \"K\";\r\n\t}\r\n\treturn new _bigNumber(_num).toFixed(_fix);\r\n};\r\n\r\n/**\r\n * 求等差数列的个数\r\n * @param length 数组的长度\r\n * @param step 每隔几个元素取一个元素\r\n * @returns 返回共可取多少元素\r\n */\r\nexport const countSelectedElements = function (length: number, step: number): number {\r\n\t// 计算数组长度\r\n\tconst arrayLength = length;\r\n\tstep = step + 1;\r\n\r\n\t// 如果步长大于数组长度，则没有元素可以挑选\r\n\tif (step >= arrayLength) {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t// 计算挑选的元素数量\r\n\t// 使用整数除法向下取整\r\n\tconst count = Math.floor((arrayLength - 1) / step) + 1;\r\n\r\n\treturn count;\r\n};\r\n\r\n/**\r\n * 检查数组里的元素是否有重复\r\n */\r\nexport const hasDuplicates = function (arr: any) {\r\n\t// 创建一个Set对象，它会自动去除重复的元素\r\n\tconst uniqueSet = new Set(arr);\r\n\r\n\t// 如果Set的大小小于数组的长度，说明数组中有重复元素\r\n\treturn uniqueSet.size !== arr.length;\r\n};\r\n\r\n//获得两点之间的距离\r\nexport const getLength = function (p1: pointCoord, p2: pointCoord): number {\r\n\treturn Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));\r\n};\r\n","import { createContext, useState, useContext, useRef, useCallback, useEffect, FC, ReactElement } from \"react\";\r\n\r\n/**\r\n * 节流钩子\r\n */\r\nconst useThrottle = function () {\r\n\t/**\r\n\t * ============================state===========================\r\n\t */\r\n\tconst [isMounted, setIsMounted] = useState<boolean>(false);\r\n\r\n\tconst ThrottleFunction = useRef<(() => void) | null>(null);\r\n\tconst ThrottleTimeOut = useRef<NodeJS.Timeout | null>(null);\r\n\r\n\t/**\r\n\t * ==========================函数==============================\r\n\t */\r\n\r\n\tconst Throttle = function (_func: () => void, _time: number) {\r\n\t\tif (typeof _time === \"undefined\") {\r\n\t\t\t_time = 500;\r\n\t\t}\r\n\t\tif (_time === 0) {\r\n\t\t\t_func();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tThrottleFunction.current = _func;\r\n\t\tif (ThrottleTimeOut.current === null) {\r\n\t\t\tThrottleTimeOut.current = setTimeout(function () {\r\n\t\t\t\tif (ThrottleFunction.current !== null) {\r\n\t\t\t\t\tThrottleFunction.current!();\r\n\t\t\t\t\tThrottleFunction.current = null;\r\n\t\t\t\t\tThrottleTimeOut.current = null;\r\n\t\t\t\t}\r\n\t\t\t}, _time);\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * ==================================Effects===============================\r\n\t */\r\n\tuseEffect(function (): ReturnType<React.EffectCallback> {\r\n\t\tif (isMounted === false) {\r\n\t\t\tsetIsMounted(true);\r\n\t\t}\r\n\t\treturn function (): void {\r\n\t\t\tsetIsMounted(false);\r\n\t\t};\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, []);\r\n\r\n\treturn Throttle;\r\n};\r\n\r\nexport default useThrottle;\r\n","import { IPixiShapeRectangle } from \"../interface/basicShapesInterFace\";\r\nimport { ITooltipConfig, Iaxis, IdataConfig, IuseCandleView, Tlanguage } from \"../interface/configInterFaces\";\r\nimport { IToolTipItem, tickItem } from \"../interface/itemsInterFace\";\r\nimport { formatDate, getUnitNumber } from \"./consts\";\r\nimport * as PIXI from \"pixi.js\";\r\n\r\n/**\r\n *tooltip的初始值\r\n */\r\nexport const DEFAULTTOOLTIPVALUES: ITooltipConfig = {\r\n\tenabled: true,\r\n\tcolor: \"#02121c\",\r\n\tlineSize: 0.5,\r\n\tdashLength: 4,\r\n\tspaceLength: 3,\r\n\tlabel: {\r\n\t\tfontsize: 12,\r\n\t\tcolor: \"#ffffff\",\r\n\t\tbackGroundColor: \"#454545\",\r\n\t\tbackGroundAlpha: 1,\r\n\t\tformatter: function (axisItem: tickItem | IToolTipItem) {\r\n\t\t\t//yyyy-MM-dd HH:mm:ss\r\n\t\t\treturn formatDate(new Date(axisItem.value), \"yyyy-MM-dd HH:mm:ss\");\r\n\t\t},\r\n\t},\r\n};\r\n\r\n/**\r\n *轴组件的初始值\r\n */\r\nexport const DEFAULTAXISVALUES: Iaxis = {\r\n\tlabelSpace: \"90px\",\r\n\tfontColor: \"#454545\",\r\n\tfontSize: \"12px\",\r\n\tnetLineColor: \"#dedede\",\r\n\tlineColor: \"#454545\",\r\n\ttickColor: \"#454545\",\r\n\ttickLength: \"3px\",\r\n\tnetLineMaxCount: 34,\r\n\tnetLineMinCount: 3,\r\n\tnetLineSize: 1,\r\n\tlineSize: 1,\r\n\ttickSize: 1,\r\n\tbackgroundColor: \"#ffffff\",\r\n\ttooltip: DEFAULTTOOLTIPVALUES,\r\n\tinitTimePoint: \"now\",\r\n\tdisplayPadding: 0.1,\r\n};\r\n\r\n/**\r\n *数据组件的初始值\r\n */\r\nexport const DEFAULTDATAVALUES: IdataConfig = {\r\n\tstaticData: [],\r\n\tdynamicData: {\r\n\t\tenabled: false,\r\n\t\tshowLoading: false,\r\n\t\tstopUserOperateWhenLoading: false,\r\n\t\tdataFetchCountPreTime: 160,\r\n\t\tdataFetchCallback: async function (time, start, end) {\r\n\t\t\treturn [];\r\n\t\t},\r\n\t},\r\n\tcandleStyles: {\r\n\t\tcandleWidth: \"80%\",\r\n\t\twickWidth: \"1px\",\r\n\t\tcandleRiseColor: \"#7de17c\",\r\n\t\tcandleFallColor: \"#c85656\",\r\n\t\twickRiseColor: \"#7de17c\",\r\n\t\twickFallColor: \"#c85656\",\r\n\t\t//当前最末尾价格的tooltip设置\r\n\t\tcurrentPriceTooltip: {\r\n\t\t\tenabled: true,\r\n\t\t\tcolor: \"#b9b42c\",\r\n\t\t\tlineSize: 0.5,\r\n\t\t\tdashLength: 8,\r\n\t\t\tspaceLength: 3,\r\n\t\t\tlabel: {\r\n\t\t\t\tfontsize: 12,\r\n\t\t\t\tcolor: \"#ffffff\",\r\n\t\t\t\tbackGroundColor: \"#b9b42c\",\r\n\t\t\t\tbackGroundAlpha: 1,\r\n\t\t\t\tformatter: function (axisItem: tickItem | IToolTipItem) {\r\n\t\t\t\t\taxisItem = axisItem as IToolTipItem;\r\n\t\t\t\t\t//yyyy-MM-dd HH:mm:ss\r\n\t\t\t\t\treturn axisItem.displayValue!;\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\t//当前显示范围的最末尾的tooltip设置\r\n\t\tviewLastPriceTooltip: {\r\n\t\t\tenabled: true,\r\n\t\t\tcolor: \"#b9b42c\",\r\n\t\t\tlineSize: 0.5,\r\n\t\t\tdashLength: 8,\r\n\t\t\tspaceLength: 3,\r\n\t\t\tlabel: {\r\n\t\t\t\tfontsize: 12,\r\n\t\t\t\tcolor: \"#ffffff\",\r\n\t\t\t\tbackGroundColor: \"#826abe\",\r\n\t\t\t\tbackGroundAlpha: 0.5,\r\n\t\t\t\tformatter: function (axisItem: tickItem | IToolTipItem) {\r\n\t\t\t\t\taxisItem = axisItem as IToolTipItem;\r\n\t\t\t\t\t//yyyy-MM-dd HH:mm:ss\r\n\t\t\t\t\treturn axisItem.displayValue!;\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\t/**\r\n\t\t *交易量\r\n\t\t */\r\n\t\tvolumChart: {\r\n\t\t\t/**\r\n\t\t\t *是否显示交易量\r\n\t\t\t */\r\n\t\t\tenabled: true,\r\n\r\n\t\t\t/**\r\n\t\t\t *交易量图表高度\r\n\t\t\t */\r\n\t\t\tvolumeChartHeight: \"30%\",\r\n\r\n\t\t\t/**\r\n\t\t\t *交易量图表透明度\r\n\t\t\t */\r\n\t\t\talpha: 0.6,\r\n\t\t\t/**\r\n\t\t\t *上升时显示的颜色\r\n\t\t\t */\r\n\t\t\triseColor: \"#d6dfc5\",\r\n\t\t\t/**\r\n\t\t\t *下降时显示的颜色\r\n\t\t\t */\r\n\t\t\tfallColor: \"#c7c7c7\",\r\n\r\n\t\t\t//当前最末尾价格的tooltip设置\r\n\t\t\tcurrentPriceTooltip: {\r\n\t\t\t\tenabled: true,\r\n\t\t\t\tcolor: \"#b9b42c\",\r\n\t\t\t\tlineSize: 0.5,\r\n\t\t\t\tdashLength: 8,\r\n\t\t\t\tspaceLength: 3,\r\n\t\t\t\tlabel: {\r\n\t\t\t\t\tfontsize: 12,\r\n\t\t\t\t\tcolor: \"#ffffff\",\r\n\t\t\t\t\tbackGroundColor: \"#b9b42c\",\r\n\t\t\t\t\tbackGroundAlpha: 1,\r\n\t\t\t\t\tformatter: function (axisItem: tickItem | IToolTipItem, language: Tlanguage = \"en\") {\r\n\t\t\t\t\t\taxisItem = axisItem as IToolTipItem;\r\n\t\t\t\t\t\t//yyyy-MM-dd HH:mm:ss\r\n\t\t\t\t\t\treturn getUnitNumber(Number(axisItem.displayValue), language, 5);\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t//当前显示范围的最末尾的tooltip设置\r\n\t\t\tviewLastPriceTooltip: {\r\n\t\t\t\tenabled: true,\r\n\t\t\t\tcolor: \"#b9b42c\",\r\n\t\t\t\tlineSize: 0.5,\r\n\t\t\t\tdashLength: 8,\r\n\t\t\t\tspaceLength: 3,\r\n\t\t\t\tlabel: {\r\n\t\t\t\t\tfontsize: 12,\r\n\t\t\t\t\tcolor: \"#ffffff\",\r\n\t\t\t\t\tbackGroundColor: \"#826abe\",\r\n\t\t\t\t\tbackGroundAlpha: 0.5,\r\n\t\t\t\t\tformatter: function (axisItem: tickItem | IToolTipItem, language: Tlanguage = \"en\") {\r\n\t\t\t\t\t\taxisItem = axisItem as IToolTipItem;\r\n\t\t\t\t\t\t//yyyy-MM-dd HH:mm:ss\r\n\t\t\t\t\t\treturn getUnitNumber(Number(axisItem.displayValue), language, 5);\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n};\r\n\r\n/**\r\n *组件的初始值\r\n 初始值的定义和注释和可以去参看接口定义\r\n */\r\nexport const DEFAULTVALUES: IuseCandleView = {\r\n\ttitle: \"交易对:🚀BNB/USDT🚀这是CandleView组件示例V2⚡闪电版⚡\",\r\n\tenableTitle: true,\r\n\tenableinfo: true,\r\n\ttimeFormat: \"1h\",\r\n\twidth: \"auto\",\r\n\theight: \"500px\",\r\n\tbackgroundColor: \"#fff\",\r\n\tresizeDebounceTime: 100,\r\n\tlanguage: \"zh\",\r\n\ttimeZone: {\r\n\t\tdataSourceTimeZone: 0,\r\n\t\tfetchConditionTimeZone: 0,\r\n\t\tdisplayTimeZone: 0,\r\n\t},\r\n\tyAxis: {\r\n\t\tlabelSpace: \"90px\",\r\n\t\tformatter: function (axisItem: tickItem) {\r\n\t\t\treturn axisItem.displayValue!.toString();\r\n\t\t},\r\n\t\tfontColor: \"#454545\",\r\n\t\tfontSize: \"12px\",\r\n\t\tnetLineColor: \"#dedede\",\r\n\t\tlineColor: \"#454545\",\r\n\t\ttickColor: \"#454545\",\r\n\t\ttickLength: \"3px\",\r\n\t\tnetLineMaxCount: 14,\r\n\t\tnetLineMinCount: 3,\r\n\t\tdisplayPadding: 0.3,\r\n\t\ttooltip: {\r\n\t\t\tenabled: true,\r\n\t\t\tcolor: \"#02121c\",\r\n\t\t\tlineSize: 0.5,\r\n\t\t\tdashLength: 4,\r\n\t\t\tspaceLength: 3,\r\n\t\t\tlabel: {\r\n\t\t\t\tfontsize: 12,\r\n\t\t\t\tcolor: \"#ffffff\",\r\n\t\t\t\tbackGroundColor: \"#454545\",\r\n\t\t\t\tbackGroundAlpha: 1,\r\n\t\t\t\tformatter: function (axisItem: tickItem | IToolTipItem) {\r\n\t\t\t\t\taxisItem = axisItem as IToolTipItem;\r\n\t\t\t\t\t//yyyy-MM-dd HH:mm:ss\r\n\t\t\t\t\treturn axisItem.displayValue!;\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\txAxis: {\r\n\t\tlabelSpace: \"30px\",\r\n\t\tfontColor: \"#454545\",\r\n\t\tfontSize: \"12px\",\r\n\t\tnetLineColor: \"#dedede\",\r\n\t\tlineColor: \"#454545\",\r\n\t\ttickColor: \"#454545\",\r\n\t\ttickLength: \"4px\",\r\n\t\tnetLineMaxCount: 30,\r\n\t\tnetLineMinCount: 0,\r\n\t\tnetLineSize: 0.5,\r\n\t\tinitTimePoint: \"now\",\r\n\t\tdisplayPadding: 0,\r\n\t\ttooltip: {\r\n\t\t\tenabled: true,\r\n\t\t\tcolor: \"#02121c\",\r\n\t\t\tlineSize: 0.5,\r\n\t\t\tdashLength: 4,\r\n\t\t\tspaceLength: 3,\r\n\t\t\tlabel: {\r\n\t\t\t\tfontsize: 12,\r\n\t\t\t\tcolor: \"#ffffff\",\r\n\t\t\t\tbackGroundColor: \"#454545\",\r\n\t\t\t\tbackGroundAlpha: 1,\r\n\t\t\t\tformatter: function (axisItem: tickItem | IToolTipItem) {\r\n\t\t\t\t\t//yyyy-MM-dd HH:mm:ss\r\n\t\t\t\t\treturn formatDate(new Date(axisItem.value), \"yyyy-MM-dd HH:mm:ss\");\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tdata: DEFAULTDATAVALUES,\r\n};\r\n","export const LANGUAGES: any = {\r\n\tzh: {\r\n\t\ttimeFormat: {\r\n\t\t\ttoday: \"今天\",\r\n\t\t\tyesterday: \"昨天\",\r\n\t\t\tunitsecond: \"秒\",\r\n\t\t\tunitminute: \"分\",\r\n\t\t\tunithour: \"点\",\r\n\t\t\tunithalfOur: \"点半\",\r\n\t\t\tunitoclock: \"点整\",\r\n\t\t\tunitday: \"号\",\r\n\t\t\tunitdayst: \"号\",\r\n\t\t\tunitdaynd: \"号\",\r\n\t\t\tunitdayrd: \"号\",\r\n\t\t\tthisMonth: \"这个月\",\r\n\t\t\tnextMonth: \"上个月\",\r\n\t\t\tJanuary: \"一月份\",\r\n\t\t\tFebruary: \"二月份\",\r\n\t\t\tMarch: \"三月份\",\r\n\t\t\tApril: \"四月份\",\r\n\t\t\tMay: \"五月份\",\r\n\t\t\tJune: \"六月份\",\r\n\t\t\tJuly: \"七月份\",\r\n\t\t\tAugust: \"八月份\",\r\n\t\t\tSeptember: \"九月份\",\r\n\t\t\tOctober: \"十月份\",\r\n\t\t\tNovember: \"十一月份\",\r\n\t\t\tDecember: \"十二月份\",\r\n\t\t\tyear: \"年\",\r\n\t\t\tthisyear: \"今年\",\r\n\t\t\tlastyear: \"去年\",\r\n\t\t\toneMin: \"1分钟\",\r\n\t\t\ttwoMin: \"2分钟\",\r\n\t\t\tthreeMin: \"3分钟\",\r\n\t\t\tfiveMin: \"5分钟\",\r\n\t\t\ttenMin: \"10分钟\",\r\n\t\t\tfifteenMin: \"15分钟\",\r\n\t\t\thalfhour: \"半小时\",\r\n\t\t\toneHour: \"1小时\",\r\n\t\t\toneday: \"1天\",\r\n\t\t\toneWeek: \"1周\",\r\n\t\t\tonemonth: \"1个月\",\r\n\t\t\toneYear: \"1年\",\r\n\t\t},\r\n\t},\r\n\ten: {\r\n\t\ttimeFormat: {\r\n\t\t\ttoday: \"Today\",\r\n\t\t\tyesterday: \"Yesterday\",\r\n\t\t\tunitsecond: \"sec\",\r\n\t\t\tunitminute: \"min\",\r\n\t\t\tunithour: \"\",\r\n\t\t\tunithalfOur: \" O'clock past half\",\r\n\t\t\tunitoclock: \" O'clock\",\r\n\t\t\tunitday: \"th\",\r\n\t\t\tunitdayst: \"st\",\r\n\t\t\tunitdaynd: \"nd\",\r\n\t\t\tunitdayrd: \"rd\",\r\n\t\t\tthisMonth: \"This month\",\r\n\t\t\tnextMonth: \"Last month\",\r\n\t\t\tJanuary: \"Jan\",\r\n\t\t\tFebruary: \"Feb\",\r\n\t\t\tMarch: \"Mar\",\r\n\t\t\tApril: \"Apr\",\r\n\t\t\tMay: \"May\",\r\n\t\t\tJune: \"Jun\",\r\n\t\t\tJuly: \"Jul\",\r\n\t\t\tAugust: \"Aug\",\r\n\t\t\tSeptember: \"Sep\",\r\n\t\t\tOctober: \"Oct\",\r\n\t\t\tNovember: \"Nov\",\r\n\t\t\tDecember: \"Dec\",\r\n\t\t\tyear: \"\",\r\n\t\t\tthisyear: \"This year\",\r\n\t\t\tlastyear: \"Last year\",\r\n\t\t\toneMin: \"1 Minute\",\r\n\t\t\ttwoMin: \"2 Minute\",\r\n\t\t\tthreeMin: \"3 Minute\",\r\n\t\t\tfiveMin: \"5 Minute\",\r\n\t\t\ttenMin: \"10 Minute\",\r\n\t\t\tfifteenMin: \"15 Minute\",\r\n\t\t\thalfhour: \"Half Hour\",\r\n\t\t\toneHour: \"One Hour\",\r\n\t\t\toneday: \"One Day\",\r\n\t\t\toneWeek: \"One Week\",\r\n\t\t\tonemonth: \"One Month\",\r\n\t\t\toneYear: \"One Year\",\r\n\t\t},\r\n\t},\r\n};\r\n","import { findRoundTimeCountFromArrayDataItem, jsonObjectType } from \"../interface/itemsInterFace\";\r\nimport { ItimeFormat, TtimeType } from \"../interface/timeDefineInterFace\";\r\nimport { binarySearchByKeyStrictlyEqual, countSelectedElements } from \"./consts\";\r\nimport { LANGUAGES } from \"./languages\";\r\n\r\nexport const getshifttime = function (hourShift?: number | \"local\") {\r\n\tif (typeof hourShift === \"undefined\" || hourShift === 0) {\r\n\t\treturn 0;\r\n\t}\r\n\tlet date = new Date();\r\n\tlet localtimeZone = Math.abs(date.getTimezoneOffset() / 60);\r\n\tif (hourShift === \"local\") {\r\n\t\thourShift = localtimeZone;\r\n\t}\r\n\treturn 1000 * 60 * 60 * hourShift;\r\n};\r\n\r\n/**\r\n *1分钟\r\n */\r\nexport const ONEMIN: ItimeFormat = {\r\n\tname: \"1min\",\r\n\tlang: \"oneMin\",\r\n\ttimeGap: 1000 * 60,\r\n\t/* 取整 */\r\n\troundingFunction: function (timeStamp, hourShift) {\r\n\t\t// 获取当前时间\r\n\t\tconst now = new Date(timeStamp);\r\n\t\t// 求整\r\n\t\tnow.setSeconds(0);\r\n\t\tnow.setMilliseconds(0);\r\n\t\t// 获取当前整小时的时间戳（毫秒）\r\n\t\tlet result = now.getTime();\r\n\t\treturn result;\r\n\t},\r\n\t/* 往未来查找一个单位 */\r\n\tforwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 加15分钟\r\n\t\tdate.setMinutes(date.getMinutes() + 1);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往过去查找一个单位 */\r\n\tbackwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\t\t// 减15分钟\r\n\t\tdate.setMinutes(date.getMinutes() - 1);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往未来查找n个单位 */\r\n\tforwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 加15分钟\r\n\t\tdate.setMinutes(date.getMinutes() + 1 * times);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往过去查找n个单位 */\r\n\tbackwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\t\t// 减15分钟\r\n\t\tdate.setMinutes(date.getMinutes() - 1 * times);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\r\n\t/* 获得初始化的时间范围 */\r\n\tgetInitTimeScope: function (initTime: string) {\r\n\t\tif (initTime === \"now\") {\r\n\t\t\treturn { start: +new Date() - 1000 * 60 * 20, end: +new Date() + 1000 * 60 * 10 };\r\n\t\t} else {\r\n\t\t\treturn { start: +new Date(initTime) - 1000 * 60 * 20, end: +new Date(initTime) + 1000 * 60 * 10 };\r\n\t\t}\r\n\t},\r\n\tformatter: function (value, lan, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(value);\r\n\t\t//date.setHours(date.getHours() + plusTimeArea);\r\n\r\n\t\treturn date.getMinutes() + LANGUAGES[lan]!.timeFormat.unitminute;\r\n\t},\r\n};\r\n\r\n/**\r\n *2分钟\r\n */\r\nexport const TWO: ItimeFormat = {\r\n\tname: \"2min\",\r\n\tlang: \"twoMin\",\r\n\ttimeGap: 1000 * 60 * 2,\r\n\t/* 取整 */\r\n\troundingFunction: function (timeStamp, hourShift) {\r\n\t\t// 获取当前时间\r\n\t\tconst now = new Date(timeStamp);\r\n\r\n\t\tfor (let time = 0; time < 60; time += 2) {\r\n\t\t\tif (now.getMinutes() >= time) {\r\n\t\t\t\tnow.setMinutes(time);\r\n\t\t\t}\r\n\t\t}\r\n\t\tnow.setSeconds(0);\r\n\t\tnow.setMilliseconds(0);\r\n\t\t// 获取当前整小时的时间戳（毫秒）\r\n\t\tlet result = now.getTime();\r\n\t\treturn result;\r\n\t},\r\n\t/* 往未来查找一个单位 */\r\n\tforwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 加15分钟\r\n\t\tdate.setMinutes(date.getMinutes() + 2);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往过去查找一个单位 */\r\n\tbackwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\t\t// 减15分钟\r\n\t\tdate.setMinutes(date.getMinutes() - 2);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往未来查找n个单位 */\r\n\tforwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 加15分钟\r\n\t\tdate.setMinutes(date.getMinutes() + 2 * times);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往过去查找n个单位 */\r\n\tbackwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\t\t// 减15分钟\r\n\t\tdate.setMinutes(date.getMinutes() - 2 * times);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\r\n\t/* 获得初始化的时间范围 */\r\n\tgetInitTimeScope: function (initTime: string) {\r\n\t\tif (initTime === \"now\") {\r\n\t\t\treturn { start: +new Date() - 1000 * 60 * 2 * 2, end: +new Date() + 1000 * 60 * 10 * 2 };\r\n\t\t} else {\r\n\t\t\treturn { start: +new Date(initTime) - 1000 * 60 * 20 * 2, end: +new Date(initTime) + 1000 * 60 * 10 * 2 };\r\n\t\t}\r\n\t},\r\n\tformatter: function (value, lan, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(value);\r\n\t\t//date.setHours(date.getHours() + plusTimeArea);\r\n\r\n\t\treturn date.getMinutes() + LANGUAGES[lan]!.timeFormat.unitminute;\r\n\t},\r\n};\r\n\r\n/**\r\n *3分钟\r\n */\r\nexport const THREE: ItimeFormat = {\r\n\tname: \"3min\",\r\n\tlang: \"threeMin\",\r\n\ttimeGap: 1000 * 60 * 3,\r\n\t/* 取整 */\r\n\troundingFunction: function (timeStamp, hourShift) {\r\n\t\t// 获取当前时间\r\n\t\tconst now = new Date(timeStamp);\r\n\r\n\t\tfor (let time = 0; time < 60; time += 3) {\r\n\t\t\tif (now.getMinutes() >= time) {\r\n\t\t\t\tnow.setMinutes(time);\r\n\t\t\t}\r\n\t\t}\r\n\t\tnow.setSeconds(0);\r\n\t\tnow.setMilliseconds(0);\r\n\t\t// 获取当前整小时的时间戳（毫秒）\r\n\t\tlet result = now.getTime();\r\n\t\treturn result;\r\n\t},\r\n\t/* 往未来查找一个单位 */\r\n\tforwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 加15分钟\r\n\t\tdate.setMinutes(date.getMinutes() + 3);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往过去查找一个单位 */\r\n\tbackwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\t\t// 减15分钟\r\n\t\tdate.setMinutes(date.getMinutes() - 3);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往未来查找n个单位 */\r\n\tforwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 加15分钟\r\n\t\tdate.setMinutes(date.getMinutes() + 3 * times);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往过去查找n个单位 */\r\n\tbackwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\t\t// 减15分钟\r\n\t\tdate.setMinutes(date.getMinutes() - 3 * times);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\r\n\t/* 获得初始化的时间范围 */\r\n\tgetInitTimeScope: function (initTime: string) {\r\n\t\tif (initTime === \"now\") {\r\n\t\t\treturn { start: +new Date() - 1000 * 60 * 2 * 3, end: +new Date() + 1000 * 60 * 10 * 3 };\r\n\t\t} else {\r\n\t\t\treturn { start: +new Date(initTime) - 1000 * 60 * 20 * 3, end: +new Date(initTime) + 1000 * 60 * 10 * 3 };\r\n\t\t}\r\n\t},\r\n\tformatter: function (value, lan, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(value);\r\n\t\t//date.setHours(date.getHours() + plusTimeArea);\r\n\r\n\t\treturn date.getMinutes() + LANGUAGES[lan]!.timeFormat.unitminute;\r\n\t},\r\n};\r\n\r\n/**\r\n *5分钟\r\n */\r\nexport const FMIN: ItimeFormat = {\r\n\tname: \"5min\",\r\n\tlang: \"fiveMin\",\r\n\ttimeGap: 1000 * 60 * 5,\r\n\t/* 取整 */\r\n\troundingFunction: function (timeStamp, hourShift) {\r\n\t\t// 获取当前时间\r\n\t\tconst now = new Date(timeStamp);\r\n\t\t// 求整\r\n\t\tif (now.getMinutes() >= 55) {\r\n\t\t\tnow.setMinutes(55);\r\n\t\t} else if (now.getMinutes() >= 50) {\r\n\t\t\tnow.setMinutes(50);\r\n\t\t} else if (now.getMinutes() >= 45) {\r\n\t\t\tnow.setMinutes(45);\r\n\t\t} else if (now.getMinutes() >= 40) {\r\n\t\t\tnow.setMinutes(40);\r\n\t\t} else if (now.getMinutes() >= 35) {\r\n\t\t\tnow.setMinutes(35);\r\n\t\t} else if (now.getMinutes() >= 30) {\r\n\t\t\tnow.setMinutes(30);\r\n\t\t} else if (now.getMinutes() >= 25) {\r\n\t\t\tnow.setMinutes(25);\r\n\t\t} else if (now.getMinutes() >= 20) {\r\n\t\t\tnow.setMinutes(20);\r\n\t\t} else if (now.getMinutes() >= 15) {\r\n\t\t\tnow.setMinutes(15);\r\n\t\t} else if (now.getMinutes() >= 10) {\r\n\t\t\tnow.setMinutes(10);\r\n\t\t} else if (now.getMinutes() >= 5) {\r\n\t\t\tnow.setMinutes(5);\r\n\t\t} else if (now.getMinutes() >= 0) {\r\n\t\t\tnow.setMinutes(0);\r\n\t\t}\r\n\t\tnow.setSeconds(0);\r\n\t\tnow.setMilliseconds(0);\r\n\t\t// 获取当前整小时的时间戳（毫秒）\r\n\t\tlet result = now.getTime();\r\n\t\treturn result;\r\n\t},\r\n\t/* 往未来查找一个单位 */\r\n\tforwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 加15分钟\r\n\t\tdate.setMinutes(date.getMinutes() + 5);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往过去查找一个单位 */\r\n\tbackwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\t\t// 减15分钟\r\n\t\tdate.setMinutes(date.getMinutes() - 5);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往未来查找n个单位 */\r\n\tforwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 加15分钟\r\n\t\tdate.setMinutes(date.getMinutes() + 5 * times);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往过去查找n个单位 */\r\n\tbackwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\t\t// 减15分钟\r\n\t\tdate.setMinutes(date.getMinutes() - 5 * times);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\r\n\t/* 获得初始化的时间范围 */\r\n\tgetInitTimeScope: function (initTime: string) {\r\n\t\tif (initTime === \"now\") {\r\n\t\t\treturn { start: +new Date() - 1000 * 60 * 2 * 5, end: +new Date() + 1000 * 60 * 10 * 5 };\r\n\t\t} else {\r\n\t\t\treturn { start: +new Date(initTime) - 1000 * 60 * 20 * 5, end: +new Date(initTime) + 1000 * 60 * 10 * 5 };\r\n\t\t}\r\n\t},\r\n\tformatter: function (value, lan, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(value);\r\n\t\t//date.setHours(date.getHours() + plusTimeArea);\r\n\r\n\t\treturn date.getMinutes() + LANGUAGES[lan]!.timeFormat.unitminute;\r\n\t},\r\n};\r\n\r\n/**\r\n *10分钟\r\n */\r\nexport const TENMIN: ItimeFormat = {\r\n\tname: \"10min\",\r\n\tlang: \"tenMin\",\r\n\ttimeGap: 1000 * 60 * 10,\r\n\t/* 取整 */\r\n\troundingFunction: function (timeStamp, hourShift) {\r\n\t\t// 获取当前时间\r\n\t\tconst now = new Date(timeStamp);\r\n\t\t// 求整\r\n\t\tif (now.getMinutes() >= 50) {\r\n\t\t\tnow.setMinutes(50);\r\n\t\t} else if (now.getMinutes() >= 40) {\r\n\t\t\tnow.setMinutes(40);\r\n\t\t} else if (now.getMinutes() >= 30) {\r\n\t\t\tnow.setMinutes(30);\r\n\t\t} else if (now.getMinutes() >= 20) {\r\n\t\t\tnow.setMinutes(20);\r\n\t\t} else if (now.getMinutes() >= 10) {\r\n\t\t\tnow.setMinutes(10);\r\n\t\t} else if (now.getMinutes() >= 0) {\r\n\t\t\tnow.setMinutes(0);\r\n\t\t}\r\n\t\tnow.setSeconds(0);\r\n\t\tnow.setMilliseconds(0);\r\n\t\t// 获取当前整小时的时间戳（毫秒）\r\n\t\tlet result = now.getTime();\r\n\t\treturn result;\r\n\t},\r\n\t/* 往未来查找一个单位 */\r\n\tforwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 加15分钟\r\n\t\tdate.setMinutes(date.getMinutes() + 10);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往过去查找一个单位 */\r\n\tbackwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\t\t// 减15分钟\r\n\t\tdate.setMinutes(date.getMinutes() - 10);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往未来查找n个单位 */\r\n\tforwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 加15分钟\r\n\t\tdate.setMinutes(date.getMinutes() + 10 * times);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往过去查找n个单位 */\r\n\tbackwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\t\t// 减15分钟\r\n\t\tdate.setMinutes(date.getMinutes() - 10 * times);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\r\n\t/* 获得初始化的时间范围 */\r\n\tgetInitTimeScope: function (initTime: string) {\r\n\t\tif (initTime === \"now\") {\r\n\t\t\treturn { start: +new Date() - 1000 * 60 * 2 * 10, end: +new Date() + 1000 * 60 * 10 * 10 };\r\n\t\t} else {\r\n\t\t\treturn { start: +new Date(initTime) - 1000 * 60 * 20 * 10, end: +new Date(initTime) + 1000 * 60 * 10 * 10 };\r\n\t\t}\r\n\t},\r\n\tformatter: function (value, lan, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(value);\r\n\t\t//date.setHours(date.getHours() + plusTimeArea);\r\n\r\n\t\treturn date.getMinutes() + LANGUAGES[lan]!.timeFormat.unitminute;\r\n\t},\r\n};\r\n\r\n/**\r\n *15分钟\r\n */\r\nexport const FIFMIN: ItimeFormat = {\r\n\tname: \"15min\",\r\n\tlang: \"fifteenMin\",\r\n\ttimeGap: 1000 * 60 * 15,\r\n\t/* 取整 */\r\n\troundingFunction: function (timeStamp, hourShift) {\r\n\t\t// 获取当前时间\r\n\t\tconst now = new Date(timeStamp);\r\n\t\t// 求整\r\n\t\tif (now.getMinutes() >= 45) {\r\n\t\t\tnow.setMinutes(45);\r\n\t\t} else if (now.getMinutes() >= 30) {\r\n\t\t\tnow.setMinutes(30);\r\n\t\t} else if (now.getMinutes() >= 15) {\r\n\t\t\tnow.setMinutes(15);\r\n\t\t} else if (now.getMinutes() >= 0) {\r\n\t\t\tnow.setMinutes(0);\r\n\t\t}\r\n\t\tnow.setSeconds(0);\r\n\t\tnow.setMilliseconds(0);\r\n\t\t// 获取当前整小时的时间戳（毫秒）\r\n\t\tlet result = now.getTime();\r\n\t\treturn result;\r\n\t},\r\n\t/* 往未来查找一个单位 */\r\n\tforwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 加15分钟\r\n\t\tdate.setMinutes(date.getMinutes() + 15);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往过去查找一个单位 */\r\n\tbackwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\t\t// 减15分钟\r\n\t\tdate.setMinutes(date.getMinutes() - 15);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往未来查找n个单位 */\r\n\tforwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 加15分钟\r\n\t\tdate.setMinutes(date.getMinutes() + 15 * times);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往过去查找n个单位 */\r\n\tbackwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\t\t// 减15分钟\r\n\t\tdate.setMinutes(date.getMinutes() - 15 * times);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 获得初始化的时间范围 */\r\n\tgetInitTimeScope: function (initTime: string) {\r\n\t\tif (initTime === \"now\") {\r\n\t\t\treturn { start: +new Date() - 1000 * 60 * 15 * 18, end: +new Date() + 1000 * 60 * 15 * 6 };\r\n\t\t} else {\r\n\t\t\treturn { start: +new Date(initTime) - 1000 * 60 * 15 * 18, end: +new Date(initTime) + 1000 * 60 * 15 * 6 };\r\n\t\t}\r\n\t},\r\n\tformatter: function (value, lan, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(value);\r\n\t\t//date.setHours(date.getHours() + plusTimeArea);\r\n\r\n\t\treturn date.getMinutes() + LANGUAGES[lan]!.timeFormat.unitminute;\r\n\t},\r\n};\r\n\r\n/**\r\n *30分钟\r\n */\r\nexport const HALFHOUR: ItimeFormat = {\r\n\tname: \"30min\",\r\n\tlang: \"halfhour\",\r\n\ttimeGap: 1000 * 60 * 30,\r\n\t/* 取整 */\r\n\troundingFunction: function (timeStamp, hourShift) {\r\n\t\t// 获取当前时间\r\n\t\tconst now = new Date(timeStamp);\r\n\t\t// 设置分钟和秒数为0\r\n\t\tif (now.getMinutes() > 30) {\r\n\t\t\tnow.setMinutes(30);\r\n\t\t} else {\r\n\t\t\tnow.setMinutes(0);\r\n\t\t}\r\n\t\tnow.setSeconds(0);\r\n\t\tnow.setMilliseconds(0);\r\n\t\t// 获取当前整小时的时间戳（毫秒）\r\n\t\tlet result = now.getTime();\r\n\t\treturn result;\r\n\t},\r\n\t/* 往未来查找一个单位 */\r\n\tforwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 加半小时\r\n\t\tdate.setMinutes(date.getMinutes() + 30);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往过去查找一个单位 */\r\n\tbackwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\t\t// 减半小时\r\n\t\tdate.setMinutes(date.getMinutes() - 30);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往未来查找n个单位 */\r\n\tforwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 加半小时\r\n\t\tdate.setMinutes(date.getMinutes() + 30 * times);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往过去查找n个单位 */\r\n\tbackwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\t\t// 减半小时\r\n\t\tdate.setMinutes(date.getMinutes() - 30 * times);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 获得初始化的时间范围 */\r\n\tgetInitTimeScope: function (initTime: string) {\r\n\t\tif (initTime === \"now\") {\r\n\t\t\treturn { start: +new Date() - 1000 * 60 * 30 * 18, end: +new Date() + 1000 * 60 * 30 * 6 };\r\n\t\t} else {\r\n\t\t\treturn { start: +new Date(initTime) - 1000 * 60 * 30 * 18, end: +new Date(initTime) + 1000 * 60 * 30 * 6 };\r\n\t\t}\r\n\t},\r\n\tformatter: function (value, lan, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(value);\r\n\t\t//date.setHours(date.getHours() + plusTimeArea);\r\n\r\n\t\tif (date.getMinutes() === 30) {\r\n\t\t\treturn date.getHours() + LANGUAGES[lan]!.timeFormat.unithalfOur;\r\n\t\t}\r\n\r\n\t\treturn date.getHours() + LANGUAGES[lan]!.timeFormat.unitoclock;\r\n\t},\r\n};\r\n\r\n/**\r\n *x小时\r\n */\r\nexport const HOUR: ItimeFormat = {\r\n\tname: \"1h\",\r\n\tlang: \"oneHour\",\r\n\ttimeGap: 1000 * 60 * 60,\r\n\t/* 取整 */\r\n\troundingFunction: function (timeStamp, hourShift) {\r\n\t\t// 获取当前时间\r\n\t\tconst now = new Date(timeStamp);\r\n\r\n\t\t// 设置分钟和秒数为0\r\n\t\tnow.setMinutes(0);\r\n\t\tnow.setSeconds(0);\r\n\t\tnow.setMilliseconds(0);\r\n\t\t// 获取当前整小时的时间戳（毫秒）\r\n\t\tlet result = now.getTime();\r\n\t\treturn result;\r\n\t},\r\n\t/* 往未来查找一个单位 */\r\n\tforwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\t\t// 减去一个小时的毫秒数\r\n\t\tdate.setHours(date.getHours() + 1);\r\n\r\n\t\t// 设置分钟和秒数为0\r\n\t\tdate.setMinutes(0);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往过去查找一个单位 */\r\n\tbackwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\t\t// 减去一个小时的毫秒数\r\n\t\tdate.setHours(date.getHours() - 1);\r\n\r\n\t\t// 设置分钟和秒数为0\r\n\t\tdate.setMinutes(0);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往未来查找n个单位 */\r\n\tforwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\t\t// 减去一个小时的毫秒数\r\n\t\tdate.setHours(date.getHours() + 1 * times);\r\n\r\n\t\t// 设置分钟和秒数为0\r\n\t\tdate.setMinutes(0);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 往过去查找n个单位 */\r\n\tbackwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(timeStamp);\r\n\t\t// 减去一个小时的毫秒数\r\n\t\tdate.setHours(date.getHours() - 1 * times);\r\n\r\n\t\t// 设置分钟和秒数为0\r\n\t\tdate.setMinutes(0);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 返回上一个小时的时间戳（毫秒）\r\n\t\treturn date.getTime();\r\n\t},\r\n\t/* 获得初始化的时间范围 */\r\n\tgetInitTimeScope: function (initTime: string) {\r\n\t\tif (initTime === \"now\") {\r\n\t\t\treturn { start: +new Date() - 1000 * 60 * 60 * 18, end: +new Date() + 1000 * 60 * 60 * 6 };\r\n\t\t} else {\r\n\t\t\treturn { start: +new Date(initTime) - 1000 * 60 * 60 * 18, end: +new Date(initTime) + 1000 * 60 * 60 * 6 };\r\n\t\t}\r\n\t},\r\n\tformatter: function (value, lan, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(value);\r\n\t\t//date.setHours(date.getHours() + plusTimeArea);\r\n\r\n\t\treturn date.getHours() + LANGUAGES[lan]!.timeFormat.unithour;\r\n\t},\r\n};\r\n\r\n/**\r\n *天\r\n */\r\nexport const DAY: ItimeFormat = {\r\n\tname: \"1d\",\r\n\tlang: \"oneday\",\r\n\ttimeGap: 1000 * 60 * 60 * 24,\r\n\troundingFunction: function (timeStamp, hourShift) {\r\n\t\t// 获取当前时间\r\n\t\tconst now = new Date(timeStamp);\r\n\r\n\t\t// 设置分钟和秒数为0\r\n\t\tnow.setHours(0);\r\n\t\tnow.setMinutes(0);\r\n\t\tnow.setSeconds(0);\r\n\t\tnow.setMilliseconds(0);\r\n\t\t// 获取当前整小时的时间戳（毫秒）\r\n\t\tlet result = now.getTime() + getshifttime(hourShift);\r\n\t\treturn result;\r\n\t},\r\n\tforwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 获取当前时间\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 设置分钟和秒数为0\r\n\t\tdate.setDate(date.getDate() + 1);\r\n\t\tdate.setHours(0);\r\n\t\tdate.setMinutes(0);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\t\t// 获取当前整小时的时间戳（毫秒）\r\n\t\tlet result = date.getTime() + getshifttime(hourShift);\r\n\t\treturn result;\r\n\t},\r\n\tbackwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 获取当前时间\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 设置分钟和秒数为0\r\n\t\tdate.setDate(date.getDate() - 1);\r\n\t\tdate.setHours(0);\r\n\t\tdate.setMinutes(0);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\t\t// 获取当前整小时的时间戳（毫秒）\r\n\t\tlet result = date.getTime() + getshifttime(hourShift);\r\n\t\treturn result;\r\n\t},\r\n\t/* 往未来查找n个单位 */\r\n\tforwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 获取当前时间\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 设置分钟和秒数为0\r\n\t\tdate.setDate(date.getDate() + 1 * times);\r\n\t\tdate.setHours(0);\r\n\t\tdate.setMinutes(0);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\t\t// 获取当前整小时的时间戳（毫秒）\r\n\t\tlet result = date.getTime() + getshifttime(hourShift);\r\n\t\treturn result;\r\n\t},\r\n\t/* 往过去查找n个单位 */\r\n\tbackwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 获取当前时间\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 设置分钟和秒数为0\r\n\t\tdate.setDate(date.getDate() - 1 * times);\r\n\t\tdate.setHours(0);\r\n\t\tdate.setMinutes(0);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\t\t// 获取当前整小时的时间戳（毫秒）\r\n\t\tlet result = date.getTime() + getshifttime(hourShift);\r\n\t\treturn result;\r\n\t},\r\n\tgetInitTimeScope: function (initTime: string) {\r\n\t\tif (initTime === \"now\") {\r\n\t\t\treturn { start: +new Date() - 1000 * 60 * 60 * 24 * 20, end: +new Date() + 1000 * 60 * 60 * 24 * 10 };\r\n\t\t} else {\r\n\t\t\treturn {\r\n\t\t\t\tstart: +new Date(initTime) - 1000 * 60 * 60 * 24 * 20,\r\n\t\t\t\tend: +new Date(initTime) + 1000 * 60 * 60 * 24 * 10,\r\n\t\t\t};\r\n\t\t}\r\n\t},\r\n\tformatter: function (value, lan, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(value);\r\n\t\t//date.setHours(date.getHours() + plusTimeArea);\r\n\r\n\t\tif (date.getDate() === 1) {\r\n\t\t\treturn date.getDate() + LANGUAGES[lan]!.timeFormat.unitdayst;\r\n\t\t}\r\n\t\tif (date.getDate() === 2) {\r\n\t\t\treturn date.getDate() + LANGUAGES[lan]!.timeFormat.unitdaynd;\r\n\t\t}\r\n\t\tif (date.getDate() === 3) {\r\n\t\t\treturn date.getDate() + LANGUAGES[lan]!.timeFormat.unitdayrd;\r\n\t\t}\r\n\t\treturn date.getDate() + LANGUAGES[lan]!.timeFormat.unitday;\r\n\t},\r\n};\r\n\r\n/**\r\n *周\r\n */\r\nexport const WEEK: ItimeFormat = {\r\n\tname: \"1w\",\r\n\tlang: \"oneWeek\",\r\n\ttimeGap: 1000 * 60 * 60 * 24 * 7,\r\n\troundingFunction: function (timeStamp, hourShift) {\r\n\t\tconst today = new Date(timeStamp);\r\n\t\tconst currentDay = today.getDay(); // 获取今天是周几（0-6，0代表周日）\r\n\t\tconst offsetDays = currentDay === 0 ? -6 : 1 - currentDay; // 计算偏移天数，如果周日则减6天，其他情况加1减去当前天数\r\n\t\tconst monday = new Date(today.setDate(today.getDate() + offsetDays));\r\n\t\treturn monday.getTime() + getshifttime(hourShift);\r\n\t},\r\n\tforwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 将时间戳转换为Date对象\r\n\t\tconst date = new Date(timeStamp); // 注意：JavaScript时间戳是毫秒级，所以乘以1000\r\n\r\n\t\t// 设置日期到下周一\r\n\t\tdate.setDate(date.getDate() + 7);\r\n\t\t// 设置时间为下周一的凌晨0点\r\n\t\tdate.setHours(0, 0, 0, 0);\r\n\t\t// 返回下周一时间戳（转换回秒级时间戳）\r\n\t\treturn Math.floor(date.getTime()) + getshifttime(hourShift);\r\n\t},\r\n\tbackwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 将时间戳转换为Date对象\r\n\t\tconst date = new Date(timeStamp); // 注意：JavaScript时间戳是毫秒级，所以乘以1000\r\n\r\n\t\t// 设置日期到上周一\r\n\t\tdate.setDate(date.getDate() - 7);\r\n\t\t// 设置时间为上周一的凌晨0点\r\n\t\tdate.setHours(0, 0, 0, 0);\r\n\t\t// 返回上周一时间戳（转换回秒级时间戳）\r\n\t\treturn Math.floor(date.getTime()) + getshifttime(hourShift);\r\n\t},\r\n\t/* 往未来查找n个单位 */\r\n\tforwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 将时间戳转换为Date对象\r\n\t\tconst date = new Date(timeStamp); // 注意：JavaScript时间戳是毫秒级，所以乘以1000\r\n\r\n\t\t// 设置日期到下周一\r\n\t\tdate.setDate(date.getDate() + 7 * times);\r\n\t\t// 设置时间为下周一的凌晨0点\r\n\t\tdate.setHours(0, 0, 0, 0);\r\n\t\t// 返回下周一时间戳（转换回秒级时间戳）\r\n\t\treturn Math.floor(date.getTime()) + getshifttime(hourShift);\r\n\t},\r\n\t/* 往过去查找n个单位 */\r\n\tbackwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 将时间戳转换为Date对象\r\n\t\tconst date = new Date(timeStamp); // 注意：JavaScript时间戳是毫秒级，所以乘以1000\r\n\r\n\t\t// 设置日期到上周一\r\n\t\tdate.setDate(date.getDate() - 7 * times);\r\n\t\t// 设置时间为上周一的凌晨0点\r\n\t\tdate.setHours(0, 0, 0, 0);\r\n\t\t// 返回上周一时间戳（转换回秒级时间戳）\r\n\t\treturn Math.floor(date.getTime()) + getshifttime(hourShift);\r\n\t},\r\n\tgetInitTimeScope: function (initTime: string) {\r\n\t\tif (initTime === \"now\") {\r\n\t\t\treturn { start: +new Date() - 1000 * 60 * 60 * 24 * 7 * 5, end: +new Date() + 1000 * 60 * 60 * 24 * 7 * 5 };\r\n\t\t} else {\r\n\t\t\treturn {\r\n\t\t\t\tstart: +new Date(initTime) - 1000 * 60 * 60 * 24 * 7 * 5,\r\n\t\t\t\tend: +new Date(initTime) + 1000 * 60 * 60 * 24 * 7 * 5,\r\n\t\t\t};\r\n\t\t}\r\n\t},\r\n\tformatter: function (value, lan, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(value);\r\n\r\n\t\tif (date.getDate() === 1) {\r\n\t\t\treturn date.getDate() + LANGUAGES[lan]!.timeFormat.unitdayst;\r\n\t\t}\r\n\t\tif (date.getDate() === 2) {\r\n\t\t\treturn date.getDate() + LANGUAGES[lan]!.timeFormat.unitdaynd;\r\n\t\t}\r\n\t\tif (date.getDate() === 3) {\r\n\t\t\treturn date.getDate() + LANGUAGES[lan]!.timeFormat.unitdayrd;\r\n\t\t}\r\n\t\treturn date.getDate() + LANGUAGES[lan]!.timeFormat.unitday;\r\n\t},\r\n};\r\n\r\n/**\r\n *月\r\n */\r\nexport const MONTH: ItimeFormat = {\r\n\tname: \"1m\",\r\n\tlang: \"onemonth\",\r\n\ttimeGap: 1000 * 60 * 60 * 24 * 30,\r\n\troundingFunction: function (timeStamp, hourShift) {\r\n\t\t// 获取当前时间\r\n\t\tconst now = new Date(timeStamp);\r\n\r\n\t\t// 设置日期为1\r\n\t\tnow.setDate(1);\r\n\t\tnow.setHours(0);\r\n\t\tnow.setMinutes(0);\r\n\t\tnow.setSeconds(0);\r\n\t\tnow.setMilliseconds(0);\r\n\t\t// 获取当前整小时的时间戳（毫秒）\r\n\t\tlet result = now.getTime() + getshifttime(hourShift);\r\n\t\treturn result;\r\n\t},\r\n\tforwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 获取当前时间\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 设置分钟和秒数为0\r\n\t\tdate.setMonth(date.getMonth() + 1);\r\n\t\tdate.setDate(1);\r\n\t\tdate.setHours(0);\r\n\t\tdate.setMinutes(0);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 获取当前整小时的时间戳（毫秒）\r\n\t\tlet result = date.getTime() + getshifttime(hourShift);\r\n\t\treturn result;\r\n\t},\r\n\tbackwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 获取当前时间\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 设置分钟和秒数为0\r\n\t\tdate.setMonth(date.getMonth() - 1);\r\n\t\tdate.setDate(1);\r\n\t\tdate.setHours(0);\r\n\t\tdate.setMinutes(0);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\t\t// 获取当前整小时的时间戳（毫秒）\r\n\t\tlet result = date.getTime() + getshifttime(hourShift);\r\n\t\treturn result;\r\n\t},\r\n\t/* 往未来查找n个单位 */\r\n\tforwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 获取当前时间\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 设置分钟和秒数为0\r\n\t\tdate.setMonth(date.getMonth() + 1 * times);\r\n\t\tdate.setDate(1);\r\n\t\tdate.setHours(0);\r\n\t\tdate.setMinutes(0);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 获取当前整小时的时间戳（毫秒）\r\n\t\tlet result = date.getTime() + getshifttime(hourShift);\r\n\t\treturn result;\r\n\t},\r\n\t/* 往过去查找n个单位 */\r\n\tbackwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 获取当前时间\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 设置分钟和秒数为0\r\n\t\tdate.setMonth(date.getMonth() - 1 * times);\r\n\t\tdate.setDate(1);\r\n\t\tdate.setHours(0);\r\n\t\tdate.setMinutes(0);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\t\t// 获取当前整小时的时间戳（毫秒）\r\n\t\tlet result = date.getTime() + getshifttime(hourShift);\r\n\t\treturn result;\r\n\t},\r\n\tgetInitTimeScope: function (initTime: string) {\r\n\t\tif (initTime === \"now\") {\r\n\t\t\treturn {\r\n\t\t\t\tstart: +new Date() - 1000 * 60 * 60 * 24 * 30 * 8,\r\n\t\t\t\tend: +new Date() + 1000 * 60 * 60 * 24 * 30 * 4,\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\treturn {\r\n\t\t\t\tstart: +new Date(initTime) - 1000 * 60 * 60 * 24 * 30 * 8,\r\n\t\t\t\tend: +new Date(initTime) + 1000 * 60 * 60 * 24 * 30 * 4,\r\n\t\t\t};\r\n\t\t}\r\n\t},\r\n\tformatter: function (value, lan, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(value);\r\n\r\n\t\tswitch (date.getMonth()) {\r\n\t\t\tcase 0:\r\n\t\t\t\treturn LANGUAGES[lan]!.timeFormat.January;\r\n\t\t\tcase 1:\r\n\t\t\t\treturn LANGUAGES[lan]!.timeFormat.February;\r\n\t\t\tcase 2:\r\n\t\t\t\treturn LANGUAGES[lan]!.timeFormat.March;\r\n\t\t\tcase 3:\r\n\t\t\t\treturn LANGUAGES[lan]!.timeFormat.April;\r\n\t\t\tcase 4:\r\n\t\t\t\treturn LANGUAGES[lan]!.timeFormat.May;\r\n\t\t\tcase 5:\r\n\t\t\t\treturn LANGUAGES[lan]!.timeFormat.June;\r\n\t\t\tcase 6:\r\n\t\t\t\treturn LANGUAGES[lan]!.timeFormat.July;\r\n\t\t\tcase 7:\r\n\t\t\t\treturn LANGUAGES[lan]!.timeFormat.August;\r\n\t\t\tcase 8:\r\n\t\t\t\treturn LANGUAGES[lan]!.timeFormat.September;\r\n\t\t\tcase 9:\r\n\t\t\t\treturn LANGUAGES[lan]!.timeFormat.October;\r\n\t\t\tcase 10:\r\n\t\t\t\treturn LANGUAGES[lan]!.timeFormat.November;\r\n\t\t\tcase 11:\r\n\t\t\t\treturn LANGUAGES[lan]!.timeFormat.December;\r\n\t\t}\r\n\t},\r\n};\r\n\r\n/**\r\n *年\r\n */\r\nexport const YEAR: ItimeFormat = {\r\n\tname: \"1y\",\r\n\tlang: \"oneYear\",\r\n\ttimeGap: 1000 * 60 * 60 * 24 * 30 * 12,\r\n\troundingFunction: function (timeStamp, hourShift) {\r\n\t\t// 获取当前时间\r\n\t\tconst now = new Date(timeStamp);\r\n\r\n\t\t// 设置日期为1\r\n\t\tnow.setMonth(0);\r\n\t\tnow.setDate(1);\r\n\t\tnow.setHours(0);\r\n\t\tnow.setMinutes(0);\r\n\t\tnow.setSeconds(0);\r\n\t\tnow.setMilliseconds(0);\r\n\t\t// 获取当前整小时的时间戳（毫秒）\r\n\t\tlet result = now.getTime() + getshifttime(hourShift);\r\n\t\treturn result;\r\n\t},\r\n\tforwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 获取当前时间\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 设置分钟和秒数为0\r\n\t\tdate.setFullYear(date.getFullYear() + 1);\r\n\t\tdate.setMonth(0);\r\n\t\tdate.setDate(1);\r\n\t\tdate.setHours(0);\r\n\t\tdate.setMinutes(0);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 获取当前整小时的时间戳（毫秒）\r\n\t\tlet result = date.getTime() + getshifttime(hourShift);\r\n\t\treturn result;\r\n\t},\r\n\tbackwardSingleUnit: function (timeStamp, hourShift) {\r\n\t\t// 获取当前时间\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 设置分钟和秒数为0\r\n\t\tdate.setFullYear(date.getFullYear() - 1);\r\n\t\tdate.setMonth(0);\r\n\t\tdate.setDate(1);\r\n\t\tdate.setHours(0);\r\n\t\tdate.setMinutes(0);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 获取当前整小时的时间戳（毫秒）\r\n\t\tlet result = date.getTime() + getshifttime(hourShift);\r\n\t\treturn result;\r\n\t},\r\n\t/* 往未来查找n个单位 */\r\n\tforwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 获取当前时间\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 设置分钟和秒数为0\r\n\t\tdate.setFullYear(date.getFullYear() + 1 * times);\r\n\t\tdate.setMonth(0);\r\n\t\tdate.setDate(1);\r\n\t\tdate.setHours(0);\r\n\t\tdate.setMinutes(0);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 获取当前整小时的时间戳（毫秒）\r\n\t\tlet result = date.getTime() + getshifttime(hourShift);\r\n\t\treturn result;\r\n\t},\r\n\t/* 往过去查找n个单位 */\r\n\tbackwardTimeUnit: function (timeStamp, times, hourShift) {\r\n\t\t// 获取当前时间\r\n\t\tconst date = new Date(timeStamp);\r\n\r\n\t\t// 设置分钟和秒数为0\r\n\t\tdate.setFullYear(date.getFullYear() - 1 * times);\r\n\t\tdate.setMonth(0);\r\n\t\tdate.setDate(1);\r\n\t\tdate.setHours(0);\r\n\t\tdate.setMinutes(0);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\r\n\t\t// 获取当前整小时的时间戳（毫秒）\r\n\t\tlet result = date.getTime() + getshifttime(hourShift);\r\n\t\treturn result;\r\n\t},\r\n\tgetInitTimeScope: function (initTime: string) {\r\n\t\tif (initTime === \"now\") {\r\n\t\t\treturn {\r\n\t\t\t\tstart: +new Date() - 1000 * 60 * 60 * 24 * 30 * 12 * 3,\r\n\t\t\t\tend: +new Date() + 1000 * 60 * 60 * 24 * 30 * 12 * 3,\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\treturn {\r\n\t\t\t\tstart: +new Date(initTime) - 1000 * 60 * 60 * 24 * 30 * 12 * 3,\r\n\t\t\t\tend: +new Date(initTime) + 1000 * 60 * 60 * 24 * 30 * 12 * 3,\r\n\t\t\t};\r\n\t\t}\r\n\t},\r\n\tformatter: function (value, lan, hourShift) {\r\n\t\t// 获取时间对象\r\n\t\tconst date = new Date(value);\r\n\r\n\t\treturn date.getFullYear() + LANGUAGES[lan]!.timeFormat.year;\r\n\t},\r\n};\r\n\r\n/**\r\n * 时间类型对应表\r\n */\r\nexport const timeTypeMap: { [propName: string]: ItimeFormat } = {\r\n\t\"1min\": ONEMIN,\r\n\t\"2min\": TWO,\r\n\t\"3min\": THREE,\r\n\t\"5min\": FMIN,\r\n\t\"10min\": TENMIN,\r\n\t\"15min\": FIFMIN,\r\n\t\"30min\": HALFHOUR,\r\n\t\"1h\": HOUR,\r\n\t\"1d\": DAY,\r\n\t\"1w\": WEEK,\r\n\t\"1m\": MONTH,\r\n\t\"1y\": YEAR,\r\n};\r\n\r\n/**\r\n *通过时间对象查找某个数组里的时间为特定时间对象的整数的个数\r\n */\r\nexport const findRoundTimeCountFromArray = function (\r\n\tarray: jsonObjectType[] | number[],\r\n\ttimeShift: number | \"local\",\r\n\tcurrentType: TtimeType,\r\n\tkey?: string\r\n): findRoundTimeCountFromArrayDataItem[] | null {\r\n\tlet getItemTime = function (arr: any[], index: any): number {\r\n\t\tif (typeof array[index] === \"object\" || typeof key !== \"undefined\") {\r\n\t\t\treturn Number(arr[index][key!]);\r\n\t\t}\r\n\t\treturn Number(arr[index]);\r\n\t};\r\n\r\n\t//获得当前的显示时间时区\r\n\t//某些情况下需要错位时间\r\n\t//例如当前时间间隔设置的是1d 那么数据时间可能指示到了08:00:00 而不是0点，所以\r\n\t//这种情况下需要计算这个查找位移\r\n\t//像1d以下的时间就不用计算\r\n\tlet getTimeShift = function () {\r\n\t\tif (currentType === \"1d\" || currentType === \"1w\" || currentType === \"1m\" || currentType === \"1y\") {\r\n\t\t\treturn timeShift;\r\n\t\t}\r\n\t\treturn 0;\r\n\t};\r\n\r\n\tif (array.length === 0) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tlet result: findRoundTimeCountFromArrayDataItem[] = [];\r\n\tlet start = getItemTime(array, 0);\r\n\tlet end = getItemTime(array, array.length - 1);\r\n\r\n\tlet gap = end - start;\r\n\r\n\tlet _timeTypeMap: { [propName: string]: ItimeFormat } = {};\r\n\r\n\t//小于一小时\r\n\tif (gap < 1000 * 60 * 60) {\r\n\t\t_timeTypeMap = { \"1min\": ONEMIN, \"5min\": FIFMIN, \"10min\": TENMIN };\r\n\t}\r\n\r\n\t//大于1小时，但是小于5小时\r\n\tif (gap >= 1000 * 60 * 60 && gap < 1000 * 60 * 60 * 5) {\r\n\t\t_timeTypeMap = { \"15min\": FIFMIN, \"30min\": HALFHOUR, \"1h\": HOUR };\r\n\t}\r\n\r\n\t//大于5小时，但是小于35小时\r\n\tif (gap >= 1000 * 60 * 60 * 5 && gap < 1000 * 60 * 60 * 35) {\r\n\t\t_timeTypeMap = { \"30min\": HALFHOUR, \"1h\": HOUR };\r\n\t}\r\n\r\n\t//大于35小时，但是小于15天\r\n\tif (gap >= 1000 * 60 * 60 * 35 && gap < 1000 * 60 * 60 * 24 * 15) {\r\n\t\t_timeTypeMap = { \"1h\": HOUR, \"1d\": DAY };\r\n\t}\r\n\r\n\t//大于15天，但是小于55天\r\n\tif (gap >= 1000 * 60 * 60 * 24 * 15 && gap < 1000 * 60 * 60 * 24 * 55) {\r\n\t\t_timeTypeMap = { \"1d\": DAY, \"1m\": MONTH };\r\n\t}\r\n\r\n\t//大于55天，但是小于1年\r\n\tif (gap >= 1000 * 60 * 60 * 24 * 35 && gap < 1000 * 60 * 60 * 24 * 365) {\r\n\t\t_timeTypeMap = { \"1d\": DAY, \"1m\": MONTH, \"1y\": YEAR };\r\n\t}\r\n\r\n\t//大于1年\r\n\tif (gap >= 1000 * 60 * 60 * 24 * 365) {\r\n\t\t_timeTypeMap = { \"1m\": MONTH, \"1y\": YEAR };\r\n\t}\r\n\t//查找数量\r\n\tlet findRoundTimeCount = function (timeType: ItimeFormat): { count: number; startIndex: number; step: number } {\r\n\t\tlet result_c = { count: 0, startIndex: 0, step: 0 };\r\n\t\t//先取整\r\n\t\tlet round = timeType.roundingFunction(end, getTimeShift());\r\n\t\t//然后从后往前找，看看有没有这个时间\r\n\t\tlet latestEqualIndex = binarySearchByKeyStrictlyEqual(array, round, \"forEnd\", key);\r\n\t\t//如果找到的这个下标都已经在数组里过半了，就直接返回0 ，说明这种时间格式不合适\r\n\t\tif (latestEqualIndex === null || latestEqualIndex === -1) {\r\n\t\t\treturn result_c;\r\n\t\t}\r\n\t\tif (latestEqualIndex <= array.length / 2) {\r\n\t\t\tresult_c.count = 1;\r\n\t\t\tresult_c.startIndex = latestEqualIndex!;\r\n\t\t\tresult_c.step = 99999999999999999;\r\n\t\t\treturn result_c;\r\n\t\t}\r\n\t\t//找到了它就根据它继续找下一个，获得跨度\r\n\t\tlet nextRound = timeType.backwardSingleUnit(getItemTime(array, latestEqualIndex), getTimeShift());\r\n\t\t//找到下一个这个时间类型的整数点\r\n\t\tlet nextEqualIndex = binarySearchByKeyStrictlyEqual(array.slice(0, latestEqualIndex), nextRound, \"forEnd\", key);\r\n\t\tif (nextEqualIndex === null || nextEqualIndex === -1) {\r\n\t\t\tresult_c.count = 1;\r\n\t\t\tresult_c.startIndex = latestEqualIndex!;\r\n\t\t\tresult_c.step = 99999999999999999;\r\n\t\t\treturn result_c;\r\n\t\t}\r\n\t\t//计算两个时间下标点之间的差，获得step\r\n\t\tlet step = latestEqualIndex - 1 - nextEqualIndex;\r\n\t\t//计算按照这种时间格式进行排列时的个数\r\n\t\tlet stepCount = countSelectedElements(latestEqualIndex + 1, step);\r\n\r\n\t\tresult_c.count = stepCount;\r\n\t\tresult_c.startIndex = latestEqualIndex;\r\n\t\tresult_c.step = step;\r\n\t\treturn result_c;\r\n\t};\r\n\r\n\tfor (let timeTypeItem in _timeTypeMap) {\r\n\t\tif (\r\n\t\t\t_timeTypeMap.hasOwnProperty(timeTypeItem) &&\r\n\t\t\ttimeTypeItem !== \"1w\" &&\r\n\t\t\ttimeTypeItem !== \"2min\" &&\r\n\t\t\ttimeTypeItem !== \"3min\"\r\n\t\t) {\r\n\t\t\tlet item = _timeTypeMap[timeTypeItem];\r\n\t\t\tresult.push({ ...findRoundTimeCount(item), type: item });\r\n\t\t}\r\n\t}\r\n\treturn result;\r\n};\r\n","/**\r\n * 廖力编写 2024年5月25日 00:36:41\r\n */\r\nimport {\r\n  createContext,\r\n  useState,\r\n  useContext,\r\n  useRef,\r\n  useCallback,\r\n  useEffect,\r\n  FC,\r\n  ReactElement,\r\n} from 'react';\r\nimport {\r\n  IcandleViewContext,\r\n  TcandleViewContext,\r\n} from '../interface/contextInterFace';\r\nimport usexAxis from '../hooks/xAxisHook';\r\nimport useyAxis from '../hooks/yAxisHook';\r\n\r\nimport useCandleHook from '../hooks/candleHook';\r\nimport { merge } from 'lodash';\r\nimport { IuseCandleView } from '../interface/configInterFaces';\r\nimport { DEFAULTVALUES } from '../utils/defaultValues';\r\nimport { Isize } from '../interface/itemsInterFace';\r\nimport { getSpaceSize } from '../utils/consts';\r\nimport { TtimeType } from '../interface/timeDefineInterFace';\r\nimport yAxis from '../com/yAxis';\r\n\r\n/**\r\n * 创建一个需要全局使用的钱包context\r\n **/\r\nconst candleViewContext = createContext<IcandleViewContext>(\r\n  {} as IcandleViewContext\r\n);\r\n\r\n/**\r\n * 钱包的公用钩子\r\n */\r\nconst useCandleView: TcandleViewContext = function(args): IcandleViewContext {\r\n  /**\r\n   *默认参数状态\r\n   */\r\n  const [initArgs, setinitArgs] = useState<IuseCandleView>(\r\n    merge(DEFAULTVALUES, args)\r\n  );\r\n\r\n  /**\r\n   * ============================hooks===========================\r\n   */\r\n\r\n  /**\r\n   *x轴钩子对象\r\n   */\r\n  const xAxisObj = usexAxis(initArgs.xAxis!, undefined, initArgs);\r\n  /**\r\n   *y轴钩子对象\r\n   */\r\n  const yAxisObj = useyAxis(initArgs.yAxis!, xAxisObj);\r\n\r\n  /**\r\n   * candle 对象\r\n   * 数据展示对象\r\n   */\r\n  const candleObj = useCandleHook(initArgs.data!, xAxisObj, yAxisObj, initArgs);\r\n\r\n  /**\r\n   * ============================state===========================\r\n   */\r\n  const [isMounted, setIsMounted] = useState<boolean>(false);\r\n\r\n  /**\r\n   *画布宽度\r\n   */\r\n  const [canvasWidth, setcanvasWidth] = useState<number>(0);\r\n  /**\r\n   *画布高度\r\n   */\r\n  const [canvasHeight, setcanvasHeight] = useState<number>(0);\r\n  /**\r\n   *画布颜色\r\n   */\r\n  const [canvasBackgroundColor, setcanvasBackgroundColor] = useState<string>(\r\n    '#fff'\r\n  );\r\n\r\n  /**\r\n   *数据显示区域（去除x轴和y轴的占有区域）\r\n   */\r\n  const [dataArea, setdataArea] = useState<Isize>({ width: 0, height: 0 });\r\n\r\n  /**\r\n   * ==========================函数==============================\r\n   */\r\n\r\n  /**\r\n   * 更改时间格式，传入 TtimeType 类型的变量\r\n   * 需要查看当前的时间格式可以访问\r\n   * CandleViewV2.initArgs.timeFormat\r\n   */\r\n  const setTimeFormat = function(value: TtimeType) {\r\n    let _initArgs = { ...initArgs };\r\n    _initArgs.timeFormat = value;\r\n    setinitArgs(_initArgs);\r\n  };\r\n\r\n  /**\r\n   * ==================================Effects===============================\r\n   */\r\n  useEffect(function(): ReturnType<React.EffectCallback> {\r\n    if (isMounted === false) {\r\n      setIsMounted(true);\r\n    }\r\n    return function(): void {\r\n      setIsMounted(false);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      if (xAxisObj.data.isFinishedInit && yAxisObj.data.isFinishedInit) {\r\n        xAxisObj.funcs.setinitArgs(initArgs.xAxis!);\r\n        yAxisObj.funcs.setinitArgs(initArgs.yAxis!);\r\n        candleObj.funcs.setinitArgs(initArgs.data!);\r\n      }\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },\r\n    [initArgs]\r\n  );\r\n\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      if (\r\n        canvasHeight !== 0 &&\r\n        canvasWidth !== 0 &&\r\n        !xAxisObj.data.isFinishedInit\r\n      ) {\r\n        //初始化x轴\r\n        xAxisObj.funcs.initAxisSates(\r\n          initArgs.timeFormat!,\r\n          canvasWidth,\r\n          canvasHeight,\r\n          initArgs.yAxis?.labelSpace!\r\n        );\r\n        //初始化y轴\r\n        yAxisObj.funcs.updateAxisSates(canvasWidth, canvasHeight, {\r\n          start: 500,\r\n          end: 600,\r\n        });\r\n      } else {\r\n        //更新x轴\r\n        xAxisObj.funcs.updateAxisSates(\r\n          canvasWidth,\r\n          canvasHeight,\r\n          initArgs.yAxis?.labelSpace!\r\n        );\r\n      }\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },\r\n    [canvasWidth, canvasHeight]\r\n  );\r\n\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      if (xAxisObj.data.isFinishedInit) {\r\n        //重新初始化x轴\r\n        xAxisObj.funcs.initAxisSates(\r\n          initArgs.timeFormat!,\r\n          canvasWidth,\r\n          canvasHeight,\r\n          initArgs.yAxis?.labelSpace!\r\n        );\r\n      }\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },\r\n    [initArgs.timeFormat, initArgs.yAxis?.labelSpace!]\r\n  );\r\n\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      if (xAxisObj.data.isFinishedInit) {\r\n        //计算数据可用区域\r\n        setdataArea({\r\n          width:\r\n            canvasWidth -\r\n            getSpaceSize(initArgs.yAxis!.labelSpace!, canvasWidth),\r\n          height:\r\n            canvasHeight -\r\n            getSpaceSize(initArgs.xAxis!.labelSpace!, canvasHeight),\r\n        });\r\n      }\r\n    },\r\n    [xAxisObj.data.isFinishedInit, canvasWidth, canvasHeight]\r\n  );\r\n\r\n  return {\r\n    /**\r\n     *初始化时的参数\r\n     */\r\n    initArgs,\r\n\r\n    /**\r\n     *x导出的数据\r\n     */\r\n    data: {\r\n      /**\r\n       *画布宽度\r\n       */\r\n      canvasWidth,\r\n      /**\r\n       *画布高度\r\n       */\r\n      canvasHeight,\r\n      /**\r\n       *画布颜色\r\n       */\r\n      canvasBackgroundColor,\r\n      /**\r\n       *数据显示区域（去除x轴和y轴的占有区域）\r\n       */\r\n      dataArea,\r\n    },\r\n    /**\r\n     *x导出的方法\r\n     */\r\n    funcs: {\r\n      /**\r\n       *设置画布宽度\r\n       */\r\n      setcanvasWidth,\r\n      /**\r\n       *设置画布高度\r\n       */\r\n      setcanvasHeight,\r\n      /**\r\n       *设置画布颜色\r\n       */\r\n      setcanvasBackgroundColor,\r\n      setInitArgs: setinitArgs,\r\n      /**\r\n       * 向图表更新当前实时的价格，价格的变化将反应在第一个candle上 (右边第一个 )\r\n       * @param time 更新的时间，用当前时间就好了，不用取整\r\n       * @param currentPrice 当前更新的价格\r\n       * @param volume 当前更新的交易量\r\n       * @returns 当前图表最末尾一个数据对象\r\n       */\r\n      appendData: candleObj.funcs.updateLatestCandleData,\r\n      setTimeFormat,\r\n    },\r\n    hookObjs: {\r\n      /**\r\n       *x轴钩子对象\r\n       */\r\n      xAxisObj,\r\n      /**\r\n       *y轴钩子对象\r\n       */\r\n      yAxisObj,\r\n      /**\r\n       *candleobj\r\n       */\r\n      candleObj,\r\n    },\r\n  };\r\n};\r\n\r\nexport interface IuseCandleViewContext {\r\n  (): IcandleViewContext;\r\n}\r\n\r\nlet useCandleViewContext: IuseCandleViewContext = function(): IcandleViewContext {\r\n  var r: IcandleViewContext = useContext(candleViewContext);\r\n  return r;\r\n};\r\n\r\nexport {\r\n  //交易图的context\r\n  candleViewContext as default,\r\n  //创建自定义交易图钩子\r\n  useCandleView,\r\n  //在子组件中,获取交易图的context对象\r\n  useCandleViewContext,\r\n};\r\n","import { PixiComponent } from \"@pixi/react\";\r\nimport { Graphics, utils } from \"pixi.js\";\r\nimport { IPixiShapeDashedLine, IPixiShapeRectangle } from \"../interface/basicShapesInterFace\";\r\n\r\ninterface RectangleProps {\r\n\tx: number;\r\n\ty: number;\r\n\twidth: number;\r\n\theight: number;\r\n\tcolor: number;\r\n}\r\n\r\nexport const Rectangle = PixiComponent<IPixiShapeRectangle, Graphics>(\"Rectangle\", {\r\n\tcreate: () => new Graphics(),\r\n\tapplyProps: (instance, oldProps, props) => {\r\n\t\tconst new_props = Object.assign(true, DEFAULTRECTANGLE, props);\r\n\t\tlet newxy = xyComput(new_props);\r\n\t\tlet x = newxy.x;\r\n\t\tlet y = newxy.y;\r\n\t\tinstance.clear();\r\n\t\tinstance.beginFill(new_props.color || 0x0, new_props.opacity);\r\n\t\tinstance.drawRect(x, y, new_props.size.width, new_props.size.height);\r\n\t\tinstance.endFill();\r\n\t},\r\n});\r\n\r\nconst xyComput = function (props: IPixiShapeRectangle) {\r\n\tlet x = props.position.x;\r\n\tlet y = props.position.y;\r\n\tif (props.alignX === \"center\") {\r\n\t\tx = props.position.x - props.size.width / 2;\r\n\t}\r\n\tif (props.alignX === \"right\") {\r\n\t\tx = props.position.x - props.size.width;\r\n\t}\r\n\tif (props.alignY === \"center\") {\r\n\t\ty = props.position.y - props.size.height / 2;\r\n\t}\r\n\tif (props.alignY === \"bottom\") {\r\n\t\ty = props.position.y - props.size.height;\r\n\t}\r\n\treturn { x, y };\r\n};\r\n\r\n/**\r\n * 矩形pixi对象的初始值\r\n */\r\nexport const DEFAULTRECTANGLE: IPixiShapeRectangle = {\r\n\tcolor: utils.string2hex(\"#000000\"),\r\n\tsize: { width: 100, height: 100 },\r\n\tposition: { x: 0, y: 0 },\r\n\talignX: \"left\",\r\n\talignY: \"top\",\r\n\topacity: 1,\r\n};\r\n\r\nconst drawDash = function (\r\n\ttarget: Graphics,\r\n\tx1: number,\r\n\ty1: number,\r\n\tx2: number,\r\n\ty2: number,\r\n\tdashLength: number = 5,\r\n\tspaceLength: number = 5\r\n): Graphics {\r\n\tlet x = x2 - x1;\r\n\tlet y = y2 - y1;\r\n\tlet hyp = Math.sqrt(x * x + y * y);\r\n\tlet units = hyp / (dashLength + spaceLength);\r\n\tlet dashSpaceRatio = dashLength / (dashLength + spaceLength);\r\n\tlet dashX = (x / units) * dashSpaceRatio;\r\n\tlet spaceX = x / units - dashX;\r\n\tlet dashY = (y / units) * dashSpaceRatio;\r\n\tlet spaceY = y / units - dashY;\r\n\r\n\ttarget.moveTo(x1, y1);\r\n\r\n\twhile (hyp > 0) {\r\n\t\tx1 += dashX;\r\n\t\ty1 += dashY;\r\n\t\thyp -= dashLength;\r\n\t\tif (hyp < 0) {\r\n\t\t\tx1 = x2;\r\n\t\t\ty1 = y2;\r\n\t\t}\r\n\t\ttarget.lineTo(x1, y1);\r\n\t\tx1 += spaceX;\r\n\t\ty1 += spaceY;\r\n\t\ttarget.moveTo(x1, y1);\r\n\t\thyp -= spaceLength;\r\n\t}\r\n\ttarget.moveTo(x2, y2);\r\n\treturn target;\r\n};\r\n\r\nexport const DashedLine = PixiComponent<IPixiShapeDashedLine, Graphics>(\"DashedLine\", {\r\n\tcreate: () => new Graphics(),\r\n\tapplyProps: (instance, _, newProps) => {\r\n\t\tlet defaults: IPixiShapeDashedLine = {\r\n\t\t\tcolor: utils.string2hex(\"#000000\"),\r\n\t\t\tsize: 1,\r\n\t\t\tpositionStart: { x: 0, y: 0 },\r\n\t\t\tpositionStop: { x: 0, y: 0 },\r\n\t\t\tdashLength: 4,\r\n\t\t\tspaceLength: 3,\r\n\t\t};\r\n\t\t//这里会产生引用\r\n\t\tconst props = Object.assign(true, defaults, newProps);\r\n\t\tinstance.clear();\r\n\t\tinstance.lineStyle(props.size, props.color);\r\n\t\tinstance = drawDash(\r\n\t\t\tinstance,\r\n\t\t\tprops.positionStart.x,\r\n\t\t\tprops.positionStart.y,\r\n\t\t\tprops.positionStop.x,\r\n\t\t\tprops.positionStop.y,\r\n\t\t\t4,\r\n\t\t\t3\r\n\t\t);\r\n\t\tinstance.endFill();\r\n\t},\r\n});\r\n\r\n//import * as PIXI from \"pixi.js\";\r\n//import { Stage, Container, Sprite, CustomPIXIComponent } from \"react-pixi-fiber\";\r\n//import { pointCoord } from \"@/components/interfaces/iComon\";\r\n//import { IPixiShapeDashedLine, IPixiShapeRectangle } from \"../interface/basicShapesInterFace\";\r\n//import { DEFAULTRECTANGLE } from \"./defaultValues\";\r\n//\r\n////计算xy\r\n//const xyComput = function (props: IPixiShapeRectangle) {\r\n//\tlet x = props.position.x;\r\n//\tlet y = props.position.y;\r\n//\tif (props.alignX === \"center\") {\r\n//\t\tx = props.position.x - props.size.width / 2;\r\n//\t}\r\n//\tif (props.alignX === \"right\") {\r\n//\t\tx = props.position.x - props.size.width;\r\n//\t}\r\n//\tif (props.alignY === \"center\") {\r\n//\t\ty = props.position.y - props.size.height / 2;\r\n//\t}\r\n//\tif (props.alignY === \"bottom\") {\r\n//\t\ty = props.position.y - props.size.height;\r\n//\t}\r\n//\treturn { x, y };\r\n//};\r\n//\r\n///**\r\n// * 矩形(自定义PIXI图形)\r\n// */\r\n//export const Rectangle = CustomPIXIComponent(\r\n//\t{\r\n//\t\tcustomDisplayObject: () => new PIXI.Graphics(),\r\n//\t\tcustomApplyProps: (instance: PIXI.Graphics, oldProps, newProps: IPixiShapeRectangle) => {\r\n//\t\t\t//这里会产生引用\r\n//\t\t\tconst new_props = Object.assign(true, DEFAULTRECTANGLE, newProps);\r\n//\r\n//\t\t\tlet newxy = xyComput(new_props);\r\n//\t\t\tlet x = newxy.x;\r\n//\t\t\tlet y = newxy.y;\r\n//\t\t\tinstance.clear();\r\n//\t\t\tinstance.beginFill(new_props.color || 0x0, new_props.opacity);\r\n//\t\t\tinstance.drawRect(x, y, new_props.size.width, new_props.size.height);\r\n//\t\t\tinstance.endFill();\r\n//\r\n//\t\t\t/* if (typeof oldProps === \"undefined\") {\r\n//\t\t\t\tlet x = newxy.x;\r\n//\t\t\t\tlet y = newxy.y;\r\n//\t\t\t\tinstance.clear();\r\n//\t\t\t\tinstance.beginFill(new_props.color || 0x0, new_props.opacity);\r\n//\t\t\t\tinstance.drawRect(x, y, new_props.size.width, new_props.size.height);\r\n//\t\t\t\tinstance.endFill();\r\n//\t\t\t} else {\r\n//\t\t\t\tconst old_Props = Object.assign(true, defaultsRectangle, oldProps);\r\n//\t\t\t\tlet oldxy = xyComput(old_Props);\r\n//\r\n//\t\t\t\tif (oldxy.x !== newxy.x) {\r\n//\t\t\t\t\tinstance.x += newxy.x - oldxy.x;\r\n//\t\t\t\t}\r\n//\t\t\t\tif (oldxy.y !== newxy.y) {\r\n//\t\t\t\t\tinstance.y += newxy.y - oldxy.y;\r\n//\t\t\t\t}\r\n//\t\t\t\tif (old_Props.size.width !== new_props.size.width) {\r\n//\t\t\t\t\tinstance.width = new_props.size.width;\r\n//\t\t\t\t}\r\n//\t\t\t\tif (old_Props.size.height !== new_props.size.height) {\r\n//\t\t\t\t\tinstance.height = new_props.size.height;\r\n//\t\t\t\t}\r\n//\t\t\t\tif (old_Props.color !== new_props.color) {\r\n//\t\t\t\t\tinstance.beginFill(new_props.color);\r\n//\t\t\t\t}\r\n//\t\t\t\tif (old_Props.opacity !== new_props.opacity) {\r\n//\t\t\t\t\tinstance.alpha = new_props.opacity as number;\r\n//\t\t\t\t}\r\n//\t\t\t} */\r\n//\t\t},\r\n//\t},\r\n//\t\"Rectangle\"\r\n//);\r\n//\r\n///**\r\n// * 矩形(自定义PIXI图形)\r\n// */\r\n////export const superRectangle = CustomPIXIComponent(\r\n////\t{\r\n////\t\tcustomDisplayObject: () => new PIXI.Graphics(),\r\n////\t\tcustomApplyProps: (instance: PIXI.Graphics, oldProps, newProps: IPixiShapeRectangle) => {\r\n////\t\t\t//这里会产生引用\r\n////\t\t\tconst new_props = Object.assign(true, DEFAULTRECTANGLE, newProps);\r\n////\r\n////\t\t\tlet newxy = xyComput(new_props);\r\n////\t\t\tlet x = newxy.x;\r\n////\t\t\tlet y = newxy.y;\r\n////\t\t\tinstance.clear();\r\n////\t\t\tinstance.beginFill(new_props.color || 0x0, new_props.opacity);\r\n////\t\t\tinstance.drawRect(x, y, new_props.size.width, new_props.size.height);\r\n////\t\t\tinstance.endFill();\r\n////\r\n////\t\t\t/* if (typeof oldProps === \"undefined\") {\r\n////\t\t\t\tlet x = newxy.x;\r\n////\t\t\t\tlet y = newxy.y;\r\n////\t\t\t\tinstance.clear();\r\n////\t\t\t\tinstance.beginFill(new_props.color || 0x0, new_props.opacity);\r\n////\t\t\t\tinstance.drawRect(x, y, new_props.size.width, new_props.size.height);\r\n////\t\t\t\tinstance.endFill();\r\n////\t\t\t} else {\r\n////\t\t\t\tconst old_Props = Object.assign(true, defaultsRectangle, oldProps);\r\n////\t\t\t\tlet oldxy = xyComput(old_Props);\r\n////\r\n////\t\t\t\tif (oldxy.x !== newxy.x) {\r\n////\t\t\t\t\tinstance.x += newxy.x - oldxy.x;\r\n////\t\t\t\t}\r\n////\t\t\t\tif (oldxy.y !== newxy.y) {\r\n////\t\t\t\t\tinstance.y += newxy.y - oldxy.y;\r\n////\t\t\t\t}\r\n////\t\t\t\tif (old_Props.size.width !== new_props.size.width) {\r\n////\t\t\t\t\tinstance.width = new_props.size.width;\r\n////\t\t\t\t}\r\n////\t\t\t\tif (old_Props.size.height !== new_props.size.height) {\r\n////\t\t\t\t\tinstance.height = new_props.size.height;\r\n////\t\t\t\t}\r\n////\t\t\t\tif (old_Props.color !== new_props.color) {\r\n////\t\t\t\t\tinstance.beginFill(new_props.color);\r\n////\t\t\t\t}\r\n////\t\t\t\tif (old_Props.opacity !== new_props.opacity) {\r\n////\t\t\t\t\tinstance.alpha = new_props.opacity as number;\r\n////\t\t\t\t}\r\n////\t\t\t} */\r\n////\t\t},\r\n////\t},\r\n////\t\"superRectangle\"\r\n////);\r\n//\r\n\r\n//\r\n///**\r\n// * 虚线(自定义PIXI图形)\r\n// */\r\n//export const DashedLine = CustomPIXIComponent(\r\n//\t{\r\n//\t\tcustomDisplayObject: () => new PIXI.Graphics(),\r\n//\t\tcustomApplyProps: (instance: PIXI.Graphics, oldProps, newProps: IPixiShapeDashedLine) => {\r\n//\t\t\tlet defaults: IPixiShapeDashedLine = {\r\n//\t\t\t\tcolor: PIXI.utils.string2hex(\"#000000\"),\r\n//\t\t\t\tsize: 1,\r\n//\t\t\t\tpositionStart: { x: 0, y: 0 },\r\n//\t\t\t\tpositionStop: { x: 0, y: 0 },\r\n//\t\t\t\tdashLength: 4,\r\n//\t\t\t\tspaceLength: 3,\r\n//\t\t\t};\r\n//\t\t\t//这里会产生引用\r\n//\t\t\tconst props = Object.assign(true, defaults, newProps);\r\n//\t\t\tinstance.clear();\r\n//\t\t\tinstance.lineStyle(props.size, props.color);\r\n//\t\t\tinstance = drawDash(\r\n//\t\t\t\tinstance,\r\n//\t\t\t\tprops.positionStart.x,\r\n//\t\t\t\tprops.positionStart.y,\r\n//\t\t\t\tprops.positionStop.x,\r\n//\t\t\t\tprops.positionStop.y,\r\n//\t\t\t\t4,\r\n//\t\t\t\t3\r\n//\t\t\t);\r\n//\t\t\tinstance.endFill();\r\n//\t\t},\r\n//\t},\r\n//\t\"DashedLine\"\r\n//);\r\n//\r\n","/**\r\n * 廖力编写\r\n * 模块名称：\r\n * 模块说明：\r\n * 编写时间：\r\n */\r\nimport React, {\r\n\tuseEffect,\r\n\tuseRef,\r\n\tuseState,\r\n\tforwardRef,\r\n\tuseImperativeHandle,\r\n\tFC,\r\n\tReactElement,\r\n\tmemo,\r\n\tLegacyRef,\r\n\tuseMemo,\r\n} from \"react\";\r\nimport { Stage, Graphics, Container, Text } from \"@pixi/react\";\r\nimport * as PIXI from \"pixi.js\";\r\nimport { DashedLine, Rectangle } from \"../utils/basicShaps\";\r\nimport { useCandleViewPixiContext } from \"..\";\r\nimport { getSpaceSize } from \"../utils/consts\";\r\n\r\n/**\r\n * 传入参数\r\n */\r\nexport interface iprops {}\r\n\r\nconst XAxis: FC<iprops> = ({}, _ref): ReactElement => {\r\n\t//===============useHooks=================\r\n\tconst CVData = useCandleViewPixiContext();\r\n\r\n\t//===============state====================\r\n\tconst [isMounted, setIsMounted] = useState<boolean>(false);\r\n\r\n\t//===============static===================\r\n\tconst labelPadding: number = 25;\r\n\r\n\t//===============ref======================\r\n\tconst tooltipTextRef = useRef<any>(null);\r\n\r\n\t//===============function=================\r\n\t/* 创建tick */\r\n\tconst makeTicks = function () {\r\n\t\tlet result: React.JSX.Element[] = [];\r\n\t\tlet index = 0;\r\n\t\tfor (var item of CVData.hookObjs.xAxisObj.data.displayTickArr) {\r\n\t\t\tresult.push(\r\n\t\t\t\t<React.Fragment key={index + \"_d\"}>\r\n\t\t\t\t\t<Rectangle\r\n\t\t\t\t\t\tcolor={PIXI.utils.string2hex(item.color)}\r\n\t\t\t\t\t\tsize={{\r\n\t\t\t\t\t\t\twidth: item.size,\r\n\t\t\t\t\t\t\theight: item.length,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tposition={item.cPosition}\r\n\t\t\t\t\t\talignX=\"center\"\r\n\t\t\t\t\t\talignY=\"top\"\r\n\t\t\t\t\t></Rectangle>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t);\r\n\t\t\tindex++;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t};\r\n\r\n\t/* 创建label */\r\n\tconst makeLabels = function () {\r\n\t\tlet result: React.JSX.Element[] = [];\r\n\t\tlet index = 0;\r\n\t\tfor (var item of CVData.hookObjs.xAxisObj.data.displayTickArr) {\r\n\t\t\tresult.push(\r\n\t\t\t\t<React.Fragment key={index + \"_a\"}>\r\n\t\t\t\t\t<Text\r\n\t\t\t\t\t\tanchor={0.5}\r\n\t\t\t\t\t\tx={item.cPosition.x}\r\n\t\t\t\t\t\ty={item.cPosition.y + CVData.hookObjs.xAxisObj.data.labelSpace / 2}\r\n\t\t\t\t\t\ttext={(function () {\r\n\t\t\t\t\t\t\tif (typeof CVData.hookObjs.xAxisObj.initArgs.formatter !== \"undefined\") {\r\n\t\t\t\t\t\t\t\treturn CVData.hookObjs.xAxisObj.initArgs.formatter!(item);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn item.displayValue?.toString()!;\r\n\t\t\t\t\t\t})()}\r\n\t\t\t\t\t\tresolution={2}\r\n\t\t\t\t\t\tstyle={\r\n\t\t\t\t\t\t\tnew PIXI.TextStyle({\r\n\t\t\t\t\t\t\t\talign: \"center\",\r\n\t\t\t\t\t\t\t\tfontSize: CVData.hookObjs.xAxisObj.initArgs.fontSize,\r\n\t\t\t\t\t\t\t\tfill: PIXI.utils.string2hex(CVData.hookObjs.xAxisObj.initArgs.tickColor!),\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t);\r\n\t\t\tindex++;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t};\r\n\r\n\t/* 创建tooltip */\r\n\tconst makeTooltip = function () {\r\n\t\tif (\r\n\t\t\t!CVData.hookObjs.xAxisObj.initArgs.tooltip!.enabled! ||\r\n\t\t\tCVData.hookObjs.xAxisObj.data.tooltipState === null ||\r\n\t\t\t!CVData.hookObjs.xAxisObj.data.tooltipIsShow\r\n\t\t) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<DashedLine\r\n\t\t\t\t\tcolor={PIXI.utils.string2hex(CVData.hookObjs.xAxisObj.initArgs.tooltip!.color!)}\r\n\t\t\t\t\tsize={CVData.hookObjs.xAxisObj.data.tooltipState.size}\r\n\t\t\t\t\tpositionStart={CVData.hookObjs.xAxisObj.data.tooltipState.position}\r\n\t\t\t\t\tpositionStop={{\r\n\t\t\t\t\t\tx: CVData.hookObjs.xAxisObj.data.tooltipState.position.x,\r\n\t\t\t\t\t\ty: CVData.hookObjs.xAxisObj.data.tooltipState.length,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tdashLength={CVData.hookObjs.xAxisObj.initArgs.tooltip!.dashLength!}\r\n\t\t\t\t\tspaceLength={CVData.hookObjs.xAxisObj.initArgs.tooltip!.spaceLength!}\r\n\t\t\t\t></DashedLine>\r\n\r\n\t\t\t\t<Rectangle\r\n\t\t\t\t\tcolor={PIXI.utils.string2hex(CVData.hookObjs.xAxisObj.initArgs.tooltip?.label?.backGroundColor!)}\r\n\t\t\t\t\tsize={{\r\n\t\t\t\t\t\twidth: tooltipTextRef.current?.width + labelPadding,\r\n\t\t\t\t\t\theight: CVData.hookObjs.xAxisObj.data.labelSpace,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tposition={(function () {\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\tCVData.hookObjs.xAxisObj.data.tooltipState.position.x -\r\n\t\t\t\t\t\t\t\ttooltipTextRef.current?.width / 2 -\r\n\t\t\t\t\t\t\t\tlabelPadding / 2 <\r\n\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tx: tooltipTextRef.current?.width / 2 + labelPadding / 2,\r\n\t\t\t\t\t\t\t\ty: CVData.hookObjs.xAxisObj.data.tooltipState.relatedTickItem!.cPosition.y,\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\tCVData.hookObjs.xAxisObj.data.tooltipState.position.x +\r\n\t\t\t\t\t\t\t\ttooltipTextRef.current?.width / 2 +\r\n\t\t\t\t\t\t\t\tlabelPadding / 2 >\r\n\t\t\t\t\t\t\tCVData.hookObjs.xAxisObj.data.lineSize.width\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tx:\r\n\t\t\t\t\t\t\t\t\tCVData.hookObjs.xAxisObj.data.lineSize.width -\r\n\t\t\t\t\t\t\t\t\ttooltipTextRef.current?.width / 2 -\r\n\t\t\t\t\t\t\t\t\tlabelPadding / 2,\r\n\t\t\t\t\t\t\t\ty: CVData.hookObjs.xAxisObj.data.tooltipState.relatedTickItem!.cPosition.y,\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tx: CVData.hookObjs.xAxisObj.data.tooltipState.position.x,\r\n\t\t\t\t\t\t\ty: CVData.hookObjs.xAxisObj.data.tooltipState.relatedTickItem!.cPosition.y,\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t})()}\r\n\t\t\t\t\talignX=\"center\"\r\n\t\t\t\t\talignY=\"top\"\r\n\t\t\t\t></Rectangle>\r\n\t\t\t\t<Rectangle\r\n\t\t\t\t\tcolor={PIXI.utils.string2hex(CVData.hookObjs.xAxisObj.initArgs.tooltip?.label?.color!)}\r\n\t\t\t\t\tsize={{\r\n\t\t\t\t\t\twidth: CVData.hookObjs.xAxisObj.data.tooltipState.relatedTickItem!.size,\r\n\t\t\t\t\t\theight: CVData.hookObjs.xAxisObj.data.tooltipState.relatedTickItem!.length,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tposition={{\r\n\t\t\t\t\t\tx: CVData.hookObjs.xAxisObj.data.tooltipState.position.x,\r\n\t\t\t\t\t\ty: CVData.hookObjs.xAxisObj.data.tooltipState.relatedTickItem!.cPosition.y,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\talignX=\"center\"\r\n\t\t\t\t\talignY=\"top\"\r\n\t\t\t\t></Rectangle>\r\n\t\t\t\t<Text\r\n\t\t\t\t\tref={tooltipTextRef}\r\n\t\t\t\t\tanchor={0.5}\r\n\t\t\t\t\tx={(function () {\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\tCVData.hookObjs.xAxisObj.data.tooltipState.position.x -\r\n\t\t\t\t\t\t\t\ttooltipTextRef.current?.width / 2 -\r\n\t\t\t\t\t\t\t\tlabelPadding / 2 <\r\n\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\treturn tooltipTextRef.current?.width / 2 + labelPadding / 2;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\tCVData.hookObjs.xAxisObj.data.tooltipState.position.x +\r\n\t\t\t\t\t\t\t\ttooltipTextRef.current?.width / 2 +\r\n\t\t\t\t\t\t\t\tlabelPadding / 2 >\r\n\t\t\t\t\t\t\tCVData.hookObjs.xAxisObj.data.lineSize.width\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\tCVData.hookObjs.xAxisObj.data.lineSize.width -\r\n\t\t\t\t\t\t\t\ttooltipTextRef.current?.width / 2 -\r\n\t\t\t\t\t\t\t\tlabelPadding / 2\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn CVData.hookObjs.xAxisObj.data.tooltipState.position.x;\r\n\t\t\t\t\t})()}\r\n\t\t\t\t\ty={CVData.hookObjs.xAxisObj.data.tooltipState.length + CVData.hookObjs.xAxisObj.data.labelSpace / 2}\r\n\t\t\t\t\ttext={\r\n\t\t\t\t\t\tCVData.hookObjs.xAxisObj.initArgs.tooltip?.label?.formatter!(\r\n\t\t\t\t\t\t\tCVData.hookObjs.xAxisObj.data.tooltipState.relatedTickItem!\r\n\t\t\t\t\t\t) as string\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresolution={2}\r\n\t\t\t\t\tstyle={\r\n\t\t\t\t\t\tnew PIXI.TextStyle({\r\n\t\t\t\t\t\t\talign: \"center\",\r\n\t\t\t\t\t\t\tfontSize: CVData.hookObjs.xAxisObj.initArgs.tooltip?.label?.fontsize,\r\n\t\t\t\t\t\t\tfill: PIXI.utils.string2hex(CVData.hookObjs.xAxisObj.initArgs.tooltip?.label?.color!),\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</>\r\n\t\t);\r\n\t};\r\n\r\n\t//===============effects==================\r\n\tuseEffect(\r\n\t\tfunction (): ReturnType<React.EffectCallback> {\r\n\t\t\tif (isMounted === false) {\r\n\t\t\t\tsetIsMounted(true);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[isMounted]\r\n\t);\r\n\r\n\tuseEffect(function (): ReturnType<React.EffectCallback> {\r\n\t\treturn function (): void {\r\n\t\t\tsetIsMounted(false);\r\n\t\t};\r\n\t}, []);\r\n\r\n\t/* x轴背景 */\r\n\tlet xBackground = useMemo(\r\n\t\tfunction () {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{/* y轴背景 */}\r\n\t\t\t\t\t<Rectangle\r\n\t\t\t\t\t\tcolor={PIXI.utils.string2hex(CVData.hookObjs.xAxisObj.initArgs.backgroundColor!)}\r\n\t\t\t\t\t\tsize={{\r\n\t\t\t\t\t\t\twidth: CVData.hookObjs.xAxisObj.data.viewSize.width,\r\n\t\t\t\t\t\t\theight: CVData.hookObjs.xAxisObj.data.labelSpace,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tposition={CVData.hookObjs.xAxisObj.data.linePosition}\r\n\t\t\t\t\t\talignX=\"left\"\r\n\t\t\t\t\t\talignY=\"top\"\r\n\t\t\t\t\t></Rectangle>\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t},\r\n\t\t[\r\n\t\t\tCVData.hookObjs.yAxisObj.data.labelSpace,\r\n\t\t\tCVData.hookObjs.yAxisObj.data.viewSize,\r\n\t\t\tCVData.hookObjs.yAxisObj.data.linePosition,\r\n\t\t\tCVData.hookObjs.yAxisObj.data.lineColor,\r\n\t\t\tCVData.hookObjs.yAxisObj.initArgs.backgroundColor,\r\n\t\t]\r\n\t);\r\n\r\n\tlet xAsixElem = useMemo(\r\n\t\tfunction () {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{/*  x轴 */}\r\n\t\t\t\t\t<Rectangle\r\n\t\t\t\t\t\tcolor={PIXI.utils.string2hex(CVData.hookObjs.xAxisObj.initArgs.lineColor!)}\r\n\t\t\t\t\t\tsize={{\r\n\t\t\t\t\t\t\twidth: CVData.hookObjs.xAxisObj.data.lineSize.width,\r\n\t\t\t\t\t\t\theight: CVData.hookObjs.xAxisObj.data.lineSize.size,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tposition={CVData.hookObjs.xAxisObj.data.linePosition}\r\n\t\t\t\t\t\talignX=\"left\"\r\n\t\t\t\t\t\talignY=\"top\"\r\n\t\t\t\t\t></Rectangle>\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t},\r\n\t\t[\r\n\t\t\tCVData.hookObjs.xAxisObj.data.lineSize.width,\r\n\t\t\tCVData.hookObjs.xAxisObj.data.lineSize.size,\r\n\t\t\tCVData.hookObjs.xAxisObj.data.linePosition,\r\n\t\t\tCVData.hookObjs.xAxisObj.initArgs.lineColor,\r\n\t\t]\r\n\t);\r\n\r\n\tlet ticks = useMemo(\r\n\t\tfunction () {\r\n\t\t\treturn makeTicks();\r\n\t\t},\r\n\t\t[CVData.hookObjs.xAxisObj.data.displayTickArr]\r\n\t);\r\n\r\n\tlet labels = useMemo(\r\n\t\tfunction () {\r\n\t\t\treturn makeLabels();\r\n\t\t},\r\n\t\t[CVData.hookObjs.xAxisObj.data.displayTickArr, CVData.hookObjs.xAxisObj.initArgs]\r\n\t);\r\n\r\n\tlet tooltip = useMemo(\r\n\t\tfunction () {\r\n\t\t\treturn makeTooltip();\r\n\t\t},\r\n\t\t[\r\n\t\t\tCVData.hookObjs.xAxisObj.data.tooltipState,\r\n\t\t\tCVData.hookObjs.xAxisObj.data.tooltipIsShow,\r\n\t\t\tCVData.hookObjs.xAxisObj.data.x,\r\n\t\t\tCVData.hookObjs.xAxisObj.initArgs.tooltip,\r\n\t\t]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{/* x轴背景 */}\r\n\t\t\t{xBackground}\r\n\t\t\t{xAsixElem}\r\n\t\t\t{/* 创建x轴标 */}\r\n\t\t\t<Container x={CVData.hookObjs.xAxisObj.data.x}>\r\n\t\t\t\t{ticks}\r\n\t\t\t\t{/* 创建label */}\r\n\t\t\t\t{labels}\r\n\t\t\t</Container>\r\n\t\t\t{/* 创建ToolTip */}\r\n\t\t\t{tooltip}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\n//使用memo不让其因为上级节点的更新而频繁更新\r\nexport default memo(XAxis);\r\n","/**\r\n * 廖力编写\r\n * 模块名称：\r\n * 模块说明：\r\n * 编写时间：\r\n */\r\nimport React, {\r\n\tuseEffect,\r\n\tuseRef,\r\n\tuseState,\r\n\tforwardRef,\r\n\tuseImperativeHandle,\r\n\tFC,\r\n\tReactElement,\r\n\tmemo,\r\n\tLegacyRef,\r\n\tuseMemo,\r\n} from \"react\";\r\nimport { Stage, Graphics, Container, Text } from \"@pixi/react\";\r\nimport * as PIXI from \"pixi.js\";\r\nimport { DashedLine, Rectangle } from \"../utils/basicShaps\";\r\nimport { useCandleViewPixiContext } from \"..\";\r\nimport { getSpaceSize } from \"../utils/consts\";\r\n\r\n/**\r\n * 传入参数\r\n */\r\nexport interface iprops {}\r\n\r\nconst DataTooltop: FC<iprops> = ({}, _ref): ReactElement => {\r\n\t//===============useHooks=================\r\n\tconst CVData = useCandleViewPixiContext();\r\n\r\n\t//===============state====================\r\n\tconst [isMounted, setIsMounted] = useState<boolean>(false);\r\n\tconst [updateTemp, setupdateTemp] = useState<number>(0);\r\n\t//===============static===================\r\n\tconst labelPadding: number = 10;\r\n\r\n\t//===============ref======================\r\n\tconst lastDataTooltipTextRef = useRef<any>(null);\r\n\tconst lastDataTooltipTextRef2 = useRef<any>(null);\r\n\tconst lastDataTooltipTextRef3 = useRef<any>(null);\r\n\tconst lastDataTooltipTextRef4 = useRef<any>(null);\r\n\r\n\t//===============function=================\r\n\t/* 创建最后一个candle的tooltip */\r\n\tconst makeLastCandleTooltip = function () {\r\n\t\tif (\r\n\t\t\tCVData.hookObjs.candleObj.data.latestCandleItem === null ||\r\n\t\t\t!CVData.hookObjs.candleObj.initArgs.candleStyles?.currentPriceTooltip!.enabled! ||\r\n\t\t\tCVData.hookObjs.candleObj.data.latestCandleToolTip === null ||\r\n\t\t\t!CVData.hookObjs.candleObj.data.latestCandleToolTip\r\n\t\t) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<DashedLine\r\n\t\t\t\t\tcolor={PIXI.utils.string2hex(CVData.hookObjs.candleObj.data.latestCandleItem!.candleColor!)}\r\n\t\t\t\t\tsize={CVData.hookObjs.candleObj.data.latestCandleToolTip.size}\r\n\t\t\t\t\tpositionStart={CVData.hookObjs.candleObj.data.latestCandleToolTip.position}\r\n\t\t\t\t\tpositionStop={{\r\n\t\t\t\t\t\tx: CVData.hookObjs.candleObj.data.latestCandleToolTip.length,\r\n\t\t\t\t\t\ty: CVData.hookObjs.candleObj.data.latestCandleToolTip.position.y,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tdashLength={CVData.hookObjs.candleObj.initArgs.candleStyles?.currentPriceTooltip!.dashLength!}\r\n\t\t\t\t\tspaceLength={CVData.hookObjs.candleObj.initArgs.candleStyles?.currentPriceTooltip!.spaceLength!}\r\n\t\t\t\t></DashedLine>\r\n\r\n\t\t\t\t<Rectangle\r\n\t\t\t\t\tcolor={PIXI.utils.string2hex(CVData.hookObjs.candleObj.data.latestCandleItem!.candleColor!)}\r\n\t\t\t\t\tsize={{\r\n\t\t\t\t\t\twidth: CVData.hookObjs.yAxisObj.data.labelSpace,\r\n\t\t\t\t\t\theight: lastDataTooltipTextRef.current?.height + labelPadding,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tposition={{\r\n\t\t\t\t\t\tx: CVData.hookObjs.yAxisObj.data.linePosition.x,\r\n\t\t\t\t\t\ty: CVData.hookObjs.candleObj.data.latestCandleToolTip.position.y,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\talignX=\"left\"\r\n\t\t\t\t\talignY=\"center\"\r\n\t\t\t\t></Rectangle>\r\n\t\t\t\t<Rectangle\r\n\t\t\t\t\tcolor={PIXI.utils.string2hex(\r\n\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.currentPriceTooltip?.label?.color!\r\n\t\t\t\t\t)}\r\n\t\t\t\t\tsize={{\r\n\t\t\t\t\t\twidth: CVData.hookObjs.yAxisObj.data.tickLength,\r\n\t\t\t\t\t\theight: CVData.hookObjs.candleObj.data.latestCandleToolTip.size,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tposition={{\r\n\t\t\t\t\t\tx: CVData.hookObjs.yAxisObj.data.linePosition.x,\r\n\t\t\t\t\t\ty: CVData.hookObjs.candleObj.data.latestCandleToolTip.position.y,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\talignX=\"left\"\r\n\t\t\t\t\talignY=\"center\"\r\n\t\t\t\t></Rectangle>\r\n\t\t\t\t<Text\r\n\t\t\t\t\tref={lastDataTooltipTextRef}\r\n\t\t\t\t\tanchor={{ x: 0, y: 0.6 }}\r\n\t\t\t\t\tx={CVData.hookObjs.yAxisObj.data.linePosition.x + CVData.hookObjs.yAxisObj.data.tickLength * 2}\r\n\t\t\t\t\ty={CVData.hookObjs.candleObj.data.latestCandleToolTip.position.y}\r\n\t\t\t\t\ttext={\r\n\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.currentPriceTooltip?.label?.formatter!(\r\n\t\t\t\t\t\t\tCVData.hookObjs.candleObj.data.latestCandleToolTip\r\n\t\t\t\t\t\t) as string\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresolution={2}\r\n\t\t\t\t\tstyle={\r\n\t\t\t\t\t\tnew PIXI.TextStyle({\r\n\t\t\t\t\t\t\tfontSize:\r\n\t\t\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.currentPriceTooltip?.label?.fontsize,\r\n\t\t\t\t\t\t\tfill: PIXI.utils.string2hex(\r\n\t\t\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.currentPriceTooltip?.label?.color!\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</>\r\n\t\t);\r\n\t};\r\n\r\n\t/* 视图范围内最末尾的candle */\r\n\tconst makeLatestCandleToolTip = function () {\r\n\t\tif (\r\n\t\t\t!CVData.hookObjs.candleObj.initArgs.candleStyles?.viewLastPriceTooltip!.enabled! ||\r\n\t\t\tCVData.hookObjs.candleObj.data.latestdisplayLatestCandle === null ||\r\n\t\t\t!CVData.hookObjs.candleObj.data.latestdisplayLatestCandle\r\n\t\t) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Rectangle\r\n\t\t\t\t\tcolor={PIXI.utils.string2hex(\r\n\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.viewLastPriceTooltip?.label?.backGroundColor!\r\n\t\t\t\t\t)}\r\n\t\t\t\t\tsize={{\r\n\t\t\t\t\t\twidth: CVData.hookObjs.yAxisObj.data.labelSpace,\r\n\t\t\t\t\t\theight: lastDataTooltipTextRef2.current?.height + labelPadding,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tposition={{\r\n\t\t\t\t\t\tx: CVData.hookObjs.yAxisObj.data.linePosition.x,\r\n\t\t\t\t\t\ty: CVData.hookObjs.candleObj.data.latestdisplayLatestCandle.position.y,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\talignX=\"left\"\r\n\t\t\t\t\talignY=\"center\"\r\n\t\t\t\t\topacity={\r\n\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.viewLastPriceTooltip?.label?.backGroundAlpha\r\n\t\t\t\t\t}\r\n\t\t\t\t></Rectangle>\r\n\t\t\t\t<Rectangle\r\n\t\t\t\t\tcolor={PIXI.utils.string2hex(\r\n\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.viewLastPriceTooltip?.label?.color!\r\n\t\t\t\t\t)}\r\n\t\t\t\t\tsize={{\r\n\t\t\t\t\t\twidth: CVData.hookObjs.yAxisObj.data.tickLength,\r\n\t\t\t\t\t\theight: CVData.hookObjs.candleObj.data.latestdisplayLatestCandle.size,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tposition={{\r\n\t\t\t\t\t\tx: CVData.hookObjs.yAxisObj.data.linePosition.x,\r\n\t\t\t\t\t\ty: CVData.hookObjs.candleObj.data.latestdisplayLatestCandle.position.y,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\talignX=\"left\"\r\n\t\t\t\t\talignY=\"center\"\r\n\t\t\t\t></Rectangle>\r\n\t\t\t\t<Text\r\n\t\t\t\t\tref={lastDataTooltipTextRef2}\r\n\t\t\t\t\tanchor={{ x: 0, y: 0.6 }}\r\n\t\t\t\t\tx={CVData.hookObjs.yAxisObj.data.linePosition.x + CVData.hookObjs.yAxisObj.data.tickLength * 2}\r\n\t\t\t\t\ty={CVData.hookObjs.candleObj.data.latestdisplayLatestCandle.position.y}\r\n\t\t\t\t\ttext={\r\n\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.viewLastPriceTooltip?.label?.formatter!(\r\n\t\t\t\t\t\t\tCVData.hookObjs.candleObj.data.latestdisplayLatestCandle\r\n\t\t\t\t\t\t) as string\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresolution={2}\r\n\t\t\t\t\tstyle={\r\n\t\t\t\t\t\tnew PIXI.TextStyle({\r\n\t\t\t\t\t\t\tfontSize:\r\n\t\t\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.viewLastPriceTooltip?.label?.fontsize,\r\n\t\t\t\t\t\t\tfill: PIXI.utils.string2hex(\r\n\t\t\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.viewLastPriceTooltip?.label?.color!\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</>\r\n\t\t);\r\n\t};\r\n\r\n\t/* 创建最后一个candle的tooltip */\r\n\tconst makeLastVolumeTooltip = function () {\r\n\t\tif (\r\n\t\t\t!CVData.hookObjs.candleObj.initArgs.candleStyles?.volumChart!.currentPriceTooltip!.enabled! ||\r\n\t\t\tCVData.hookObjs.candleObj.data.latestVolumeToolTip === null ||\r\n\t\t\t!CVData.hookObjs.candleObj.data.latestVolumeToolTip\r\n\t\t) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<DashedLine\r\n\t\t\t\t\tcolor={PIXI.utils.string2hex(\r\n\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.volumChart!.currentPriceTooltip!.color!\r\n\t\t\t\t\t)}\r\n\t\t\t\t\tsize={CVData.hookObjs.candleObj.data.latestVolumeToolTip.size}\r\n\t\t\t\t\tpositionStart={CVData.hookObjs.candleObj.data.latestVolumeToolTip.position}\r\n\t\t\t\t\tpositionStop={{\r\n\t\t\t\t\t\tx: CVData.hookObjs.candleObj.data.latestVolumeToolTip.length,\r\n\t\t\t\t\t\ty: CVData.hookObjs.candleObj.data.latestVolumeToolTip.position.y,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tdashLength={\r\n\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.volumChart!.currentPriceTooltip!.dashLength!\r\n\t\t\t\t\t}\r\n\t\t\t\t\tspaceLength={\r\n\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.volumChart!.currentPriceTooltip!.spaceLength!\r\n\t\t\t\t\t}\r\n\t\t\t\t></DashedLine>\r\n\r\n\t\t\t\t<Rectangle\r\n\t\t\t\t\tcolor={PIXI.utils.string2hex(\r\n\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.volumChart!.currentPriceTooltip?.label\r\n\t\t\t\t\t\t\t?.backGroundColor!\r\n\t\t\t\t\t)}\r\n\t\t\t\t\tsize={{\r\n\t\t\t\t\t\twidth: CVData.hookObjs.yAxisObj.data.labelSpace,\r\n\t\t\t\t\t\theight: lastDataTooltipTextRef3.current?.height + labelPadding,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tposition={{\r\n\t\t\t\t\t\tx: CVData.hookObjs.yAxisObj.data.linePosition.x,\r\n\t\t\t\t\t\ty: CVData.hookObjs.candleObj.data.latestVolumeToolTip.position.y,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\talignX=\"left\"\r\n\t\t\t\t\talignY=\"center\"\r\n\t\t\t\t></Rectangle>\r\n\t\t\t\t<Rectangle\r\n\t\t\t\t\tcolor={PIXI.utils.string2hex(\r\n\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.volumChart!.currentPriceTooltip?.label?.color!\r\n\t\t\t\t\t)}\r\n\t\t\t\t\tsize={{\r\n\t\t\t\t\t\twidth: CVData.hookObjs.yAxisObj.data.tickLength,\r\n\t\t\t\t\t\theight: CVData.hookObjs.candleObj.data.latestVolumeToolTip.size,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tposition={{\r\n\t\t\t\t\t\tx: CVData.hookObjs.yAxisObj.data.linePosition.x,\r\n\t\t\t\t\t\ty: CVData.hookObjs.candleObj.data.latestVolumeToolTip.position.y,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\talignX=\"left\"\r\n\t\t\t\t\talignY=\"center\"\r\n\t\t\t\t></Rectangle>\r\n\t\t\t\t<Text\r\n\t\t\t\t\tref={lastDataTooltipTextRef3}\r\n\t\t\t\t\tanchor={{ x: 0, y: 0.6 }}\r\n\t\t\t\t\tx={CVData.hookObjs.yAxisObj.data.linePosition.x + CVData.hookObjs.yAxisObj.data.tickLength * 2}\r\n\t\t\t\t\ty={CVData.hookObjs.candleObj.data.latestVolumeToolTip.position.y}\r\n\t\t\t\t\ttext={\r\n\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.volumChart!.currentPriceTooltip?.label\r\n\t\t\t\t\t\t\t?.formatter!(\r\n\t\t\t\t\t\t\tCVData.hookObjs.candleObj.data.latestVolumeToolTip,\r\n\t\t\t\t\t\t\tCVData.initArgs.language\r\n\t\t\t\t\t\t) as string\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresolution={2}\r\n\t\t\t\t\tstyle={\r\n\t\t\t\t\t\tnew PIXI.TextStyle({\r\n\t\t\t\t\t\t\tfontSize:\r\n\t\t\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.volumChart!.currentPriceTooltip?.label\r\n\t\t\t\t\t\t\t\t\t?.fontsize,\r\n\t\t\t\t\t\t\tfill: PIXI.utils.string2hex(\r\n\t\t\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.volumChart!.currentPriceTooltip?.label\r\n\t\t\t\t\t\t\t\t\t?.color!\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</>\r\n\t\t);\r\n\t};\r\n\r\n\t/* 视图范围内最末尾的candle */\r\n\tconst makeLatestVolumeToolTip = function () {\r\n\t\tif (\r\n\t\t\t!CVData.hookObjs.candleObj.initArgs.candleStyles?.volumChart!.viewLastPriceTooltip!.enabled! ||\r\n\t\t\tCVData.hookObjs.candleObj.data.latestdisplayLatestVolume === null ||\r\n\t\t\t!CVData.hookObjs.candleObj.data.latestdisplayLatestVolume\r\n\t\t) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Rectangle\r\n\t\t\t\t\tcolor={PIXI.utils.string2hex(\r\n\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.volumChart!.viewLastPriceTooltip?.label\r\n\t\t\t\t\t\t\t?.backGroundColor!\r\n\t\t\t\t\t)}\r\n\t\t\t\t\tsize={{\r\n\t\t\t\t\t\twidth: CVData.hookObjs.yAxisObj.data.labelSpace,\r\n\t\t\t\t\t\theight: lastDataTooltipTextRef4.current?.height + labelPadding,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tposition={{\r\n\t\t\t\t\t\tx: CVData.hookObjs.yAxisObj.data.linePosition.x,\r\n\t\t\t\t\t\ty: CVData.hookObjs.candleObj.data.latestdisplayLatestVolume.position.y,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\talignX=\"left\"\r\n\t\t\t\t\talignY=\"center\"\r\n\t\t\t\t\topacity={\r\n\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.volumChart!.viewLastPriceTooltip?.label\r\n\t\t\t\t\t\t\t?.backGroundAlpha\r\n\t\t\t\t\t}\r\n\t\t\t\t></Rectangle>\r\n\t\t\t\t<Rectangle\r\n\t\t\t\t\tcolor={PIXI.utils.string2hex(\r\n\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.volumChart!.viewLastPriceTooltip?.label?.color!\r\n\t\t\t\t\t)}\r\n\t\t\t\t\tsize={{\r\n\t\t\t\t\t\twidth: CVData.hookObjs.yAxisObj.data.tickLength,\r\n\t\t\t\t\t\theight: CVData.hookObjs.candleObj.data.latestdisplayLatestVolume.size,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tposition={{\r\n\t\t\t\t\t\tx: CVData.hookObjs.yAxisObj.data.linePosition.x,\r\n\t\t\t\t\t\ty: CVData.hookObjs.candleObj.data.latestdisplayLatestVolume.position.y,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\talignX=\"left\"\r\n\t\t\t\t\talignY=\"center\"\r\n\t\t\t\t></Rectangle>\r\n\t\t\t\t<Text\r\n\t\t\t\t\tref={lastDataTooltipTextRef4}\r\n\t\t\t\t\tanchor={{ x: 0, y: 0.6 }}\r\n\t\t\t\t\tx={CVData.hookObjs.yAxisObj.data.linePosition.x + CVData.hookObjs.yAxisObj.data.tickLength * 2}\r\n\t\t\t\t\ty={CVData.hookObjs.candleObj.data.latestdisplayLatestVolume.position.y}\r\n\t\t\t\t\ttext={\r\n\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.volumChart!.viewLastPriceTooltip?.label\r\n\t\t\t\t\t\t\t?.formatter!(\r\n\t\t\t\t\t\t\tCVData.hookObjs.candleObj.data.latestdisplayLatestVolume,\r\n\t\t\t\t\t\t\tCVData.initArgs.language\r\n\t\t\t\t\t\t) as string\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresolution={2}\r\n\t\t\t\t\tstyle={\r\n\t\t\t\t\t\tnew PIXI.TextStyle({\r\n\t\t\t\t\t\t\tfontSize:\r\n\t\t\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.volumChart!.viewLastPriceTooltip?.label\r\n\t\t\t\t\t\t\t\t\t?.fontsize,\r\n\t\t\t\t\t\t\tfill: PIXI.utils.string2hex(\r\n\t\t\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles?.volumChart!.viewLastPriceTooltip?.label\r\n\t\t\t\t\t\t\t\t\t?.color!\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</>\r\n\t\t);\r\n\t};\r\n\r\n\t//===============effects==================\r\n\tuseEffect(\r\n\t\tfunction (): ReturnType<React.EffectCallback> {\r\n\t\t\tif (isMounted === false) {\r\n\t\t\t\tsetIsMounted(true);\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tsetupdateTemp(+new Date());\r\n\t\t\t\t}, 500);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[isMounted]\r\n\t);\r\n\r\n\tuseEffect(function (): ReturnType<React.EffectCallback> {\r\n\t\treturn function (): void {\r\n\t\t\tsetIsMounted(false);\r\n\t\t};\r\n\t}, []);\r\n\r\n\t//\r\n\tuseEffect(\r\n\t\tfunction (): ReturnType<React.EffectCallback> {\r\n\t\t\treturn function (): void {\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tsetupdateTemp(+new Date());\r\n\t\t\t\t}, 500);\r\n\t\t\t};\r\n\t\t},\r\n\t\t[CVData.initArgs.timeFormat]\r\n\t);\r\n\r\n\tlet latestCandleToolTip = useMemo(\r\n\t\tfunction () {\r\n\t\t\treturn makeLatestCandleToolTip();\r\n\t\t},\r\n\t\t[\r\n\t\t\t{ ...CVData.hookObjs.candleObj.data.latestdisplayLatestCandle },\r\n\t\t\tupdateTemp,\r\n\t\t\t{ ...CVData.hookObjs.candleObj.initArgs.candleStyles?.viewLastPriceTooltip! },\r\n\t\t]\r\n\t);\r\n\r\n\tlet lastCandleTooltip = useMemo(\r\n\t\tfunction () {\r\n\t\t\treturn makeLastCandleTooltip();\r\n\t\t},\r\n\t\t[\r\n\t\t\t{ ...CVData.hookObjs.candleObj.data.latestCandleToolTip },\r\n\t\t\tupdateTemp,\r\n\t\t\t{ ...CVData.hookObjs.candleObj.initArgs.candleStyles?.currentPriceTooltip! },\r\n\t\t]\r\n\t);\r\n\r\n\tlet LastVolumeTooltip = useMemo(\r\n\t\tfunction () {\r\n\t\t\treturn makeLastVolumeTooltip();\r\n\t\t},\r\n\t\t[\r\n\t\t\t{ ...CVData.hookObjs.candleObj.data.latestVolumeToolTip },\r\n\t\t\tupdateTemp,\r\n\t\t\t{ ...CVData.hookObjs.candleObj.initArgs.candleStyles?.volumChart!.currentPriceTooltip! },\r\n\t\t]\r\n\t);\r\n\r\n\t//\r\n\r\n\tlet LatestVolumeToolTip = useMemo(\r\n\t\tfunction () {\r\n\t\t\treturn makeLatestVolumeToolTip();\r\n\t\t},\r\n\t\t[\r\n\t\t\t{ ...CVData.hookObjs.candleObj.data.latestdisplayLatestVolume },\r\n\t\t\tupdateTemp,\r\n\t\t\t{ ...CVData.hookObjs.candleObj.initArgs.candleStyles?.volumChart!.viewLastPriceTooltip! },\r\n\t\t]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{LatestVolumeToolTip}\r\n\t\t\t{LastVolumeTooltip}\r\n\t\t\t{latestCandleToolTip}\r\n\t\t\t{lastCandleTooltip}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\n//使用memo不让其因为上级节点的更新而频繁更新\r\nexport default memo(DataTooltop);\r\n","/**\r\n * 廖力编写\r\n * 模块名称：\r\n * 模块说明：\r\n * 编写时间：\r\n */\r\nimport React, {\r\n\tuseEffect,\r\n\tuseRef,\r\n\tuseState,\r\n\tforwardRef,\r\n\tuseImperativeHandle,\r\n\tFC,\r\n\tReactElement,\r\n\tmemo,\r\n\tLegacyRef,\r\n\tuseMemo,\r\n} from \"react\";\r\nimport { Stage, Graphics, Container, Text } from \"@pixi/react\";\r\nimport * as PIXI from \"pixi.js\";\r\nimport { DashedLine, Rectangle } from \"../utils/basicShaps\";\r\nimport { useCandleViewPixiContext } from \"..\";\r\nimport { getSpaceSize } from \"../utils/consts\";\r\nimport DataToolTip from \"./dataToolTip\";\r\n\r\n/**\r\n * 传入参数\r\n */\r\nexport interface iprops {}\r\n\r\nconst YAxis: FC<iprops> = ({}, _ref): ReactElement => {\r\n\t//===============useHooks=================\r\n\tconst CVData = useCandleViewPixiContext();\r\n\r\n\t//===============state====================\r\n\tconst [isMounted, setIsMounted] = useState<boolean>(false);\r\n\r\n\t//===============static===================\r\n\tconst labelPadding: number = 10;\r\n\r\n\t//===============ref======================\r\n\tconst tooltipTextRef = useRef<any>(null);\r\n\r\n\t//===============function=================\r\n\t/* 创建tick */\r\n\tconst makeTicks = function () {\r\n\t\tlet result: React.JSX.Element[] = [];\r\n\t\tlet index = 0;\r\n\t\tfor (var item of CVData.hookObjs.yAxisObj.data.displayTickArr) {\r\n\t\t\tresult.push(\r\n\t\t\t\t<Rectangle\r\n\t\t\t\t\tkey={index + \"_a\"}\r\n\t\t\t\t\tcolor={PIXI.utils.string2hex(item.color)}\r\n\t\t\t\t\tsize={{\r\n\t\t\t\t\t\twidth: item.length,\r\n\t\t\t\t\t\theight: item.size,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tposition={item.cPosition}\r\n\t\t\t\t\talignX=\"left\"\r\n\t\t\t\t\talignY=\"center\"\r\n\t\t\t\t></Rectangle>\r\n\t\t\t);\r\n\t\t\tindex++;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t};\r\n\r\n\t/* 创建label */\r\n\tconst makeLabels = function () {\r\n\t\tlet result: React.JSX.Element[] = [];\r\n\t\tlet index = 0;\r\n\t\tfor (var item of CVData.hookObjs.yAxisObj.data.displayTickArr) {\r\n\t\t\tresult.push(\r\n\t\t\t\t<Text\r\n\t\t\t\t\tkey={index + \"_b\"}\r\n\t\t\t\t\tanchor={{ x: 0, y: 0.6 }}\r\n\t\t\t\t\tx={item.cPosition.x + item.length * 2}\r\n\t\t\t\t\ty={item.cPosition.y}\r\n\t\t\t\t\ttext={CVData.hookObjs.yAxisObj.initArgs.formatter!(item)}\r\n\t\t\t\t\tresolution={2}\r\n\t\t\t\t\tstyle={\r\n\t\t\t\t\t\tnew PIXI.TextStyle({\r\n\t\t\t\t\t\t\tfontSize: CVData.hookObjs.yAxisObj.initArgs.fontSize,\r\n\t\t\t\t\t\t\tfill: PIXI.utils.string2hex(CVData.hookObjs.yAxisObj.initArgs.tickColor!),\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t\tindex++;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t};\r\n\r\n\t/* 创建tooltip */\r\n\tconst makeTooltip = function () {\r\n\t\tif (\r\n\t\t\t!CVData.hookObjs.yAxisObj.initArgs.tooltip!.enabled! ||\r\n\t\t\tCVData.hookObjs.yAxisObj.data.tooltipState === null ||\r\n\t\t\t!CVData.hookObjs.yAxisObj.data.tooltipIsShow\r\n\t\t) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<DashedLine\r\n\t\t\t\t\tcolor={PIXI.utils.string2hex(CVData.hookObjs.yAxisObj.initArgs.tooltip!.color!)}\r\n\t\t\t\t\tsize={CVData.hookObjs.yAxisObj.data.tooltipState.size}\r\n\t\t\t\t\tpositionStart={CVData.hookObjs.yAxisObj.data.tooltipState.position}\r\n\t\t\t\t\tpositionStop={{\r\n\t\t\t\t\t\tx: CVData.hookObjs.yAxisObj.data.tooltipState.length,\r\n\t\t\t\t\t\ty: CVData.hookObjs.yAxisObj.data.tooltipState.position.y,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tdashLength={CVData.hookObjs.yAxisObj.initArgs.tooltip!.dashLength!}\r\n\t\t\t\t\tspaceLength={CVData.hookObjs.yAxisObj.initArgs.tooltip!.spaceLength!}\r\n\t\t\t\t></DashedLine>\r\n\r\n\t\t\t\t<Rectangle\r\n\t\t\t\t\tcolor={PIXI.utils.string2hex(CVData.hookObjs.yAxisObj.initArgs.tooltip?.label?.backGroundColor!)}\r\n\t\t\t\t\tsize={{\r\n\t\t\t\t\t\twidth: CVData.hookObjs.yAxisObj.data.labelSpace,\r\n\t\t\t\t\t\theight: tooltipTextRef.current?.height + labelPadding,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tposition={{\r\n\t\t\t\t\t\tx: CVData.hookObjs.yAxisObj.data.linePosition.x,\r\n\t\t\t\t\t\ty: CVData.hookObjs.yAxisObj.data.tooltipState.position.y,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\talignX=\"left\"\r\n\t\t\t\t\talignY=\"center\"\r\n\t\t\t\t></Rectangle>\r\n\t\t\t\t<Rectangle\r\n\t\t\t\t\tcolor={PIXI.utils.string2hex(CVData.hookObjs.yAxisObj.initArgs.tooltip?.label?.color!)}\r\n\t\t\t\t\tsize={{\r\n\t\t\t\t\t\twidth: CVData.hookObjs.yAxisObj.data.tickLength,\r\n\t\t\t\t\t\theight: CVData.hookObjs.yAxisObj.initArgs.tickSize!,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tposition={{\r\n\t\t\t\t\t\tx: CVData.hookObjs.yAxisObj.data.linePosition.x,\r\n\t\t\t\t\t\ty: CVData.hookObjs.yAxisObj.data.tooltipState.position.y,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\talignX=\"left\"\r\n\t\t\t\t\talignY=\"center\"\r\n\t\t\t\t></Rectangle>\r\n\t\t\t\t<Text\r\n\t\t\t\t\tref={tooltipTextRef}\r\n\t\t\t\t\tanchor={{ x: 0, y: 0.6 }}\r\n\t\t\t\t\tx={CVData.hookObjs.yAxisObj.data.linePosition.x + CVData.hookObjs.yAxisObj.data.tickLength * 2}\r\n\t\t\t\t\ty={CVData.hookObjs.yAxisObj.data.tooltipState.position.y}\r\n\t\t\t\t\ttext={\r\n\t\t\t\t\t\tCVData.hookObjs.yAxisObj.initArgs.tooltip?.label?.formatter!(\r\n\t\t\t\t\t\t\tCVData.hookObjs.yAxisObj.data.tooltipState\r\n\t\t\t\t\t\t) as string\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresolution={2}\r\n\t\t\t\t\tstyle={\r\n\t\t\t\t\t\tnew PIXI.TextStyle({\r\n\t\t\t\t\t\t\tfontSize: CVData.hookObjs.yAxisObj.initArgs.tooltip?.label?.fontsize,\r\n\t\t\t\t\t\t\tfill: PIXI.utils.string2hex(CVData.hookObjs.yAxisObj.initArgs.tooltip?.label?.color!),\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</>\r\n\t\t);\r\n\t};\r\n\r\n\t//===============effects==================\r\n\tuseEffect(\r\n\t\tfunction (): ReturnType<React.EffectCallback> {\r\n\t\t\tif (isMounted === false) {\r\n\t\t\t\tsetIsMounted(true);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[isMounted]\r\n\t);\r\n\r\n\tuseEffect(function (): ReturnType<React.EffectCallback> {\r\n\t\treturn function (): void {\r\n\t\t\tsetIsMounted(false);\r\n\t\t};\r\n\t}, []);\r\n\r\n\t/* y轴背景 */\r\n\tlet yBackground = useMemo(\r\n\t\tfunction () {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{/* y轴背景 */}\r\n\t\t\t\t\t<Rectangle\r\n\t\t\t\t\t\tcolor={PIXI.utils.string2hex(CVData.hookObjs.yAxisObj.initArgs.backgroundColor!)}\r\n\t\t\t\t\t\tsize={{\r\n\t\t\t\t\t\t\twidth: CVData.hookObjs.yAxisObj.data.labelSpace,\r\n\t\t\t\t\t\t\theight: CVData.hookObjs.yAxisObj.data.viewSize.height,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tposition={CVData.hookObjs.yAxisObj.data.linePosition}\r\n\t\t\t\t\t\talignX=\"left\"\r\n\t\t\t\t\t\talignY=\"top\"\r\n\t\t\t\t\t></Rectangle>\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t},\r\n\t\t[\r\n\t\t\tCVData.hookObjs.yAxisObj.data.labelSpace,\r\n\t\t\tCVData.hookObjs.yAxisObj.data.viewSize,\r\n\t\t\tCVData.hookObjs.yAxisObj.data.linePosition,\r\n\t\t\tCVData.hookObjs.yAxisObj.data.lineColor,\r\n\t\t\tCVData.hookObjs.yAxisObj.initArgs.backgroundColor,\r\n\t\t]\r\n\t);\r\n\r\n\t{\r\n\t\t/*  y轴 */\r\n\t}\r\n\tlet yAxis = useMemo(\r\n\t\tfunction () {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{/*  y轴 */}\r\n\t\t\t\t\t<Rectangle\r\n\t\t\t\t\t\tcolor={CVData.hookObjs.yAxisObj.data.lineColor}\r\n\t\t\t\t\t\tsize={{\r\n\t\t\t\t\t\t\twidth: CVData.hookObjs.yAxisObj.data.lineSize.size,\r\n\t\t\t\t\t\t\theight: CVData.hookObjs.yAxisObj.data.viewSize.height,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tposition={CVData.hookObjs.yAxisObj.data.linePosition}\r\n\t\t\t\t\t\talignX=\"left\"\r\n\t\t\t\t\t\talignY=\"top\"\r\n\t\t\t\t\t></Rectangle>\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t},\r\n\t\t[\r\n\t\t\tCVData.hookObjs.yAxisObj.data.viewSize,\r\n\t\t\tCVData.hookObjs.yAxisObj.data.lineSize,\r\n\t\t\tCVData.hookObjs.yAxisObj.data.linePosition,\r\n\t\t\tCVData.hookObjs.yAxisObj.data.lineColor,\r\n\t\t]\r\n\t);\r\n\r\n\t/* 创建y轴标 */\r\n\tlet yTicks = useMemo(\r\n\t\tfunction () {\r\n\t\t\treturn makeTicks();\r\n\t\t},\r\n\t\t[CVData.hookObjs.yAxisObj.data.displayTickArr]\r\n\t);\r\n\r\n\t/* 创建label */\r\n\tlet yLabels = useMemo(\r\n\t\tfunction () {\r\n\t\t\treturn makeLabels();\r\n\t\t},\r\n\t\t[CVData.hookObjs.yAxisObj.data.displayTickArr, CVData.hookObjs.yAxisObj.initArgs]\r\n\t);\r\n\r\n\t/* 创建ToolTip */\r\n\tlet tooltip = useMemo(\r\n\t\tfunction () {\r\n\t\t\treturn makeTooltip();\r\n\t\t},\r\n\t\t[\r\n\t\t\tCVData.hookObjs.yAxisObj.data.tooltipState,\r\n\t\t\tCVData.hookObjs.yAxisObj.data.tooltipIsShow,\r\n\t\t\tCVData.hookObjs.yAxisObj.initArgs.tooltip!,\r\n\t\t]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{/* y轴背景 */}\r\n\t\t\t{yBackground}\r\n\t\t\t{/*  y轴 */}\r\n\t\t\t{yAxis}\r\n\t\t\t{/* 创建y轴标 */}\r\n\t\t\t{yTicks}\r\n\t\t\t{/* 创建label */}\r\n\t\t\t{yLabels}\r\n\t\t\t<DataToolTip></DataToolTip>\r\n\t\t\t{/* 创建ToolTip */}\r\n\t\t\t{tooltip}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\n//使用memo不让其因为上级节点的更新而频繁更新\r\nexport default memo(YAxis);\r\n","/**\r\n * 廖力编写\r\n * 模块名称：\r\n * 模块说明：\r\n * 编写时间：\r\n */\r\nimport React, {\r\n\tuseEffect,\r\n\tuseRef,\r\n\tuseState,\r\n\tforwardRef,\r\n\tuseImperativeHandle,\r\n\tFC,\r\n\tReactElement,\r\n\tmemo,\r\n\tLegacyRef,\r\n\tuseMemo,\r\n} from \"react\";\r\nimport { Stage, Graphics, Container, Text, ParticleContainer, Sprite } from \"@pixi/react\";\r\nimport * as PIXI from \"pixi.js\";\r\nimport { DashedLine, Rectangle } from \"../utils/basicShaps\";\r\nimport { useCandleViewPixiContext } from \"..\";\r\nimport { getSpaceSize } from \"../utils/consts\";\r\n\r\n/**\r\n * 传入参数\r\n */\r\nexport interface iprops {}\r\n\r\nconst Data: FC<iprops> = ({}, _ref): ReactElement => {\r\n\t//===============useHooks=================\r\n\tconst CVData = useCandleViewPixiContext();\r\n\r\n\t//===============state====================\r\n\tconst [isMounted, setIsMounted] = useState<boolean>(false);\r\n\r\n\t//===============static===================\r\n\tconst labelPadding: number = 10;\r\n\r\n\t//===============ref======================\r\n\tconst tooltipTextRef = useRef<any>(null);\r\n\r\n\tconst getColor = function (status: \"rise\" | \"fall\", type: \"wick\" | \"candle\"): string {\r\n\t\tif (status === \"rise\" && type === \"wick\") {\r\n\t\t\treturn CVData.initArgs.data?.candleStyles?.wickRiseColor!;\r\n\t\t}\r\n\r\n\t\tif (status === \"fall\" && type === \"wick\") {\r\n\t\t\treturn CVData.initArgs.data?.candleStyles?.wickFallColor!;\r\n\t\t}\r\n\r\n\t\tif (status === \"rise\" && type === \"candle\") {\r\n\t\t\treturn CVData.initArgs.data?.candleStyles?.candleRiseColor!;\r\n\t\t}\r\n\r\n\t\tif (status === \"fall\" && type === \"candle\") {\r\n\t\t\treturn CVData.initArgs.data?.candleStyles?.candleFallColor!;\r\n\t\t}\r\n\t\treturn \"\";\r\n\t};\r\n\r\n\t//===============function=================\r\n\t/* 创建candle */\r\n\tconst makeCandle = function () {\r\n\t\tlet result: React.JSX.Element[] = [];\r\n\r\n\t\tfor (var item of CVData.hookObjs.candleObj.data.displayCandleData) {\r\n\t\t\tresult.push(\r\n\t\t\t\t<Rectangle\r\n\t\t\t\t\tkey={item.time + \"_candle\"}\r\n\t\t\t\t\tcolor={PIXI.utils.string2hex(getColor(item!.candleStateus!, \"candle\"))}\r\n\t\t\t\t\tsize={{\r\n\t\t\t\t\t\twidth: item.candleWidth!,\r\n\t\t\t\t\t\theight: item.candleLength!,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tposition={{\r\n\t\t\t\t\t\tx: item.currentTick!.cPosition.x!,\r\n\t\t\t\t\t\ty: item.candlePixPosition!.y!,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\talignX=\"center\"\r\n\t\t\t\t\talignY=\"top\"\r\n\t\t\t\t></Rectangle>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn result;\r\n\t};\r\n\r\n\t/* 创建wick */\r\n\tconst makeWick = function () {\r\n\t\tlet result: React.JSX.Element[] = [];\r\n\t\tlet index = 0;\r\n\t\tfor (var item of CVData.hookObjs.candleObj.data.displayCandleData) {\r\n\t\t\tif (!item.isEscaped!) {\r\n\t\t\t\tresult.push(\r\n\t\t\t\t\t<Rectangle\r\n\t\t\t\t\t\tkey={item.time + \"_wick\"}\r\n\t\t\t\t\t\tcolor={PIXI.utils.string2hex(getColor(item!.candleStateus!, \"wick\"))}\r\n\t\t\t\t\t\tsize={{\r\n\t\t\t\t\t\t\twidth: item.wickWidth!,\r\n\t\t\t\t\t\t\theight: item.wickLength!,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tposition={{\r\n\t\t\t\t\t\t\tx: item.currentTick!.cPosition.x!,\r\n\t\t\t\t\t\t\ty: item.wickPixPosition!.y!,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\talignX=\"center\"\r\n\t\t\t\t\t\talignY=\"top\"\r\n\t\t\t\t\t></Rectangle>\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(\r\n\t\t\t\t\t<Rectangle\r\n\t\t\t\t\t\tkey={item.time + \"_wick\"}\r\n\t\t\t\t\t\tcolor={0}\r\n\t\t\t\t\t\tsize={{\r\n\t\t\t\t\t\t\twidth: 0,\r\n\t\t\t\t\t\t\theight: 0,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tposition={{\r\n\t\t\t\t\t\t\tx: 0,\r\n\t\t\t\t\t\t\ty: 0,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\talignX=\"center\"\r\n\t\t\t\t\t\talignY=\"top\"\r\n\t\t\t\t\t></Rectangle>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tindex++;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t};\r\n\r\n\t/* 创建candle */\r\n\t//const makeCandle = function () {\r\n\t//\tlet result: React.JSX.Element[] = [];\r\n\t//\r\n\t//\tfor (var item of CVData.hookObjs.candleObj.data.displayCandleData) {\r\n\t//\t\tresult.push(\r\n\t//\t\t\t<Sprite\r\n\t//\t\t\t\tkey={item.time + \"_candle\"}\r\n\t//\t\t\t\twidth={item.candleWidth}\r\n\t//\t\t\t\theight={item.candleLength!}\r\n\t//\t\t\t\tposition={{\r\n\t//\t\t\t\t\tx: item.currentTick!.cPosition.x!,\r\n\t//\t\t\t\t\ty: item.candlePixPosition!.y!,\r\n\t//\t\t\t\t}}\r\n\t//\t\t\t\ttexture={PIXI.Texture.WHITE}\r\n\t//\t\t\t\ttint={PIXI.utils.string2hex(item.candleColor!)}\r\n\t//\t\t\t\tanchor={{ x: 0.5, y: 0 }}\r\n\t//\t\t\t></Sprite>\r\n\t//\t\t);\r\n\t//\t}\r\n\t//\treturn result;\r\n\t//};\r\n\t//\r\n\t//{\r\n\t//\t/* <Rectangle\r\n\t//\r\n\t//\t\t\t\tcolor={PIXI.utils.string2hex(item.candleColor!)}\r\n\t//\t\t\t\tsize={{\r\n\t//\t\t\t\t\twidth: item.candleWidth!,\r\n\t//\t\t\t\t\theight: item.candleLength!,\r\n\t//\t\t\t\t}}\r\n\t//\t\t\t\tposition={{\r\n\t//\t\t\t\t\tx: item.currentTick!.cPosition.x!,\r\n\t//\t\t\t\t\ty: item.candlePixPosition!.y!,\r\n\t//\t\t\t\t}}\r\n\t//\t\t\t\talignX=\"center\"\r\n\t//\t\t\t\talignY=\"top\"\r\n\t//\t\t\t></Rectangle> */\r\n\t//}\r\n\t//\r\n\t///* 创建wick */\r\n\t//const makeWick = function () {\r\n\t//\tlet result: React.JSX.Element[] = [];\r\n\t//\tlet index = 0;\r\n\t//\tfor (var item of CVData.hookObjs.candleObj.data.displayCandleData) {\r\n\t//\t\tif (!item.isEscaped!) {\r\n\t//\t\t\tresult.push(\r\n\t//\t\t\t\t<Sprite\r\n\t//\t\t\t\t\tkey={item.time + \"_wick\"}\r\n\t//\t\t\t\t\twidth={item.wickWidth!}\r\n\t//\t\t\t\t\theight={item.wickLength!}\r\n\t//\t\t\t\t\tposition={{\r\n\t//\t\t\t\t\t\tx: item.currentTick!.cPosition.x!,\r\n\t//\t\t\t\t\t\ty: item.wickPixPosition!.y!,\r\n\t//\t\t\t\t\t}}\r\n\t//\t\t\t\t\ttexture={PIXI.Texture.WHITE}\r\n\t//\t\t\t\t\ttint={PIXI.utils.string2hex(item.wickColor!)}\r\n\t//\t\t\t\t\tanchor={{ x: 0.5, y: 0 }}\r\n\t//\t\t\t\t></Sprite>\r\n\t//\t\t\t);\r\n\t//\t\t} else {\r\n\t//\t\t\tresult.push(\r\n\t//\t\t\t\t<Sprite\r\n\t//\t\t\t\t\tkey={item.time + \"_wick\"}\r\n\t//\t\t\t\t\twidth={0}\r\n\t//\t\t\t\t\theight={0}\r\n\t//\t\t\t\t\tposition={{\r\n\t//\t\t\t\t\t\tx: 0,\r\n\t//\t\t\t\t\t\ty: 0,\r\n\t//\t\t\t\t\t}}\r\n\t//\t\t\t\t></Sprite>\r\n\t//\t\t\t);\r\n\t//\t\t}\r\n\t//\t\tindex++;\r\n\t//\t}\r\n\t//\r\n\t//\treturn result;\r\n\t//};\r\n\r\n\t//===============effects==================\r\n\tuseEffect(\r\n\t\tfunction (): ReturnType<React.EffectCallback> {\r\n\t\t\tif (isMounted === false) {\r\n\t\t\t\tsetIsMounted(true);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[isMounted]\r\n\t);\r\n\r\n\tuseEffect(function (): ReturnType<React.EffectCallback> {\r\n\t\treturn function (): void {\r\n\t\t\tsetIsMounted(false);\r\n\t\t};\r\n\t}, []);\r\n\r\n\tlet candle = useMemo(\r\n\t\tfunction () {\r\n\t\t\treturn (function () {\r\n\t\t\t\tif (CVData.hookObjs.candleObj.data.displayCandleData.length === 0) {\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t}\r\n\t\t\t\tif (!CVData.hookObjs.candleObj.data.isDQuickUpdateing) {\r\n\t\t\t\t\treturn makeCandle();\r\n\t\t\t\t}\r\n\t\t\t\treturn [];\r\n\t\t\t})();\r\n\t\t},\r\n\t\t[\r\n\t\t\tCVData.hookObjs.candleObj.data.displayCandleData,\r\n\t\t\tCVData.hookObjs.candleObj.data.isDQuickUpdateing,\r\n\t\t\tCVData.initArgs.data!.candleStyles!.candleFallColor!,\r\n\t\t\tCVData.initArgs.data!.candleStyles!.candleRiseColor!,\r\n\t\t]\r\n\t);\r\n\r\n\tlet wick = useMemo(\r\n\t\tfunction () {\r\n\t\t\tif (CVData.hookObjs.candleObj.data.displayCandleData.length === 0) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\treturn makeWick();\r\n\t\t},\r\n\t\t[\r\n\t\t\tCVData.hookObjs.candleObj.data.displayCandleData,\r\n\t\t\tCVData.hookObjs.candleObj.data.isDQuickUpdateing,\r\n\t\t\tCVData.initArgs.data!.candleStyles!.wickFallColor!,\r\n\t\t\tCVData.initArgs.data!.candleStyles!.wickFallColor!,\r\n\t\t]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Container\r\n\t\t\t\tx={CVData.hookObjs.xAxisObj.data.x}\r\n\t\t\t\ty={CVData.hookObjs.candleObj.data.miny}\r\n\t\t\t\tscale={{ x: 1, y: CVData.hookObjs.candleObj.data.yScale }}\r\n\t\t\t>\r\n\t\t\t\t{wick}\r\n\t\t\t\t{candle}\r\n\t\t\t</Container>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\n//使用memo不让其因为上级节点的更新而频繁更新\r\nexport default memo(Data);\r\n","/**\r\n * 廖力编写\r\n * 模块名称：\r\n * 模块说明：\r\n * 编写时间：\r\n */\r\nimport React, {\r\n  useEffect,\r\n  useState,\r\n  FC,\r\n  ReactElement,\r\n  memo,\r\n  useMemo,\r\n} from 'react';\r\nimport { Container } from '@pixi/react';\r\nimport * as PIXI from 'pixi.js';\r\nimport { Rectangle } from '../utils/basicShaps';\r\nimport { useCandleViewPixiContext } from '..';\r\n\r\n/**\r\n * 传入参数\r\n */\r\nexport interface iprops {}\r\n\r\nconst NetLines: FC<iprops> = ({}, _ref): ReactElement => {\r\n  //===============useHooks=================\r\n  const CVData = useCandleViewPixiContext();\r\n\r\n  //===============state====================\r\n  const [isMounted, setIsMounted] = useState<boolean>(false);\r\n\r\n  //===============static===================\r\n\r\n  //===============ref======================\r\n\r\n  //===============function=================\r\n\r\n  /* 创建网格线 */\r\n  const makeNetLinesx = function() {\r\n    let result: React.JSX.Element[] = [];\r\n    let index = 0;\r\n    for (var item of CVData.hookObjs.xAxisObj.data.netLineArr) {\r\n      result.push(\r\n        <React.Fragment key={index + '_c'}>\r\n          <Rectangle\r\n            color={PIXI.utils.string2hex(\r\n              CVData.hookObjs.xAxisObj.initArgs.netLineColor!\r\n            )}\r\n            size={{\r\n              width: item.size,\r\n              height: item.length,\r\n            }}\r\n            position={item.cPosition}\r\n            alignX=\"center\"\r\n            alignY=\"top\"\r\n          ></Rectangle>\r\n        </React.Fragment>\r\n      );\r\n      index++;\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  const makeNetLinesy = function() {\r\n    let result: React.JSX.Element[] = [];\r\n    let index = 0;\r\n    for (var item of CVData.hookObjs.yAxisObj.data.netLineArr) {\r\n      result.push(\r\n        <React.Fragment key={index + '_b'}>\r\n          <Rectangle\r\n            color={PIXI.utils.string2hex(\r\n              CVData.hookObjs.yAxisObj.initArgs.netLineColor!\r\n            )}\r\n            size={{\r\n              width: item.length,\r\n              height: item.size,\r\n            }}\r\n            position={item.cPosition}\r\n            alignX=\"left\"\r\n            alignY=\"center\"\r\n          ></Rectangle>\r\n        </React.Fragment>\r\n      );\r\n      index++;\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  //===============effects==================\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      if (isMounted === false) {\r\n        setIsMounted(true);\r\n      }\r\n    },\r\n    [isMounted]\r\n  );\r\n\r\n  useEffect(function(): ReturnType<React.EffectCallback> {\r\n    return function(): void {\r\n      setIsMounted(false);\r\n    };\r\n  }, []);\r\n\r\n  let netLinesx = useMemo(\r\n    function() {\r\n      return makeNetLinesx();\r\n    },\r\n    [\r\n      CVData.hookObjs.xAxisObj.data.netLineArr,\r\n      CVData.hookObjs.xAxisObj.initArgs.netLineColor,\r\n    ]\r\n  );\r\n\r\n  let netLinesy = useMemo(\r\n    function() {\r\n      return makeNetLinesy();\r\n    },\r\n    [\r\n      CVData.hookObjs.yAxisObj.data.netLineArr,\r\n      CVData.hookObjs.yAxisObj.initArgs.netLineColor,\r\n    ]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {/* 创建轴网格线 */}\r\n      <Container x={CVData.hookObjs.xAxisObj.data.x}>\r\n        <>{netLinesx}</>\r\n      </Container>\r\n      {netLinesy}\r\n    </>\r\n  );\r\n};\r\n\r\n//使用memo不让其因为上级节点的更新而频繁更新\r\nexport default memo(NetLines);\r\n","/**\r\n * 廖力编写\r\n * 模块名称：\r\n * 模块说明：\r\n * 编写时间：\r\n */\r\nimport React, {\r\n  useEffect,\r\n  useState,\r\n  FC,\r\n  ReactElement,\r\n  memo,\r\n  useMemo,\r\n} from 'react';\r\nimport { Container } from '@pixi/react';\r\nimport * as PIXI from 'pixi.js';\r\nimport { Rectangle } from '../utils/basicShaps';\r\nimport { useCandleViewPixiContext } from '..';\r\n\r\n/**\r\n * 传入参数\r\n */\r\nexport interface iprops {}\r\n\r\nconst VolumChat: FC<iprops> = ({}, _ref): ReactElement => {\r\n  //===============useHooks=================\r\n  const CVData = useCandleViewPixiContext();\r\n\r\n  //===============state====================\r\n  const [isMounted, setIsMounted] = useState<boolean>(false);\r\n\r\n  //===============function=================\r\n  /* 创建volume */\r\n  const makeChat = function() {\r\n    if (!CVData.hookObjs.candleObj.initArgs.candleStyles!.volumChart!.enabled) {\r\n      return [];\r\n    }\r\n    let result: React.JSX.Element[] = [];\r\n    let index = 0;\r\n\r\n    for (var item of CVData.hookObjs.candleObj.data.displayCandleData) {\r\n      let alpha =\r\n        CVData.hookObjs.candleObj.initArgs.candleStyles?.volumChart?.alpha;\r\n      let currentHeight =\r\n        CVData.hookObjs.candleObj.data.volumChartPixHeight *\r\n        (Number(item.volume) /\r\n          CVData.hookObjs.candleObj.data.volumChartViewMax);\r\n\r\n      if (!item.isEscaped!) {\r\n        result.push(\r\n          <Rectangle\r\n            key={item.time + '_volume'}\r\n            color={PIXI.utils.string2hex(\r\n              (function() {\r\n                if (item.candleStateus === 'rise') {\r\n                  return CVData.hookObjs.candleObj.initArgs.candleStyles!\r\n                    .volumChart!.riseColor!;\r\n                }\r\n                return CVData.hookObjs.candleObj.initArgs.candleStyles!\r\n                  .volumChart!.fallColor!;\r\n              })()\r\n            )}\r\n            opacity={(function() {\r\n              if (!CVData.hookObjs.candleObj.data.isDQuickUpdateing) {\r\n                return alpha;\r\n              }\r\n              return 1;\r\n            })()}\r\n            size={{\r\n              width: (function() {\r\n                if (!CVData.hookObjs.candleObj.data.isDQuickUpdateing) {\r\n                  return item.candleWidth!;\r\n                }\r\n                return 1;\r\n              })(),\r\n              height: currentHeight,\r\n            }}\r\n            position={{\r\n              x: item.currentTick!.cPosition.x!,\r\n              y: CVData.hookObjs.xAxisObj.data.linePosition.y,\r\n            }}\r\n            alignX=\"center\"\r\n            alignY=\"bottom\"\r\n          ></Rectangle>\r\n        );\r\n      } else {\r\n        result.push(\r\n          <React.Fragment key={item.time + '_volume'}></React.Fragment>\r\n        );\r\n      }\r\n\r\n      index++;\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  /* \t\tconst makeChat = function () {\r\n\t\t\tlet result: React.JSX.Element[] = [];\r\n\t\t\tlet index = 0;\r\n\r\n\t\t\tfor (var item of CVData.hookObjs.candleObj.data.displayCandleData) {\r\n\t\t\t\tlet alpha = CVData.hookObjs.candleObj.initArgs.candleStyles?.volumChart?.alpha;\r\n\t\t\t\tlet currentHeight =\r\n\t\t\t\t\tCVData.hookObjs.candleObj.data.volumChartPixHeight *\r\n\t\t\t\t\t(Number(item.volume) / CVData.hookObjs.candleObj.data.volumChartViewMax);\r\n\r\n\t\t\t\tif (!item.isEscaped!) {\r\n\t\t\t\t\tresult.push(\r\n\t\t\t\t\t\t<Sprite\r\n\t\t\t\t\t\t\tkey={item.time + \"_volume\"}\r\n\t\t\t\t\t\t\twidth={(function () {\r\n\t\t\t\t\t\t\t\tif (!CVData.hookObjs.candleObj.data.isDQuickUpdateing) {\r\n\t\t\t\t\t\t\t\t\treturn item.candleWidth!;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\t\t\t})()}\r\n\t\t\t\t\t\t\theight={currentHeight}\r\n\t\t\t\t\t\t\tposition={{\r\n\t\t\t\t\t\t\t\tx: item.currentTick!.cPosition.x!,\r\n\t\t\t\t\t\t\t\ty: CVData.hookObjs.xAxisObj.data.linePosition.y,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttexture={PIXI.Texture.WHITE}\r\n\t\t\t\t\t\t\ttint={PIXI.utils.string2hex(\r\n\t\t\t\t\t\t\t\t(function () {\r\n\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\titem.candleColor! ===\r\n\t\t\t\t\t\t\t\t\t\tCVData.hookObjs.candleObj.initArgs.candleStyles!.candleRiseColor!\r\n\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\treturn CVData.hookObjs.candleObj.initArgs.candleStyles!.volumChart!.riseColor!;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\treturn CVData.hookObjs.candleObj.initArgs.candleStyles!.volumChart!.fallColor!;\r\n\t\t\t\t\t\t\t\t})()\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\talpha={(function () {\r\n\t\t\t\t\t\t\t\tif (!CVData.hookObjs.candleObj.data.isDQuickUpdateing) {\r\n\t\t\t\t\t\t\t\t\treturn CVData.hookObjs.candleObj.initArgs.candleStyles!.volumChart!.alpha;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\t\t\t})()}\r\n\t\t\t\t\t\t\tanchor=\"0.5,1\"\r\n\t\t\t\t\t\t></Sprite>\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.push(<React.Fragment key={item.time + \"_volume\"}></React.Fragment>);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}; */\r\n\r\n  //===============effects==================\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      if (isMounted === false) {\r\n        setIsMounted(true);\r\n      }\r\n    },\r\n    [isMounted]\r\n  );\r\n\r\n  useEffect(function(): ReturnType<React.EffectCallback> {\r\n    return function(): void {\r\n      setIsMounted(false);\r\n    };\r\n  }, []);\r\n\r\n  let chat = useMemo(\r\n    function() {\r\n      return makeChat();\r\n    },\r\n    [\r\n      CVData.hookObjs.candleObj.data.displayCandleData,\r\n      CVData.hookObjs.candleObj.data.isDQuickUpdateing,\r\n      CVData.hookObjs.candleObj.data.volumChartViewMax,\r\n      CVData.hookObjs.candleObj.data.volumChartPixHeight,\r\n      CVData.hookObjs.candleObj.initArgs.candleStyles!.volumChart!.riseColor,\r\n      CVData.hookObjs.candleObj.initArgs.candleStyles!.volumChart!.fallColor,\r\n      CVData.hookObjs.candleObj.initArgs.candleStyles!.volumChart!.alpha,\r\n      CVData.hookObjs.candleObj.initArgs.candleStyles!.volumChart!.enabled,\r\n    ]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Container x={CVData.hookObjs.xAxisObj.data.x}>{chat}</Container>\r\n    </>\r\n  );\r\n};\r\n\r\n//使用memo不让其因为上级节点的更新而频繁更新\r\nexport default memo(VolumChat);\r\n","/**\r\n * 廖力编写\r\n * 模块名称：\r\n * 模块说明：\r\n * 编写时间：\r\n */\r\nimport React, { useEffect, useState, FC, ReactElement, useMemo } from 'react';\r\nimport '../index.module.css';\r\nimport { useCandleViewContext } from '../context/candleViewContext';\r\nimport { thousandsSplit } from '../utils/consts';\r\nimport BigNumber from 'bignumber.js';\r\nimport { tickItem } from '../interface/itemsInterFace';\r\nimport { LANGUAGES } from '../utils/languages';\r\n\r\n/**\r\n * 传入参数\r\n */\r\nexport interface iprops {}\r\n\r\nconst Info: FC<iprops> = ({}, _ref): ReactElement => {\r\n  //===============useHooks=================\r\n  const CVData = useCandleViewContext();\r\n\r\n  //===============state====================\r\n  const [isMounted, setIsMounted] = useState<boolean>(false);\r\n\r\n  //===============static===================\r\n\r\n  //===============ref======================\r\n\r\n  //===============function=================\r\n  const makeInfo = function() {\r\n    if (!CVData.initArgs.enableinfo) {\r\n      return null;\r\n    }\r\n\r\n    if (\r\n      CVData.hookObjs.xAxisObj!.data!.tooltipState !== null &&\r\n      CVData.hookObjs.xAxisObj.data.tooltipIsShow &&\r\n      typeof CVData.hookObjs.candleObj.data.cursorCandleItem !== 'undefined' &&\r\n      CVData.hookObjs.candleObj.data.cursorCandleItem !== null\r\n    ) {\r\n      let _tooltipState = CVData.hookObjs.xAxisObj!.data!.tooltipState!;\r\n      let item = CVData.hookObjs.candleObj.data.cursorCandleItem;\r\n      return (\r\n        <>\r\n          <div className={'info'}>\r\n            <div className={'timetype'}>\r\n              <label>\r\n                {\r\n                  LANGUAGES[CVData.initArgs.language!].timeFormat[\r\n                    CVData.hookObjs.xAxisObj.data.currentTimeType?.lang!\r\n                  ]\r\n                }\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <span>Date:</span>\r\n              <label>\r\n                {CVData.hookObjs.xAxisObj.initArgs.tooltip?.label?.formatter!(\r\n                  _tooltipState.relatedTickItem!\r\n                )}\r\n              </label>\r\n\r\n              <label>GMT +{CVData.initArgs.timeZone?.displayTimeZone}</label>\r\n            </div>\r\n            <div>\r\n              <span>Open:</span>\r\n              <label>\r\n                {thousandsSplit(Number(new BigNumber(item.open).toFixed(3)))}\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <span>Close:</span>\r\n              <label>\r\n                {thousandsSplit(Number(new BigNumber(item.close).toFixed(3)))}\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <span>High:</span>\r\n              <label>\r\n                {thousandsSplit(Number(new BigNumber(item.high).toFixed(3)))}\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <span>Low:</span>\r\n              <label>\r\n                {thousandsSplit(Number(new BigNumber(item.low).toFixed(3)))}\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <span>Volume:</span>\r\n              <label>\r\n                {thousandsSplit(Number(new BigNumber(item.volume).toFixed(3)))}\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    } else if (CVData.hookObjs.candleObj.data.latestCandleItem !== null) {\r\n      let currentItem = CVData.hookObjs.candleObj.data.latestCandleItem;\r\n      return (\r\n        <>\r\n          <div className={'info'}>\r\n            <div className={'timetype'}>\r\n              <label>\r\n                {\r\n                  LANGUAGES[CVData.initArgs.language!].timeFormat[\r\n                    CVData.hookObjs.xAxisObj.data.currentTimeType?.lang!\r\n                  ]\r\n                }\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <span>Date:</span>\r\n              <label>\r\n                {CVData.hookObjs.xAxisObj.initArgs.tooltip?.label?.formatter!({\r\n                  value: currentItem.time,\r\n                } as tickItem)}\r\n              </label>\r\n              <label>GMT +{CVData.initArgs.timeZone?.displayTimeZone}</label>\r\n            </div>\r\n            <div>\r\n              <span>Open:</span>\r\n              <label>\r\n                {thousandsSplit(\r\n                  Number(new BigNumber(currentItem.open).toFixed(3))\r\n                )}\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <span>Current:</span>\r\n              <label>\r\n                {thousandsSplit(\r\n                  Number(new BigNumber(currentItem.close).toFixed(3))\r\n                )}\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <span>High:</span>\r\n              <label>\r\n                {thousandsSplit(\r\n                  Number(new BigNumber(currentItem.high).toFixed(3))\r\n                )}\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <span>Low:</span>\r\n              <label>\r\n                {thousandsSplit(\r\n                  Number(new BigNumber(currentItem.low).toFixed(3))\r\n                )}\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <span>Volume:</span>\r\n              <label>\r\n                {thousandsSplit(\r\n                  Number(new BigNumber(currentItem.volume).toFixed(3))\r\n                )}\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  //===============effects==================\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      if (isMounted === false) {\r\n        setIsMounted(true);\r\n      }\r\n    },\r\n    [isMounted]\r\n  );\r\n\r\n  useEffect(function(): ReturnType<React.EffectCallback> {\r\n    return function(): void {\r\n      setIsMounted(false);\r\n    };\r\n  }, []);\r\n\r\n  let title = useMemo(\r\n    function() {\r\n      if (CVData.initArgs.enableTitle) {\r\n        return <div className={'title'}>{CVData.initArgs.title}</div>;\r\n      }\r\n      return null;\r\n    },\r\n    [CVData.initArgs.title]\r\n  );\r\n\r\n  let infoLayer = useMemo(\r\n    function() {\r\n      return makeInfo();\r\n    },\r\n    [\r\n      CVData.hookObjs.candleObj.data.latestCandleItem,\r\n      CVData.hookObjs.xAxisObj.data.tooltipIsShow,\r\n      CVData.hookObjs.candleObj.data.cursorCandleItem,\r\n    ]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div className={'infoDisplayLayer'}>\r\n        <>\r\n          {title}\r\n          {infoLayer}\r\n        </>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Info;\r\n","/**\r\n * 廖力编写\r\n * 模块名称：\r\n * 模块说明：\r\n * 编写时间：\r\n */\r\nimport React, { useEffect, useState, FC, ReactElement } from 'react';\r\nimport '../assets/styles/loaddingLay.module.css';\r\nimport { useCandleViewContext } from '../context/candleViewContext';\r\n\r\n/**\r\n * 传入参数\r\n */\r\nexport interface iprops {\r\n  color?: 'black' | 'white';\r\n}\r\n\r\nconst Loading: FC<iprops> = ({ color = 'black' }, _ref): ReactElement => {\r\n  //===============useHooks=================\r\n  const CVData = useCandleViewContext();\r\n\r\n  //===============state====================\r\n  const [isMounted, setIsMounted] = useState<boolean>(false);\r\n\r\n  //===============static===================\r\n\r\n  //===============ref======================\r\n\r\n  //===============function=================\r\n\r\n  //===============effects==================\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      if (isMounted === false) {\r\n        setIsMounted(true);\r\n      }\r\n    },\r\n    [isMounted]\r\n  );\r\n\r\n  useEffect(function(): ReturnType<React.EffectCallback> {\r\n    return function(): void {\r\n      setIsMounted(false);\r\n    };\r\n  }, []);\r\n\r\n  if (\r\n    CVData.initArgs.data?.dynamicData?.showLoading &&\r\n    CVData.hookObjs.candleObj.data.isFetchingData\r\n  ) {\r\n    return (\r\n      <>\r\n        <div className={'cdcdv_l_container' + ' ' + color}></div>\r\n      </>\r\n    );\r\n  } else if (!CVData.hookObjs.candleObj.data.isFinishedInit) {\r\n    return (\r\n      <>\r\n        <div className={'cdcdv_l_container' + ' ' + color}></div>\r\n      </>\r\n    );\r\n  }\r\n  {\r\n    return <></>;\r\n  }\r\n};\r\nexport default Loading;\r\n","/**\r\n * 廖力编写\r\n * 模块名称：交易图表\r\n * 模块说明：用于模仿tradingView做的交易实时图表\r\n * 编写时间：2024年5月25日 00:30:05\r\n */\r\nimport React, {\r\n\tuseEffect,\r\n\tuseRef,\r\n\tuseState,\r\n\tforwardRef,\r\n\tuseImperativeHandle,\r\n\tFC,\r\n\tReactElement,\r\n\tcreateContext,\r\n\tuseContext,\r\n\tMouseEventHandler,\r\n\tMouseEvent,\r\n\tWheelEvent,\r\n\tmemo,\r\n\tTouchEvent,\r\n} from \"react\";\r\nimport { Stage, Container, Sprite, PixiComponent } from \"@pixi/react\";\r\nimport * as PIXI from \"pixi.js\";\r\nimport useJquery, { jQueryObject, isRunningInServer } from \"@bobliao/use-jquery-hook\";\r\nimport \"./index.module.css\";\r\nimport { IuseCandleViewContext, useCandleViewContext } from \"./context/candleViewContext\";\r\nimport ResizeObserver from \"resize-observer-polyfill\";\r\nimport useDebounce from \"./hooks/debounceHook\";\r\nimport { getLength, getSpaceSize } from \"./utils/consts\";\r\nimport XAxis from \"./com/xAxis\";\r\nimport { IcandleViewContext } from \"./interface/contextInterFace\";\r\nimport { pointCoord } from \"./interface/itemsInterFace\";\r\nimport YAxis from \"./com/yAxis\";\r\nimport Data from \"./com/data\";\r\nimport NetLines from \"./com/netLines\";\r\nimport DataToolTip from \"./com/dataToolTip\";\r\nimport VolumChart from \"./com/volumChart\";\r\nimport Info from \"./com/info\";\r\nimport Loading from \"./com/loadingLay\";\r\n\r\n/**\r\n * 传入参数\r\n */\r\nexport interface iprops {}\r\n\r\n/**\r\n * 创建一个需要全局使用的钱包context\r\n **/\r\nexport const candleViewPixiContext = createContext<IcandleViewContext>({} as IcandleViewContext);\r\nexport const useCandleViewPixiContext: IuseCandleViewContext = function (): IcandleViewContext {\r\n\tvar r: IcandleViewContext = useContext(candleViewPixiContext);\r\n\treturn r;\r\n};\r\n\r\nconst CandleView: FC<iprops> = ({}, _ref): ReactElement => {\r\n\t//===============useHooks=================\r\n\tconst CVData = useCandleViewContext();\r\n\tconst $ = useJquery();\r\n\tconst resizeDebounce = useDebounce();\r\n\r\n\t//===============state====================\r\n\tconst [isMounted, setIsMounted] = useState<boolean>(false);\r\n\r\n\t/**\r\n\t *组件当前位置\r\n\t */\r\n\tconst [offset, setoffset] = useState<pointCoord>({ x: 0, y: 0 });\r\n\r\n\t/* 鼠标在组件中的位置 */\r\n\tconst [relativePosition, setrelativePosition] = useState<pointCoord>({ x: 0, y: 0 });\r\n\r\n\t/**\r\n\t *鼠标是否按下\r\n\t */\r\n\tconst [isMouseDown, setisMouseDown] = useState<boolean>(false);\r\n\r\n\t/**\r\n\t *鼠标按下时的位置\r\n\t */\r\n\tconst [mouseDownPosition, setmouseDownPosition] = useState<pointCoord>({ x: 0, y: 0 });\r\n\r\n\t/**\r\n\t *鼠标实时位置\r\n\t */\r\n\tconst [mousePosition, setmousePosition] = useState<pointCoord>({ x: 0, y: 0 });\r\n\tconst [touchScaleStartLength, settouchScaleStartLength] = useState<number>(0);\r\n\r\n\t/**\r\n\t *是否触摸缩放\r\n\t */\r\n\tconst [isTouchScale, setisTouchScale] = useState<boolean>(false);\r\n\r\n\t//===============static===================\r\n\r\n\t//===============ref======================\r\n\tconst canvasConatiner = useRef<HTMLDivElement>(null);\r\n\tconst resizeObserverRef = useRef<ResizeObserver | null>(null);\r\n\r\n\t//===============function=================\r\n\r\n\t/**\r\n\t *初始化CandleView\r\n\t */\r\n\tconst initCandleView = async function (): Promise<void> {\r\n\t\t//获得画布尺寸\r\n\t\tgetCanvasSize();\r\n\r\n\t\t//创建resize\r\n\t\tcreateResizeObserver();\r\n\r\n\t\t//初始化背景颜色\r\n\t\tCVData.funcs.setcanvasBackgroundColor(CVData.initArgs.backgroundColor!);\r\n\t};\r\n\r\n\t/**\r\n\t *获得画布尺寸\r\n\t */\r\n\tconst getCanvasSize = function () {\r\n\t\tif (CVData.initArgs.height! === \"auto\") {\r\n\t\t\t$(canvasConatiner.current).parent().css(\"overflow\", \"hidden\");\r\n\t\t\t$(canvasConatiner.current).parent().css(\"position\", \"relative\");\r\n\t\t}\r\n\r\n\t\t//如果放在容器里但是没指定容器高度\r\n\t\tif ($(canvasConatiner.current).parent().height() === 0 && CVData.initArgs.height! === \"auto\") {\r\n\t\t\t$(canvasConatiner.current).parent().height(500);\r\n\t\t}\r\n\r\n\t\t//如果没有放在特定容器里\r\n\t\tif (\r\n\t\t\t$(canvasConatiner.current).parent() !== 0 &&\r\n\t\t\tCVData.initArgs.height! === \"auto\" &&\r\n\t\t\t($(canvasConatiner.current).next().length !== 0 || $(canvasConatiner.current).prev().length !== 0)\r\n\t\t) {\r\n\t\t\tCVData.initArgs.height = 500;\r\n\t\t}\r\n\r\n\t\t//设置宽度\r\n\t\tCVData.funcs.setcanvasWidth(\r\n\t\t\t//\r\n\t\t\tgetSpaceSize(\r\n\t\t\t\t//\r\n\t\t\t\tCVData.initArgs.width!,\r\n\t\t\t\t$(canvasConatiner.current).parent().width()\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\t//设置高度\r\n\t\tCVData.funcs.setcanvasHeight(\r\n\t\t\t//\r\n\t\t\tgetSpaceSize(\r\n\t\t\t\t//\r\n\t\t\t\tCVData.initArgs.height!,\r\n\t\t\t\t$(canvasConatiner.current).parent().height()\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tlet offset: any = $(canvasConatiner.current).offset();\r\n\t\t//获得组件当前位置\r\n\t\tsetoffset({ x: offset.left, y: offset.top });\r\n\t};\r\n\r\n\t/**\r\n\t *创建reasize\r\n\t */\r\n\tconst createResizeObserver = function () {\r\n\t\tif (canvasConatiner.current !== null) {\r\n\t\t\tresizeObserverRef.current = new ResizeObserver((entries) => {\r\n\t\t\t\tif (entries.length > 0) {\r\n\t\t\t\t\tif (CVData.initArgs.resizeDebounceTime !== 0) {\r\n\t\t\t\t\t\tresizeDebounce(function () {\r\n\t\t\t\t\t\t\tgetCanvasSize();\r\n\t\t\t\t\t\t}, CVData.initArgs.resizeDebounceTime!);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tgetCanvasSize();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t//监听它的上级的大小变化\r\n\t\t\tresizeObserverRef.current.observe($(canvasConatiner.current).parent()[0]);\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t *清除resize\r\n\t */\r\n\tconst clearObserver = function () {\r\n\t\tif (resizeObserverRef.current !== null) {\r\n\t\t\tresizeObserverRef.current.disconnect();\r\n\t\t\tresizeObserverRef.current = null;\r\n\t\t}\r\n\t};\r\n\t/* 触摸 */\r\n\tconst onTouchStartContainer = function (event: TouchEvent<HTMLDivElement>) {\r\n\t\t//开启了正在加载时阻止用户操作\r\n\t\tif (\r\n\t\t\tCVData.initArgs.data?.dynamicData?.stopUserOperateWhenLoading === true &&\r\n\t\t\tCVData.hookObjs.candleObj.data.isFetchingData\r\n\t\t) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (typeof event.targetTouches[0] !== \"undefined\" && typeof event.targetTouches[1] !== \"undefined\") {\r\n\t\t\tsetisTouchScale(true);\r\n\t\t\tsettouchScaleStartLength(\r\n\t\t\t\tgetLength(\r\n\t\t\t\t\t{ x: event.targetTouches[0].pageX, y: event.targetTouches[0].pageY },\r\n\t\t\t\t\t{ x: event.targetTouches[1].pageX, y: event.targetTouches[1].pageY }\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetisMouseDown(true);\r\n\t\tsetmouseDownPosition({\r\n\t\t\tx: event.targetTouches[0].pageX,\r\n\t\t\ty: event.targetTouches[0].pageY,\r\n\t\t});\r\n\t\tsetmousePosition({\r\n\t\t\tx: event.targetTouches[0].pageX,\r\n\t\t\ty: event.targetTouches[0].pageY,\r\n\t\t});\r\n\t\tsetrelativePosition({\r\n\t\t\tx: event.targetTouches[0].pageX - offset.x,\r\n\t\t\ty: event.targetTouches[0].pageY - offset.y,\r\n\t\t});\r\n\t};\r\n\tconst onTouchMoveContainer = function (event: TouchEvent<HTMLDivElement>) {\r\n\t\t//开启了正在加载时阻止用户操作\r\n\t\tif (\r\n\t\t\tCVData.initArgs.data?.dynamicData?.stopUserOperateWhenLoading === true &&\r\n\t\t\tCVData.hookObjs.candleObj.data.isFetchingData\r\n\t\t) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (typeof event.targetTouches[0] !== \"undefined\" && typeof event.targetTouches[1] !== \"undefined\") {\r\n\t\t\tlet left = Math.min(event.targetTouches[0].pageX, event.targetTouches[1].pageX);\r\n\t\t\tlet right = Math.max(event.targetTouches[0].pageX, event.targetTouches[1].pageX);\r\n\t\t\tlet point = (right - left) / 2 + left;\r\n\r\n\t\t\tlet length = getLength(\r\n\t\t\t\t{ x: event.targetTouches[0].pageX, y: event.targetTouches[0].pageY },\r\n\t\t\t\t{ x: event.targetTouches[1].pageX, y: event.targetTouches[1].pageY }\r\n\t\t\t);\r\n\r\n\t\t\tif (Math.abs(length - touchScaleStartLength) > 3) {\r\n\t\t\t\tsettouchScaleStartLength(\r\n\t\t\t\t\tgetLength(\r\n\t\t\t\t\t\t{ x: event.targetTouches[0].pageX, y: event.targetTouches[0].pageY },\r\n\t\t\t\t\t\t{ x: event.targetTouches[1].pageX, y: event.targetTouches[1].pageY }\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t\tlet movement: \"zoomIn\" | \"zoomOut\" = \"zoomIn\";\r\n\t\t\t\tif (length - touchScaleStartLength < 0) {\r\n\t\t\t\t\tmovement = \"zoomOut\";\r\n\t\t\t\t}\r\n\t\t\t\tCVData.hookObjs.xAxisObj.funcs.scale(point, CVData.hookObjs.xAxisObj.data.scaleStep, movement);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (isMouseDown) {\r\n\t\t\tCVData.hookObjs.xAxisObj.funcs.moveContainer(mouseDownPosition.x, event.targetTouches[0].pageX, false);\r\n\t\t} else {\r\n\t\t\tCVData.hookObjs.xAxisObj.funcs.tooltipMove(\r\n\t\t\t\t{\r\n\t\t\t\t\tx: event.targetTouches[0].pageX - offset.x,\r\n\t\t\t\t\ty: event.targetTouches[0].pageY - offset.y,\r\n\t\t\t\t},\r\n\t\t\t\ttrue\r\n\t\t\t);\r\n\t\t}\r\n\t\tCVData.hookObjs.yAxisObj.funcs.tooltipMove(\r\n\t\t\t{\r\n\t\t\t\tx: event.targetTouches[0].pageX - offset.x,\r\n\t\t\t\ty: event.targetTouches[0].pageY - offset.y,\r\n\t\t\t},\r\n\t\t\ttrue\r\n\t\t);\r\n\t\tsetrelativePosition({\r\n\t\t\tx: event.targetTouches[0].pageX - offset.x,\r\n\t\t\ty: event.targetTouches[0].pageY - offset.y,\r\n\t\t});\r\n\t\tsetmousePosition({\r\n\t\t\tx: event.targetTouches[0].pageX,\r\n\t\t\ty: event.targetTouches[0].pageY,\r\n\t\t});\r\n\t\tevent.cancelable = true;\r\n\t\tevent.stopPropagation();\r\n\t};\r\n\tconst onTouchEndtContainer = function (event: TouchEvent<HTMLDivElement>) {\r\n\t\t//开启了正在加载时阻止用户操作\r\n\t\tif (\r\n\t\t\tCVData.initArgs.data?.dynamicData?.stopUserOperateWhenLoading === true &&\r\n\t\t\tCVData.hookObjs.candleObj.data.isFetchingData\r\n\t\t) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (isTouchScale) {\r\n\t\t\tsetisTouchScale(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tCVData.hookObjs.xAxisObj.funcs.moveContainer(mouseDownPosition.x, mousePosition.x, true);\r\n\t\tsetisMouseDown(false);\r\n\t\tsetmouseDownPosition({\r\n\t\t\tx: 0,\r\n\t\t\ty: 0,\r\n\t\t});\r\n\r\n\t\tsetrelativePosition({\r\n\t\t\tx: mousePosition.x - offset.x,\r\n\t\t\ty: mousePosition.y - offset.y,\r\n\t\t});\r\n\t};\r\n\r\n\t/* 鼠标进入 */\r\n\tconst onMouseEnterContainer = function (event: MouseEvent<HTMLDivElement>) {\r\n\t\t//开启了正在加载时阻止用户操作\r\n\t\tif (\r\n\t\t\tCVData.initArgs.data?.dynamicData?.stopUserOperateWhenLoading === true &&\r\n\t\t\tCVData.hookObjs.candleObj.data.isFetchingData\r\n\t\t) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetrelativePosition({\r\n\t\t\tx: event.pageX - offset.x,\r\n\t\t\ty: event.pageY - offset.y,\r\n\t\t});\r\n\t\tCVData.hookObjs.xAxisObj.funcs.tooltipMove(\r\n\t\t\t{\r\n\t\t\t\tx: event.pageX - offset.x,\r\n\t\t\t\ty: event.pageY - offset.y,\r\n\t\t\t},\r\n\t\t\ttrue\r\n\t\t);\r\n\t\tCVData.hookObjs.yAxisObj.funcs.tooltipMove(\r\n\t\t\t{\r\n\t\t\t\tx: event.pageX - offset.x,\r\n\t\t\t\ty: event.pageY - offset.y,\r\n\t\t\t},\r\n\t\t\ttrue\r\n\t\t);\r\n\t};\r\n\r\n\t/* 鼠标按下 */\r\n\tconst onMouseDownContainer = function (event: MouseEvent<HTMLDivElement>) {\r\n\t\t//开启了正在加载时阻止用户操作\r\n\t\tif (\r\n\t\t\tCVData.initArgs.data?.dynamicData?.stopUserOperateWhenLoading === true &&\r\n\t\t\tCVData.hookObjs.candleObj.data.isFetchingData\r\n\t\t) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetisMouseDown(true);\r\n\t\tsetmouseDownPosition({\r\n\t\t\tx: event.pageX,\r\n\t\t\ty: event.pageY,\r\n\t\t});\r\n\t\tsetrelativePosition({\r\n\t\t\tx: event.pageX - offset.x,\r\n\t\t\ty: event.pageY - offset.y,\r\n\t\t});\r\n\t};\r\n\r\n\t/* 鼠标移动 */\r\n\tconst onMouseMoveContainer = function (event: MouseEvent<HTMLDivElement>) {\r\n\t\t//开启了正在加载时阻止用户操作\r\n\t\tif (\r\n\t\t\tCVData.initArgs.data?.dynamicData?.stopUserOperateWhenLoading === true &&\r\n\t\t\tCVData.hookObjs.candleObj.data.isFetchingData\r\n\t\t) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (isMouseDown) {\r\n\t\t\tCVData.hookObjs.xAxisObj.funcs.moveContainer(mouseDownPosition.x, event.pageX, false);\r\n\t\t} else {\r\n\t\t\tCVData.hookObjs.xAxisObj.funcs.tooltipMove(\r\n\t\t\t\t{\r\n\t\t\t\t\tx: event.pageX - offset.x,\r\n\t\t\t\t\ty: event.pageY - offset.y,\r\n\t\t\t\t},\r\n\t\t\t\ttrue\r\n\t\t\t);\r\n\t\t}\r\n\t\tCVData.hookObjs.yAxisObj.funcs.tooltipMove(\r\n\t\t\t{\r\n\t\t\t\tx: event.pageX - offset.x,\r\n\t\t\t\ty: event.pageY - offset.y,\r\n\t\t\t},\r\n\t\t\ttrue\r\n\t\t);\r\n\t\tsetrelativePosition({\r\n\t\t\tx: event.pageX - offset.x,\r\n\t\t\ty: event.pageY - offset.y,\r\n\t\t});\r\n\t};\r\n\r\n\t/* 鼠标弹起 */\r\n\tconst onMouseUpContainer = function (event: MouseEvent<HTMLDivElement>) {\r\n\t\t//开启了正在加载时阻止用户操作\r\n\t\tif (\r\n\t\t\tCVData.initArgs.data?.dynamicData?.stopUserOperateWhenLoading === true &&\r\n\t\t\tCVData.hookObjs.candleObj.data.isFetchingData\r\n\t\t) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tCVData.hookObjs.xAxisObj.funcs.moveContainer(mouseDownPosition.x, event.pageX, true);\r\n\t\tsetisMouseDown(false);\r\n\t\tsetmouseDownPosition({\r\n\t\t\tx: 0,\r\n\t\t\ty: 0,\r\n\t\t});\r\n\r\n\t\tsetrelativePosition({\r\n\t\t\tx: event.pageX - offset.x,\r\n\t\t\ty: event.pageY - offset.y,\r\n\t\t});\r\n\t};\r\n\r\n\t/* 鼠标离开 */\r\n\tconst onMouseLeaveContainer = function (event: MouseEvent<HTMLDivElement>) {\r\n\t\t//开启了正在加载时阻止用户操作\r\n\t\tif (\r\n\t\t\tCVData.initArgs.data?.dynamicData?.stopUserOperateWhenLoading === true &&\r\n\t\t\tCVData.hookObjs.candleObj.data.isFetchingData\r\n\t\t) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetrelativePosition({\r\n\t\t\tx: event.pageX - offset.x,\r\n\t\t\ty: event.pageY - offset.y,\r\n\t\t});\r\n\t\tCVData.hookObjs.xAxisObj.funcs.tooltipMove(\r\n\t\t\t{\r\n\t\t\t\tx: event.pageX - offset.x,\r\n\t\t\t\ty: event.pageY - offset.y,\r\n\t\t\t},\r\n\t\t\tfalse\r\n\t\t);\r\n\t\tCVData.hookObjs.yAxisObj.funcs.tooltipMove(\r\n\t\t\t{\r\n\t\t\t\tx: event.pageX - offset.x,\r\n\t\t\t\ty: event.pageY - offset.y,\r\n\t\t\t},\r\n\t\t\tfalse\r\n\t\t);\r\n\t};\r\n\r\n\t/* 鼠标滚动 */\r\n\tconst onWheelContainer = function (e: WheelEvent<HTMLDivElement>) {\r\n\t\t//开启了正在加载时阻止用户操作\r\n\t\tif (\r\n\t\t\tCVData.initArgs.data?.dynamicData?.stopUserOperateWhenLoading === true &&\r\n\t\t\tCVData.hookObjs.candleObj.data.isFetchingData\r\n\t\t) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet movement: \"zoomIn\" | \"zoomOut\" = \"zoomIn\";\r\n\t\tif (e.deltaY > 0) {\r\n\t\t\tmovement = \"zoomOut\";\r\n\t\t}\r\n\t\tCVData.hookObjs.xAxisObj.funcs.scale(e.pageX, CVData.hookObjs.xAxisObj.data.scaleStep, movement);\r\n\t\te.nativeEvent.stopPropagation();\r\n\t\treturn false;\r\n\t};\r\n\tconst preventDefault = (e: any) => e.preventDefault();\r\n\r\n\t//===============effects==================\r\n\tuseEffect(\r\n\t\tfunction (): ReturnType<React.EffectCallback> {\r\n\t\t\tif (isMounted === false) {\r\n\t\t\t\tsetIsMounted(true);\r\n\t\t\t\tinitCandleView();\r\n\t\t\t\tcanvasConatiner.current!.addEventListener(\"wheel\", preventDefault);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[isMounted]\r\n\t);\r\n\r\n\tuseEffect(function (): ReturnType<React.EffectCallback> {\r\n\t\treturn function (): void {\r\n\t\t\tsetIsMounted(false);\r\n\t\t\tclearObserver();\r\n\t\t\tcanvasConatiner.current!.removeEventListener(\"wheel\", preventDefault);\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div\r\n\t\t\t\tclassName={\"cvcv_container\"}\r\n\t\t\t\tref={canvasConatiner}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\twidth: CVData.data.canvasWidth + \"px\",\r\n\t\t\t\t\theight: CVData.data.canvasHeight + \"px\",\r\n\t\t\t\t\tbackgroundColor: CVData.initArgs.backgroundColor,\r\n\t\t\t\t}}\r\n\t\t\t\tonMouseDown={onMouseDownContainer}\r\n\t\t\t\tonMouseMove={onMouseMoveContainer}\r\n\t\t\t\tonMouseUp={onMouseUpContainer}\r\n\t\t\t\tonWheel={onWheelContainer}\r\n\t\t\t\tonMouseEnter={onMouseEnterContainer}\r\n\t\t\t\tonMouseLeave={onMouseLeaveContainer}\r\n\t\t\t\tonTouchStart={onTouchStartContainer}\r\n\t\t\t\tonTouchMove={onTouchMoveContainer}\r\n\t\t\t\tonTouchEnd={onTouchEndtContainer}\r\n\t\t\t>\r\n\t\t\t\t<Loading color=\"white\"></Loading>\r\n\t\t\t\t<Info></Info>\r\n\t\t\t\t<Stage\r\n\t\t\t\t\toptions={{\r\n\t\t\t\t\t\tbackgroundAlpha: 0,\r\n\t\t\t\t\t\twidth: CVData.data.canvasWidth,\r\n\t\t\t\t\t\theight: CVData.data.canvasHeight,\r\n\t\t\t\t\t\tresolution: 2,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\twidth: CVData.data.canvasWidth,\r\n\t\t\t\t\t\theight: CVData.data.canvasHeight,\r\n\t\t\t\t\t\tbackgroundColor: CVData.initArgs.backgroundColor,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\twidth={CVData.data.canvasWidth}\r\n\t\t\t\t\theight={CVData.data.canvasHeight}\r\n\t\t\t\t\traf={false}\r\n\t\t\t\t\trenderOnComponentChange={true}\r\n\t\t\t\t>\r\n\t\t\t\t\t{/* 桥接context */}\r\n\t\t\t\t\t<candleViewPixiContext.Provider value={CVData}>\r\n\t\t\t\t\t\t<NetLines></NetLines>\r\n\t\t\t\t\t\t<VolumChart></VolumChart>\r\n\t\t\t\t\t\t<Data></Data>\r\n\t\t\t\t\t\t<XAxis></XAxis>\r\n\t\t\t\t\t\t<YAxis></YAxis>\r\n\t\t\t\t\t</candleViewPixiContext.Provider>\r\n\t\t\t\t</Stage>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\nexport default memo(CandleView);\r\n","import { createContext, useState, useContext, useRef, useCallback, useEffect, FC, ReactElement } from \"react\";\r\n\r\n/**\r\n * 防抖钩子\r\n */\r\nconst useDebounce = function () {\r\n\t/**\r\n\t * ============================state===========================\r\n\t */\r\n\tconst [isMounted, setIsMounted] = useState<boolean>(false);\r\n\r\n\tconst debounceFunction = useRef<(() => void) | null>(null);\r\n\tconst debounceTimeOut = useRef<NodeJS.Timeout | null>(null);\r\n\r\n\t/**\r\n\t * ==========================函数==============================\r\n\t */\r\n\r\n\tconst debounce = function (_func: () => void, _time: number) {\r\n\t\tif (typeof _time === \"undefined\") {\r\n\t\t\t_time = 500;\r\n\t\t}\r\n\t\tif (_time === 0) {\r\n\t\t\t_func();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tdebounceFunction.current = _func;\r\n\t\tif (debounceTimeOut.current !== null) {\r\n\t\t\tclearTimeout(debounceTimeOut.current);\r\n\t\t}\r\n\t\tdebounceTimeOut.current = setTimeout(function () {\r\n\t\t\tif (debounceFunction.current !== null) {\r\n\t\t\t\tdebounceFunction.current!();\r\n\t\t\t\tdebounceFunction.current = null;\r\n\t\t\t}\r\n\t\t}, _time);\r\n\t};\r\n\r\n\t/**\r\n\t * ==================================Effects===============================\r\n\t */\r\n\tuseEffect(function (): ReturnType<React.EffectCallback> {\r\n\t\tif (isMounted === false) {\r\n\t\t\tsetIsMounted(true);\r\n\t\t}\r\n\t\treturn function (): void {\r\n\t\t\tsetIsMounted(false);\r\n\t\t};\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, []);\r\n\r\n\treturn debounce;\r\n};\r\n\r\nexport default useDebounce;\r\n","import {\r\n  createContext,\r\n  useState,\r\n  useContext,\r\n  useRef,\r\n  useCallback,\r\n  useEffect,\r\n  FC,\r\n  ReactElement,\r\n} from 'react';\r\n\r\nimport { pointCoord } from '../interface/itemsInterFace';\r\nimport {\r\n  anyTimeToGMT0000ToTarget,\r\n  arrayToHash,\r\n  findIntersection,\r\n  getRangePosition,\r\n  getSpaceSize,\r\n  hasDuplicates,\r\n  localTimeToGMT0000,\r\n} from '../utils/consts';\r\nimport useThrottle from './throttleHook';\r\nimport { IAxisobj, IuseCandleHook, TAxis } from '../interface/hooksInterFace';\r\nimport { Iaxis } from '../interface/configInterFaces';\r\nimport { DEFAULTAXISVALUES } from '../utils/defaultValues';\r\nimport {\r\n  DAY,\r\n  FIFMIN,\r\n  FMIN,\r\n  HALFHOUR,\r\n  HOUR,\r\n  MONTH,\r\n  ONEMIN,\r\n  TENMIN,\r\n  THREE,\r\n  TWO,\r\n  WEEK,\r\n  YEAR,\r\n  findRoundTimeCountFromArray,\r\n  timeTypeMap,\r\n} from '../utils/timeFormatDefine';\r\nimport {\r\n  IToolTipItem,\r\n  findRoundTimeCountFromArrayDataItem,\r\n  jsonObjectType,\r\n  netLineItem,\r\n  numberScope,\r\n  tickItem,\r\n} from '../interface/itemsInterFace';\r\nimport { ItimeFormat, TtimeType } from '../interface/timeDefineInterFace';\r\n\r\n/**\r\n * x轴钩子\r\n */\r\nconst usexAxis: TAxis = function(args, igorn, config): IAxisobj {\r\n  const moveThrettor = useThrottle();\r\n\r\n  /**\r\n   *默认参数状态\r\n   */\r\n  const [initArgs, setinitArgs] = useState<Iaxis>(\r\n    Object.assign(true, DEFAULTAXISVALUES, args)\r\n  );\r\n  const [initArgsChange, setinitArgsChange] = useState<number>(-1);\r\n\r\n  //鼠标移动速度检测\r\n  const [mousePosition, setmousePosition] = useState<number>(0);\r\n  const [lastmousePosition, setlastmousePosition] = useState<number>(0);\r\n  const [mouseSpeedSec, setmouseSpeedSec] = useState<number>(0);\r\n  const [mouseSpeedTemp, setmouseSpeedTemp] = useState<number>(0);\r\n  const [mouseSpeedTimmer, setmouseSpeedTimmer] = useState<NodeJS.Timeout>();\r\n\r\n  /**\r\n   * ============================state===========================\r\n   */\r\n  const [isMounted, setIsMounted] = useState<boolean>(false);\r\n  /**\r\n   * 是否已完成初始化\r\n   */\r\n  const [isFinishedInit, setisFinishedInit] = useState<boolean>(false);\r\n  /**\r\n   * 普通的更新状态（位移，缩放）\r\n   */\r\n  const [xAxisUpdateTimeStamp, setxAxisUpdateTimeStamp] = useState<number>(-1);\r\n  const [\r\n    xAxisUpdateMoveMentTimeStamp,\r\n    setxAxisUpdateMoveMentTimeStamp,\r\n  ] = useState<number>(-1);\r\n  const [xAxisUpdateScaleTimeStamp, setxAxisUpdateScaleTimeStamp] = useState<\r\n    number\r\n  >(-1);\r\n\r\n  /**\r\n   * ============================tooltip state===========================\r\n   */\r\n\r\n  /**\r\n   * tooltip状态\r\n   */\r\n  const [tooltipState, setTooltipState] = useState<IToolTipItem | null>(\r\n    {} as IToolTipItem\r\n  );\r\n  /**\r\n   * tooltip显示状态\r\n   */\r\n  const [tooltipIsShow, settooltipIsShow] = useState<boolean>(false);\r\n\r\n  /**\r\n   * ============================缩放 state===========================\r\n   */\r\n\r\n  //总位移量\r\n  const [moveAmount, setmoveAmount] = useState<number>(0);\r\n  const [x, setx] = useState<number>(0);\r\n\r\n  //缩放量\r\n  const [scaleValue, setscaleValue] = useState<number>(1);\r\n  const [orgScope, setorgScope] = useState<numberScope>({ start: 0, end: 0 });\r\n\r\n  /**\r\n   * 每次缩放的增减值\r\n   */\r\n  const [scaleStep, setscaleStep] = useState<number>(0.1);\r\n\r\n  /**\r\n   * 计算显示tick时跳过tick的数量\r\n   */\r\n  const [tickStep, settickStep] = useState<number>(0);\r\n\r\n  /**\r\n   * ============================时间 state===========================\r\n   */\r\n\r\n  /**\r\n   * 当前时间类型\r\n   */\r\n  const [currentTimeType, setcurrentTimeType] = useState<ItimeFormat | null>(\r\n    null\r\n  );\r\n\r\n  /**\r\n   * 初始时间范围 (上次的时间范围 )\r\n   */\r\n  const [lastTimeScope, setlastTimeScope] = useState<{\r\n    /**\r\n     * 最左边的时间\r\n     */\r\n    start: number;\r\n    /**\r\n     * 最右边的时间\r\n     */\r\n    end: number;\r\n  }>({\r\n    start: 0,\r\n    end: 0,\r\n  });\r\n\r\n  /**\r\n   * 当前时间范围\r\n   */\r\n  const [currentTimeScope, setcurrentTimeScope] = useState<numberScope>({\r\n    /**\r\n     * 最左边的时间\r\n     */\r\n    start: 0,\r\n    /**\r\n     * 最右边的时间\r\n     */\r\n    end: 0,\r\n  });\r\n\r\n  /**\r\n   * view的全量尺寸\r\n   */\r\n  const [viewSize, setviewSize] = useState<{ width: number; height: number }>({\r\n    width: 0,\r\n    height: 0,\r\n  });\r\n\r\n  /**\r\n   * ============================line 属性state===========================\r\n   */\r\n\r\n  /**\r\n   * y轴的label空间\r\n   */\r\n  const [yAxisSpace, setyAxisSpace] = useState<number>(0);\r\n\r\n  /**\r\n   * line的位置（上左定位）\r\n   *内容区和label区的分割线的位置\r\n   */\r\n  const [linePosition, setlinePosition] = useState<pointCoord>({ x: 0, y: 0 });\r\n  const [labelSpace, setlabelSpace] = useState<number>(0);\r\n\r\n  /**\r\n   * line的尺寸\r\n   */\r\n  const [lineSize, setlineSize] = useState<{\r\n    /**\r\n     * line的长度\r\n     */\r\n    width: number;\r\n    /**\r\n     * line的粗细\r\n     */\r\n    size: number;\r\n  }>({\r\n    width: 0,\r\n    size: 0,\r\n  });\r\n\r\n  /**\r\n   * line的颜色\r\n   */\r\n  const [lineColor, setlineColor] = useState<string>('');\r\n\r\n  /**\r\n   * ============================网格线 属性state===========================\r\n   */\r\n\r\n  /**\r\n   * 网格线组\r\n   */\r\n  const [netLineArr, setnetLineArr] = useState<Array<netLineItem>>([]);\r\n\r\n  /**\r\n   * 网格线的最大数量\r\n   */\r\n  const [netLineMaxCount, setnetLineMaxCount] = useState<number>(0);\r\n\r\n  /**\r\n   * 轴网格线最小数量\r\n   */\r\n  const [netLineMinCount, setnetLineMinCount] = useState<number>(0);\r\n\r\n  /**\r\n   * ============================tick 属性state===========================\r\n   */\r\n  /**\r\n   * 真实tick组（实际的tick组）\r\n   */\r\n  const [tickArr, settickArr] = useState<Array<tickItem>>([]);\r\n\r\n  /**\r\n   * 显示tick组（用于显示的tick）\r\n   */\r\n  const [displayTickArr, setdisplayTickArr] = useState<Array<tickItem>>([]);\r\n  /**\r\n   * tick的共有数据宽度\r\n   */\r\n  const [displayTickCommonWidth, setdisplayTickCommonWidth] = useState<number>(\r\n    0\r\n  );\r\n  /**\r\n   * tick的共有像素宽度\r\n   */\r\n  const [displayTickCommonpixWidth, setdisplayTickCommonpixWidth] = useState<\r\n    number\r\n  >(0);\r\n\r\n  /**\r\n   * ============================ref===========================\r\n   */\r\n  const [candleObj, setcandleObj] = useState<IuseCandleHook | null>(null);\r\n\r\n  /**\r\n   * ============================静态变量===========================\r\n   */\r\n\r\n  /**\r\n   * ==========================函数==============================\r\n   */\r\n\r\n  /**\r\n   * 初始化轴\r\n   *@param {TtimeType} timeType 时间类型\r\n   *@param  {number} viewWidth 界面的全量宽度\r\n   *@param  {number} viewHeight 界面的全量高度\r\n   *@param {number | string} yAxisLabelSpace y轴的label空间\r\n   *@returns {void}\r\n   */\r\n  const initAxisSates = function(\r\n    timeType: TtimeType,\r\n    viewWidth: number,\r\n    viewHeight: number,\r\n    yAxisLabelSpace: number | string\r\n  ) {\r\n    /* 设置各项属性 */\r\n    setviewSize({\r\n      width: viewWidth,\r\n      height: viewHeight,\r\n    });\r\n    setyAxisSpace(getSpaceSize(yAxisLabelSpace, viewWidth));\r\n\r\n    setlinePosition({\r\n      x: 0,\r\n      y: viewHeight - getSpaceSize(initArgs.labelSpace!, viewHeight),\r\n    });\r\n    setlineSize({\r\n      width: viewWidth - getSpaceSize(yAxisLabelSpace, viewWidth),\r\n      size: initArgs.lineSize!,\r\n    });\r\n    setlabelSpace(getSpaceSize(initArgs.labelSpace!, viewHeight));\r\n    setlineColor(initArgs.lineColor!);\r\n    setnetLineMaxCount(initArgs.netLineMaxCount!);\r\n    setnetLineMinCount(initArgs.netLineMinCount!);\r\n\r\n    /* 重置属性 */\r\n    setorgScope({ start: 0, end: 0 });\r\n    setlastTimeScope({ start: 0, end: 0 });\r\n    setcurrentTimeScope({ start: 0, end: 0 });\r\n    settickArr([]);\r\n    setnetLineArr([]);\r\n    setdisplayTickArr([]);\r\n    setx(0);\r\n    setmoveAmount(0);\r\n\r\n    let tiemType = timeTypeMap[timeType];\r\n    setcurrentTimeType(tiemType);\r\n  };\r\n\r\n  const update = function() {\r\n    setlineColor(initArgs.lineColor!);\r\n  };\r\n\r\n  /**\r\n   * 往以前推测时间\r\n   */\r\n  const timeSpeculation_backrward = function(\r\n    timeInteger: number,\r\n    initTimeScopeStart: number\r\n  ): Array<number> {\r\n    var currentTime = timeInteger;\r\n    let timeScopeArr = [timeInteger];\r\n    while (true) {\r\n      currentTime = currentTimeType!.backwardSingleUnit(\r\n        currentTime,\r\n        config!.timeZone!.displayTimeZone!\r\n      );\r\n      if (currentTime < initTimeScopeStart) {\r\n        break;\r\n      } else {\r\n        //从顶端往里推入\r\n        timeScopeArr.unshift(currentTime);\r\n      }\r\n    }\r\n    return timeScopeArr;\r\n  };\r\n\r\n  /**\r\n   * 往未来推测时间\r\n   */\r\n  const timeSpeculation_forward = function(\r\n    timeInteger: number,\r\n    initTimeScopeEnd: number\r\n  ): Array<number> {\r\n    var currentTime = timeInteger;\r\n    let timeScopeArr = [timeInteger];\r\n    while (true) {\r\n      currentTime = currentTimeType!.forwardSingleUnit(\r\n        currentTime,\r\n        config!.timeZone!.displayTimeZone!\r\n      );\r\n      if (currentTime > initTimeScopeEnd) {\r\n        break;\r\n      } else {\r\n        //从后面里推入\r\n        timeScopeArr.push(currentTime);\r\n      }\r\n    }\r\n    return timeScopeArr;\r\n  };\r\n\r\n  /**\r\n   * 扩展tick组\r\n   */\r\n  const updateTicks = function(\r\n    targetTickArr: tickItem[],\r\n    timeScope: numberScope,\r\n    isComputCommonProp: boolean,\r\n    _moveAmount: number,\r\n    moveDir: 'add' | 'min' | 'all'\r\n  ): tickItem[] {\r\n    if (moveDir === 'add' || moveDir === 'all') {\r\n      let forwardArr = timeSpeculation_forward(\r\n        targetTickArr[targetTickArr.length - 1].value as number,\r\n        timeScope.end\r\n      );\r\n\r\n      if (forwardArr.length > 1) {\r\n        let arr = createTickers(\r\n          forwardArr,\r\n          timeScope,\r\n          isComputCommonProp,\r\n          _moveAmount\r\n        );\r\n        for (var i = 1; i < arr.length; i++) {\r\n          targetTickArr.push(arr[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (moveDir === 'min' || moveDir === 'all') {\r\n      let backwardArr = timeSpeculation_backrward(\r\n        targetTickArr[0].value as number,\r\n        timeScope.start\r\n      );\r\n      if (backwardArr.length > 1) {\r\n        let arr = createTickers(\r\n          backwardArr,\r\n          timeScope,\r\n          isComputCommonProp,\r\n          _moveAmount\r\n        );\r\n        for (var i = arr.length - 2; i > -1; i--) {\r\n          targetTickArr.unshift(arr[i]);\r\n        }\r\n      }\r\n    }\r\n    let commonPixProperties;\r\n    if (isComputCommonProp) {\r\n      commonPixProperties = computTickCommonProp(\r\n        timeScope,\r\n        lineSize.width,\r\n        targetTickArr.length\r\n      );\r\n    } else {\r\n      commonPixProperties = {\r\n        dataWidth: displayTickCommonWidth,\r\n        pixWidth: displayTickCommonpixWidth,\r\n        incriseWidth: (function() {\r\n          return lineSize.width * initArgs.displayPadding!;\r\n        })(),\r\n      };\r\n    }\r\n\r\n    if (isComputCommonProp) {\r\n      //更新位置\r\n      let index = 0;\r\n      for (var item of targetTickArr) {\r\n        let width = lineSize.width + commonPixProperties.incriseWidth * 2;\r\n        //计算位置\r\n        item.cPosition = {\r\n          x:\r\n            getRangePosition(Number(item.value), timeScope, width) -\r\n            commonPixProperties.incriseWidth -\r\n            _moveAmount,\r\n          y: linePosition.y,\r\n        };\r\n        item.index = index;\r\n        index++;\r\n\r\n        item = computDataPixTick(\r\n          item,\r\n          timeScope,\r\n          index,\r\n          commonPixProperties.dataWidth,\r\n          commonPixProperties.pixWidth\r\n        );\r\n      }\r\n      targetTickArr = targetTickArr.sort(function(a: tickItem, b: tickItem) {\r\n        return (a.value as number) - (b.value as number);\r\n      });\r\n    }\r\n\r\n    return targetTickArr;\r\n  };\r\n\r\n  /**\r\n   * 扩展displaytick组\r\n   */\r\n  const updateDisplayTicks = function(\r\n    targetTickArr: tickItem[],\r\n    newTickArr: tickItem[]\r\n  ): tickItem[] {\r\n    //将tickArr转换成hash 方便查找\r\n    let newTickHash = arrayToHash(newTickArr, 'value');\r\n    //往前扩展\r\n    //取最早的值\r\n    let correspondItem;\r\n    let nextStep = 0;\r\n\r\n    correspondItem = newTickHash[targetTickArr[0].value];\r\n    nextStep = correspondItem.index;\r\n\r\n    while (true) {\r\n      //获得下一个 step\r\n      nextStep = nextStep - 1 - tickStep;\r\n      if (typeof newTickArr[nextStep] === 'undefined') {\r\n        break;\r\n      } else {\r\n        targetTickArr.unshift(newTickArr[nextStep]);\r\n      }\r\n    }\r\n    //往未来扩展\r\n    correspondItem = newTickHash[targetTickArr[targetTickArr.length - 1].value];\r\n    nextStep = correspondItem.index;\r\n    while (true) {\r\n      //获得下一个 step\r\n      nextStep = nextStep + 1 + tickStep;\r\n      if (typeof newTickArr[nextStep] === 'undefined') {\r\n        break;\r\n      } else {\r\n        targetTickArr.unshift(newTickArr[nextStep]);\r\n      }\r\n    }\r\n\r\n    //去重\r\n    return Array.from(new Set(targetTickArr));\r\n  };\r\n\r\n  //计算tick的共有属性\r\n  const computTickCommonProp = function(\r\n    range: numberScope,\r\n    width: number,\r\n    totalArrLength: number\r\n  ) {\r\n    //扩展宽度 增加数据显示边界 padding\r\n    let incriseWidth = width * initArgs.displayPadding!;\r\n    width = width + incriseWidth * 2;\r\n    //计算数据宽度\r\n    let dataWidth = (range.end - range.start) / totalArrLength;\r\n    //计算像素宽度\r\n    let pixWidth = width / totalArrLength;\r\n    setdisplayTickCommonWidth(dataWidth);\r\n    setdisplayTickCommonpixWidth(pixWidth);\r\n\r\n    return { dataWidth, pixWidth, incriseWidth };\r\n  };\r\n\r\n  /**\r\n   * 计算tick的位置和数据关系数据\r\n   */\r\n  const computDataPixTick = function(\r\n    item: tickItem,\r\n    range: numberScope,\r\n    index: number,\r\n    dataWidth: number,\r\n    pixWidth: number\r\n  ): tickItem {\r\n    item.dataSpace = {\r\n      start: index * dataWidth + range.start,\r\n      end: (index + 1) * dataWidth + range.start,\r\n    };\r\n\r\n    //计算占用像素范围\r\n    item.pixSpace = {\r\n      start: item.cPosition.x - pixWidth / 2,\r\n      end: item.cPosition.x + pixWidth / 2,\r\n    };\r\n\r\n    return item;\r\n  };\r\n\r\n  /**\r\n   * 创建真实tick组\r\n   */\r\n  const createTickers = function(\r\n    arr: number[],\r\n    range: numberScope,\r\n    isComputCommonProp: boolean,\r\n    moveAmount: number\r\n  ): Array<tickItem> {\r\n    let result: Array<tickItem> = [];\r\n\r\n    let commonPixProperties;\r\n\r\n    if (isComputCommonProp) {\r\n      commonPixProperties = computTickCommonProp(\r\n        range,\r\n        lineSize.width,\r\n        arr.length\r\n      );\r\n    } else {\r\n      commonPixProperties = {\r\n        dataWidth: displayTickCommonWidth,\r\n        pixWidth: displayTickCommonpixWidth,\r\n        incriseWidth: (function() {\r\n          return lineSize.width * initArgs.displayPadding!;\r\n        })(),\r\n      };\r\n    }\r\n    let index = 0;\r\n    for (var item of arr) {\r\n      let resultItem: tickItem = {\r\n        color: initArgs.tickColor!,\r\n        length: getSpaceSize(initArgs.tickLength!, viewSize.height),\r\n        size: getSpaceSize(initArgs.tickSize!, viewSize.height),\r\n        cPosition: { x: 0, y: linePosition.y },\r\n        value: item,\r\n      };\r\n      let width = lineSize.width + commonPixProperties.incriseWidth * 2;\r\n      //计算位置\r\n      resultItem.cPosition = {\r\n        x:\r\n          getRangePosition(Number(resultItem.value), range, width) -\r\n          commonPixProperties.incriseWidth -\r\n          moveAmount,\r\n        y: linePosition.y,\r\n      };\r\n      resultItem.index = index;\r\n\r\n      result.push(\r\n        computDataPixTick(\r\n          resultItem,\r\n          range,\r\n          index,\r\n          commonPixProperties.dataWidth,\r\n          commonPixProperties.pixWidth\r\n        )\r\n      );\r\n      index++;\r\n    }\r\n    return result;\r\n  };\r\n\r\n  /**\r\n   * 创建显示Ticker\r\n   * 大于netLineMaxCount就每隔一个项目减半,减半还是大于netLineMaxCount,就再减半，模拟递归\r\n   */\r\n  const createDisplayTickers = function(arr: tickItem[]): tickItem[] {\r\n    let result = arr;\r\n    let _tickStep = 0;\r\n    while (true) {\r\n      if (result.length > netLineMaxCount) {\r\n        let cArr: tickItem[] = [];\r\n        let index = 0;\r\n        for (var item of result) {\r\n          if (index % 2) {\r\n            cArr.push(item);\r\n          }\r\n          index++;\r\n        }\r\n        result = cArr;\r\n\r\n        if (_tickStep < 1) {\r\n          _tickStep = _tickStep + 1;\r\n        } else {\r\n          _tickStep = _tickStep * 2 + 1;\r\n        }\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n    settickStep(_tickStep);\r\n    return result;\r\n  };\r\n\r\n  /**\r\n   * 通过像素位置查找目标tick\r\n   */\r\n  //const findTick = function (position: number, key: \"pixSpace\" | \"dataSpace\"): tickItem | null {\r\n  //\tvar _tickerArr = tickArr;\r\n  //\tvar _findArr: tickItem[] = [];\r\n  //\tvar centerPoint = 0;\r\n  //\twhile (true) {\r\n  //\t\tcenterPoint = Number(((_tickerArr.length - 1) / 2).toFixed(0));\r\n  //\t\tvar isFind = false;\r\n  //\r\n  //\t\tvar find = function (start: number, end: number) {\r\n  //\t\t\tif (_tickerArr[start][key]!.start <= position && _tickerArr[end][key]!.end >= position) {\r\n  //\t\t\t\tisFind = true;\r\n  //\t\t\t\t_findArr = _tickerArr.slice(start, end + 1);\r\n  //\t\t\t}\r\n  //\t\t};\r\n  //\r\n  //\t\tlet start = 0;\r\n  //\t\tlet end = centerPoint;\r\n  //\t\tif (_tickerArr.length === 2) {\r\n  //\t\t\tstart = 0;\r\n  //\t\t\tend = 0;\r\n  //\t\t}\r\n  //\t\t//在第一组范围里查找\r\n  //\t\tfind(start, end);\r\n  //\r\n  //\t\tif (_findArr.length === 1) {\r\n  //\t\t\treturn _findArr[0];\r\n  //\t\t}\r\n  //\t\tif (isFind) {\r\n  //\t\t\t_tickerArr = _findArr;\r\n  //\t\t\tcontinue;\r\n  //\t\t}\r\n  //\r\n  //\t\tstart = centerPoint;\r\n  //\t\tend = _tickerArr.length - 1;\r\n  //\t\tif (_tickerArr.length === 2) {\r\n  //\t\t\tstart = 1;\r\n  //\t\t\tend = 1;\r\n  //\t\t}\r\n  //\t\t//在第二组范围里查找\r\n  //\t\tfind(start, end);\r\n  //\r\n  //\t\tif (_findArr.length === 1) {\r\n  //\t\t\treturn _findArr[0];\r\n  //\t\t}\r\n  //\t\tif (isFind === false) {\r\n  //\t\t\treturn null;\r\n  //\t\t} else {\r\n  //\t\t\t_tickerArr = _findArr;\r\n  //\t\t}\r\n  //\t}\r\n  //};\r\n\r\n  //ai 优化后的版本\r\n  const findTick = function(\r\n    position: number,\r\n    key: 'pixSpace' | 'dataSpace'\r\n  ): tickItem | null {\r\n    let tickerArr = tickArr.slice(); // 复制数组以避免修改原数组\r\n    let centerIndex = 0;\r\n\r\n    while (tickerArr.length > 1) {\r\n      centerIndex = Math.floor(tickerArr.length / 2);\r\n      const midTick = tickerArr[centerIndex];\r\n\r\n      if (midTick[key]!.start <= position && midTick[key]!.end >= position) {\r\n        // 直接找到目标，无需继续查找\r\n        return midTick;\r\n      } else if (midTick[key]!.end < position) {\r\n        // 调整查找范围到右半部分\r\n        tickerArr = tickerArr.slice(centerIndex + 1);\r\n      } else {\r\n        // 调整查找范围到左半部分\r\n        tickerArr = tickerArr.slice(0, centerIndex);\r\n      }\r\n    }\r\n\r\n    // 若数组只剩一个元素且未直接命中，则判断该元素是否符合条件\r\n    return tickerArr.length === 1 && tickerArr[0][key]!.end >= position\r\n      ? tickerArr[0]\r\n      : null;\r\n  };\r\n\r\n  /**\r\n   * 创建x轴的网格 (纵向)\r\n   */\r\n  const createNetLines = function(displaytickItems: tickItem[]): netLineItem[] {\r\n    let results: netLineItem[] = [];\r\n    for (var item of displaytickItems) {\r\n      results.push({\r\n        /**\r\n         * 网格线颜色\r\n         */\r\n        color: initArgs.netLineColor!,\r\n        /**\r\n         * 网格线长度\r\n         */\r\n        length: linePosition.y,\r\n        /**\r\n         * 网格线粗细\r\n         */\r\n        size: initArgs.netLineSize!,\r\n        /**\r\n         * 网格线位置\r\n         * （上中定位）\r\n         */\r\n        cPosition: { x: item.cPosition.x, y: 0 },\r\n        /**\r\n         * 值\r\n         */\r\n        value: item.value,\r\n      });\r\n    }\r\n    return results;\r\n  };\r\n\r\n  //从所有等差数列的参数里算出具体的数列\r\n  //1.从数组里挑出合适数量的时间类型(最好两组一组时间稍多，一组稍少 )\r\n  //2.按照挑选的两个等差数列的参数，从tickArr中挑选出具体的数组\r\n  //2.合并两个数组\r\n  //3.输出\r\n  const createDisplayTickersByDate = function(\r\n    tickArr: tickItem[],\r\n    displayTickRoundValuesArray: findRoundTimeCountFromArrayDataItem[]\r\n  ) {\r\n    tickArr = [...tickArr];\r\n    let displayTickArr1: tickItem[] = [];\r\n    let displayTickArr2: tickItem[] = [];\r\n    let isFind = false;\r\n    for (let item of displayTickRoundValuesArray) {\r\n      if (isFind) {\r\n        if (item.count !== 0) {\r\n          displayTickArr2 = getTickWithFormated(tickArr, item);\r\n        }\r\n        break;\r\n      }\r\n      if (\r\n        item.count > initArgs.netLineMinCount! &&\r\n        item.count < initArgs.netLineMaxCount!\r\n      ) {\r\n        isFind = true;\r\n        displayTickArr1 = getTickWithFormated(tickArr, item);\r\n      }\r\n    }\r\n\r\n    let displayTickArr2Map = arrayToHash(displayTickArr2, 'value');\r\n    let result: tickItem[] = [];\r\n    for (var item of displayTickArr1) {\r\n      if (typeof displayTickArr2Map[item.value] !== 'undefined') {\r\n        result.push(displayTickArr2Map[item.value]);\r\n      } else {\r\n        result.push(item);\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const getTickWithFormated = function(\r\n    tickArr: tickItem[],\r\n    xCondition: findRoundTimeCountFromArrayDataItem\r\n  ): tickItem[] {\r\n    let result: tickItem[] = [];\r\n    //先取到第一个\r\n    let currentIndex = xCondition.startIndex;\r\n    let currentItem = tickArr[currentIndex];\r\n    currentItem.displayValue = xCondition.type.formatter(\r\n      Number(currentItem.value),\r\n      config?.language!,\r\n      config!.timeZone!.displayTimeZone\r\n    );\r\n    result.push(currentItem);\r\n    //然后再依次取剩下的\r\n    for (let i = xCondition.count; i > -1; i--) {\r\n      currentIndex = currentIndex - 1 - xCondition.step;\r\n      if (typeof tickArr[currentIndex] === 'undefined') {\r\n        break;\r\n      }\r\n      currentItem = tickArr[currentIndex];\r\n      currentItem.displayValue = xCondition.type.formatter(\r\n        Number(currentItem.value),\r\n        config?.language!,\r\n        config!.timeZone!.displayTimeZone\r\n      );\r\n      result.push(currentItem);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  /**\r\n   * 初始化时\r\n   * 制造轴数据\r\n   */\r\n  const createAxisData = function() {\r\n    /* \r\n            1.获得初始的时间范围\r\n            1.1 拟定时间范围，例如从当前时间往前推 24 小时，这是拟定的时间范围\r\n            1.2 确定标准时间范围，根据设置的时间类型 以当前时间进行取整+1 获得最末尾时间（最右边的时间），然后将时间往前推，每次一个单位（例如小时），直到超出“拟定时间范围” 得到最开始时间｛最左边的时间｝ 输出【｛最左边的时间｝，｛最左边的时间｝】时间范围； 真实 tick 数数组；\r\n            1.3 获得显示 tick 组 根据上面生成的 真实小时数数组；以及 最大 tick 显示数量，和最小显示 tick 数量；计算 显示 tick 组\r\n        */\r\n\r\n    /**\r\n     * 粗糙时间范围\r\n     */\r\n    let _flexTimeScope = currentTimeType!.getInitTimeScope(\r\n      initArgs.initTimePoint!\r\n    );\r\n    //如果设置了时间归零\r\n    //就需要把起始的时区算成GMT +0000\r\n    if (config!.timeZone!.displayTimeZone !== 'local') {\r\n      let date = new Date();\r\n      let localtimeZone = Math.abs(date.getTimezoneOffset() / 60);\r\n      _flexTimeScope.start = anyTimeToGMT0000ToTarget(\r\n        _flexTimeScope.start,\r\n        localtimeZone,\r\n        config!.timeZone!.displayTimeZone\r\n      );\r\n      _flexTimeScope.end = anyTimeToGMT0000ToTarget(\r\n        _flexTimeScope.end,\r\n        localtimeZone,\r\n        config!.timeZone!.displayTimeZone\r\n      );\r\n    }\r\n\r\n    /**\r\n     * 当前的整数时间\r\n     */\r\n    let _timeInteger = currentTimeType!.roundingFunction(\r\n      _flexTimeScope!.end!,\r\n      config!.timeZone!.displayTimeZone!\r\n    );\r\n    /* 对齐整数的时间组 */\r\n    let realTimeArr = timeSpeculation_backrward(\r\n      _timeInteger,\r\n      _flexTimeScope?.start!\r\n    );\r\n\r\n    /**\r\n     * 当前时间范围\r\n     */\r\n    let _currentTimeScope = _flexTimeScope;\r\n    /**\r\n     * 真实数据位置\r\n     */\r\n    let _tickerArr = createTickers(realTimeArr, _flexTimeScope, true, 0);\r\n\r\n    //挑选出所有按时间整数排列的等差数列的参数\r\n    let displayTickRoundValuesArray = findRoundTimeCountFromArray(\r\n      (_tickerArr as unknown) as jsonObjectType[],\r\n      config!.timeZone!.displayTimeZone!,\r\n      config!.timeFormat!,\r\n      'value'\r\n    );\r\n    let _displayTickerArr;\r\n    if (displayTickRoundValuesArray === null) {\r\n      /**\r\n       * 用于显示的ticker\r\n       */\r\n      _displayTickerArr = createDisplayTickers(_tickerArr);\r\n\r\n      _displayTickerArr = _displayTickerArr.sort(function(\r\n        a: tickItem,\r\n        b: tickItem\r\n      ) {\r\n        return (a.value as number) - (b.value as number);\r\n      });\r\n    } else {\r\n      //从所有等差数列的参数里算出具体的数列\r\n      _displayTickerArr = createDisplayTickersByDate(\r\n        _tickerArr,\r\n        displayTickRoundValuesArray\r\n      );\r\n    }\r\n\r\n    /**\r\n     * 网格线组\r\n     */\r\n    let _netLineArr = createNetLines(_displayTickerArr);\r\n\r\n    setorgScope(_flexTimeScope);\r\n    setlastTimeScope(_flexTimeScope);\r\n    setcurrentTimeScope(_currentTimeScope);\r\n    settickArr(_tickerArr);\r\n    setnetLineArr(_netLineArr);\r\n    setdisplayTickArr(_displayTickerArr);\r\n    setisFinishedInit(true);\r\n    setxAxisUpdateTimeStamp(+new Date());\r\n    //这里产生出来的指针会偏移一点，很正常 因为最末尾的时间是根据当前时间来的\r\n    //倒数第一个指针是根据最末尾时间取整得来的\r\n  };\r\n\r\n  /**\r\n   * 移动轴(鼠标拖拽)\r\n   */\r\n  const moveContainer = function(\r\n    start: number,\r\n    stop: number,\r\n    isSaveScope: boolean\r\n  ) {\r\n    if (isFinishedInit) {\r\n      let pureLength = stop - start;\r\n      let _moveAmount = pureLength + moveAmount;\r\n\r\n      //设置鼠标位置用于计算鼠标速度\r\n      setmousePosition(stop);\r\n\r\n      //设置x用于更新画面\r\n      setx(pureLength + moveAmount);\r\n      if (isSaveScope) {\r\n        setmoveAmount(_moveAmount);\r\n      }\r\n\r\n      //计算移动，并更新tick\r\n      window.requestAnimationFrame(function() {\r\n        moveAxis(start, stop, isSaveScope);\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 移动轴(鼠标拖拽)\r\n   */\r\n  const moveAxis = function(start: number, stop: number, isSaveScope: boolean) {\r\n    if (\r\n      candleObj?.data.isFetchingData &&\r\n      config?.data?.dynamicData?.stopUserOperateWhenLoading\r\n    ) {\r\n      return;\r\n    }\r\n    if (isFinishedInit) {\r\n      let width = lineSize.width;\r\n      //扩展宽度 增加数据显示边界 padding\r\n      let incriseWidth = width * initArgs.displayPadding!;\r\n      width = width + incriseWidth * 2;\r\n      //移动长度\r\n      let length = stop - start;\r\n      let pureLength = stop - start;\r\n      let _moveAmount = pureLength + moveAmount;\r\n      //加还是减\r\n      let sign: 'add' | 'min' = 'add';\r\n      if (length > 0) {\r\n        sign = 'min';\r\n      }\r\n\r\n      length = Math.abs(length);\r\n\r\n      //计算这段线在整个宽度里占有百分之多少\r\n      let prec = length / width;\r\n\r\n      //按比例计算出时间变化量\r\n      let changeScope = Number(\r\n        ((lastTimeScope.end - lastTimeScope.start) * prec).toFixed(0)\r\n      );\r\n      if (sign === 'min') {\r\n        changeScope = 0 - changeScope;\r\n      }\r\n\r\n      //从新计算currentTimeScope\r\n      let _currentTimeScope = {\r\n        start: lastTimeScope.start + changeScope,\r\n        end: lastTimeScope.end + changeScope,\r\n      };\r\n\r\n      //-----------------比例计算完成开始更新------------------\r\n      /**\r\n       * 用真实数组位置 以及当前取到的时间范围取交集\r\n       * 取所有tick的交集\r\n       */\r\n      let resultInterArr = findIntersection(tickArr, _currentTimeScope);\r\n\r\n      /**\r\n       * 用剩下的tick去进行扩展\r\n       */\r\n      let newTicks = updateTicks(\r\n        resultInterArr,\r\n        _currentTimeScope,\r\n        false,\r\n        _moveAmount,\r\n        (function() {\r\n          if (pureLength + moveAmount - x > 0) {\r\n            return 'min';\r\n          }\r\n\r\n          return 'add';\r\n        })()\r\n      );\r\n\r\n      /* let displayTickRoundValuesArray = findRoundTimeCountFromArray(\r\n\t\t\t\tnewTicks as unknown as jsonObjectType[],\r\n\t\t\t\t\"value\"\r\n\t\t\t); */\r\n\r\n      //挑选出所有按时间整数排列的等差数列的参数\r\n      let displayTickRoundValuesArray = findRoundTimeCountFromArray(\r\n        (newTicks as unknown) as jsonObjectType[],\r\n        config!.timeZone!.displayTimeZone!,\r\n        config!.timeFormat!,\r\n        'value'\r\n      );\r\n      let _displayTickerArr;\r\n      if (displayTickRoundValuesArray === null) {\r\n        /**\r\n         * 求新时间范围和旧显示tick的交集\r\n         * 旧显示tick的交集\r\n         */\r\n        let resultInterDisplayArr = findIntersection(\r\n          displayTickArr,\r\n          _currentTimeScope\r\n        );\r\n\r\n        if (resultInterDisplayArr.length === 0) {\r\n          _displayTickerArr = createDisplayTickers(newTicks);\r\n        } else {\r\n          _displayTickerArr = updateDisplayTicks(\r\n            resultInterDisplayArr,\r\n            newTicks\r\n          );\r\n        }\r\n        _displayTickerArr = _displayTickerArr.sort(function(\r\n          a: tickItem,\r\n          b: tickItem\r\n        ) {\r\n          return (a.value as number) - (b.value as number);\r\n        });\r\n      } else {\r\n        //从所有等差数列的参数里算出具体的数列\r\n        _displayTickerArr = createDisplayTickersByDate(\r\n          newTicks,\r\n          displayTickRoundValuesArray\r\n        );\r\n      }\r\n\r\n      /**\r\n       * 网格线组\r\n       */\r\n      let _netLineArr = createNetLines(_displayTickerArr);\r\n      setxAxisUpdateMoveMentTimeStamp(+new Date());\r\n      setcurrentTimeScope(_currentTimeScope);\r\n      settickArr(newTicks);\r\n      setnetLineArr(_netLineArr);\r\n      setdisplayTickArr(_displayTickerArr);\r\n      if (isSaveScope) {\r\n        setlastTimeScope(_currentTimeScope);\r\n      }\r\n      setxAxisUpdateTimeStamp(+new Date());\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 缩放\r\n   */\r\n  const scale = function(\r\n    point: number,\r\n    precent: number,\r\n    movement: 'zoomIn' | 'zoomOut' | 'keep'\r\n  ) {\r\n    if (\r\n      candleObj?.data.isFetchingData &&\r\n      config?.data?.dynamicData?.stopUserOperateWhenLoading\r\n    ) {\r\n      return;\r\n    }\r\n    if (tickArr.length > 24 * 60 * 2 && movement === 'zoomOut') {\r\n      return;\r\n    }\r\n\r\n    //最小缩放\r\n    if (tickArr.length <= netLineMinCount && movement === 'zoomIn') {\r\n      return;\r\n    }\r\n\r\n    if (isFinishedInit) {\r\n      let leftPrecent = point / lineSize.width;\r\n      let rightPrecent = 1 - leftPrecent;\r\n      leftPrecent = (precent * 100 * leftPrecent) / 100;\r\n      rightPrecent = (precent * 100 * rightPrecent) / 100;\r\n\r\n      /**\r\n       * 粗糙时间范围\r\n       */\r\n      let _currentTimeScope = lastTimeScope;\r\n      let total = _currentTimeScope.end - _currentTimeScope.start;\r\n      let q = {\r\n        start: total * leftPrecent,\r\n        end: total * rightPrecent,\r\n      };\r\n\r\n      if (movement === 'zoomIn') {\r\n        _currentTimeScope = {\r\n          start: _currentTimeScope.start + q.start,\r\n          end: _currentTimeScope.end - q.end,\r\n        };\r\n      }\r\n\r\n      if (movement === 'zoomOut') {\r\n        _currentTimeScope = {\r\n          start: _currentTimeScope.start - q.start,\r\n          end: _currentTimeScope.end + q.end,\r\n        };\r\n      }\r\n\r\n      let _tickArr = [...tickArr];\r\n\r\n      /**\r\n       * 当前的整数时间\r\n       */\r\n      /**\r\n       * 用真实数组位置 以及当前取到的时间范围取交集\r\n       * 取所有tick的交集\r\n       */\r\n      let resultInterArr = findIntersection(_tickArr, _currentTimeScope);\r\n      if (resultInterArr.length === 0) {\r\n        return;\r\n      }\r\n\r\n      /**\r\n       * 用剩下的tick去进行扩展\r\n       */\r\n      let newTicks = updateTicks(\r\n        resultInterArr,\r\n        _currentTimeScope,\r\n        true,\r\n        0,\r\n        'all'\r\n      );\r\n\r\n      //挑选出所有按时间整数排列的等差数列的参数\r\n      let displayTickRoundValuesArray = findRoundTimeCountFromArray(\r\n        (newTicks as unknown) as jsonObjectType[],\r\n        config!.timeZone!.displayTimeZone!,\r\n        config!.timeFormat!,\r\n        'value'\r\n      );\r\n\r\n      let _displayTickerArr;\r\n      if (displayTickRoundValuesArray === null) {\r\n        /**\r\n         * 用于显示的ticker\r\n         */\r\n        _displayTickerArr = createDisplayTickers(newTicks);\r\n        _displayTickerArr = _displayTickerArr.sort(function(\r\n          a: tickItem,\r\n          b: tickItem\r\n        ) {\r\n          return (a.value as number) - (b.value as number);\r\n        });\r\n      } else {\r\n        //从所有等差数列的参数里算出具体的数列\r\n        _displayTickerArr = createDisplayTickersByDate(\r\n          newTicks,\r\n          displayTickRoundValuesArray\r\n        );\r\n      }\r\n\r\n      /**\r\n       * 网格线组\r\n       */\r\n      let _netLineArr = createNetLines(_displayTickerArr);\r\n\r\n      //缩放量计算\r\n      let scale =\r\n        (_currentTimeScope.end - _currentTimeScope.start) /\r\n        (orgScope.end - orgScope.start);\r\n\r\n      setscaleValue(scale);\r\n      setlastTimeScope(_currentTimeScope);\r\n      setcurrentTimeScope(_currentTimeScope);\r\n      settickArr(newTicks);\r\n      setnetLineArr(_netLineArr);\r\n      setdisplayTickArr(_displayTickerArr);\r\n      setxAxisUpdateTimeStamp(+new Date());\r\n      setxAxisUpdateScaleTimeStamp(+new Date());\r\n      //setx(0);在数据钩子里设置这个，免得页面跳动\r\n      setmoveAmount(0);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * tooltip更新\r\n   */\r\n  const tooltipUpdate = function() {\r\n    if (isFinishedInit && tooltipIsShow) {\r\n      let _tooltipState: IToolTipItem | null = tooltipState;\r\n      if (_tooltipState === null) {\r\n        return;\r\n      }\r\n      _tooltipState.position.x =\r\n        _tooltipState.relatedTickItem?.cPosition.x! + x;\r\n      setTooltipState(_tooltipState);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * tooltip移动\r\n   */\r\n  const tooltipMove = function(position: pointCoord, isShowTooltip: boolean) {\r\n    if (isFinishedInit) {\r\n      let tooltipX = position.x;\r\n      if (tooltipX > lineSize.width) {\r\n        isShowTooltip = false;\r\n      }\r\n\r\n      settooltipIsShow(isShowTooltip);\r\n      if (isShowTooltip === false) {\r\n        return;\r\n      }\r\n\r\n      //通过像素位置进行二分法查找目标tick\r\n      let _tickItem: tickItem | null = findTick(\r\n        tooltipX - moveAmount,\r\n        'pixSpace'\r\n      );\r\n      if (_tickItem === null) {\r\n        setTooltipState(null);\r\n        return;\r\n      }\r\n      let _tooltipState: IToolTipItem = {\r\n        position: {\r\n          x: _tickItem.cPosition.x + moveAmount,\r\n          y: 0,\r\n        },\r\n        length: linePosition.y,\r\n        value: _tickItem.value as number,\r\n        relatedTickItem: _tickItem,\r\n        size: getSpaceSize(initArgs.tooltip!.lineSize!, viewSize.width),\r\n      };\r\n\r\n      setTooltipState(_tooltipState);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 更新轴\r\n   *@param  {number} viewWidth 界面的全量宽度\r\n   *@param  {number} viewHeight 界面的全量高度\r\n   *@param {number | string} yAxisLabelSpace y轴的label空间\r\n   *@returns {void}\r\n   */\r\n  const updateAxisSates = function(\r\n    viewWidth: number,\r\n    viewHeight: number,\r\n    yAxisLabelSpace: number | string\r\n  ) {\r\n    setviewSize({\r\n      width: viewWidth,\r\n      height: viewHeight,\r\n    });\r\n    setyAxisSpace(getSpaceSize(yAxisLabelSpace, viewWidth));\r\n    setlinePosition({\r\n      x: 0,\r\n      y: viewHeight - getSpaceSize(initArgs.labelSpace!, viewHeight),\r\n    });\r\n    setlineSize({\r\n      width: viewWidth - getSpaceSize(yAxisLabelSpace, viewWidth),\r\n      size: initArgs.lineSize!,\r\n    });\r\n  };\r\n\r\n  /* 重新计算大小 */\r\n  const resize = function() {\r\n    if (isFinishedInit) {\r\n      window.requestAnimationFrame(function() {\r\n        scale(viewSize.width / 2, 0, 'keep');\r\n      });\r\n    }\r\n  };\r\n\r\n  /* 鼠标移动速度检测器 */\r\n  const mouseSpeedDetecor = function() {\r\n    let speed = mousePosition - lastmousePosition;\r\n    setmouseSpeedSec(speed);\r\n    setlastmousePosition(mousePosition);\r\n    setUpMouseSpeedDetecor();\r\n  };\r\n\r\n  /* 打开鼠标移动速度检测器 */\r\n  const setUpMouseSpeedDetecor = function() {\r\n    let timeOut = setTimeout(() => {\r\n      setmouseSpeedTemp(+new Date());\r\n    }, 24);\r\n    setmouseSpeedTimmer(timeOut);\r\n  };\r\n\r\n  /* 销毁速度检测器 */\r\n  const destroyMouseSpeedDetecor = function() {\r\n    if (typeof mouseSpeedTimmer !== undefined) {\r\n      setmouseSpeedTemp(0);\r\n      clearTimeout(mouseSpeedTimmer);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * ==================================Effects===============================\r\n   */\r\n  useEffect(function(): ReturnType<React.EffectCallback> {\r\n    if (isMounted === false) {\r\n      setIsMounted(true);\r\n      setUpMouseSpeedDetecor();\r\n    }\r\n    return function(): void {\r\n      setIsMounted(false);\r\n      destroyMouseSpeedDetecor();\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  //侧鼠标速度\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      if (mouseSpeedTemp !== 0) {\r\n        mouseSpeedDetecor();\r\n      }\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },\r\n    [mouseSpeedTemp]\r\n  );\r\n\r\n  //初始化状态以后初始化数轴\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      if (currentTimeType !== null) {\r\n        createAxisData();\r\n      }\r\n\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },\r\n    [currentTimeType]\r\n  );\r\n\r\n  //初始化状态以后初始化数轴\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      resize();\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },\r\n    [viewSize]\r\n  );\r\n\r\n  //初始化状态以后初始化数轴\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      tooltipUpdate();\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },\r\n    [x]\r\n  );\r\n\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      if (initArgsChange !== -1) {\r\n        update();\r\n      }\r\n    },\r\n    [initArgsChange]\r\n  );\r\n\r\n  return {\r\n    data: {\r\n      /**\r\n       * 当前时间类型\r\n       */\r\n      currentTimeType,\r\n      /**\r\n       * 初始时间范围\r\n       */\r\n      lastTimeScope,\r\n      /**\r\n       * 当前时间范围\r\n       */\r\n      currentTimeScope,\r\n      /**\r\n       * line的位置（上左定位）\r\n       *内容区和label区的分割线的位置\r\n       */\r\n      linePosition,\r\n      /**\r\n       * line的尺寸\r\n       */\r\n      lineSize,\r\n      /**\r\n       * line的颜色\r\n       */\r\n      lineColor,\r\n      /**\r\n       * 网格线的最大数量\r\n       */\r\n      netLineMaxCount,\r\n      /**\r\n       * 网格线组\r\n       */\r\n      netLineArr,\r\n      /**\r\n       * 轴网格线最小数量\r\n       */\r\n      netLineMinCount,\r\n      /**\r\n       * 真实tick组（实际的tick空间）\r\n       */\r\n      tickArr,\r\n      /**\r\n       * 显示tick组（用于显示的tick）\r\n       */\r\n      displayTickArr,\r\n      /**\r\n       * 是否已完成初始化\r\n       */\r\n      isFinishedInit,\r\n      /**\r\n       * 每次缩放的增减值\r\n       */\r\n      scaleStep,\r\n      /**\r\n       * tooltip\r\n       */\r\n      tooltipState,\r\n      /**\r\n       * tooltip是否显示\r\n       */\r\n      tooltipIsShow,\r\n      labelSpace,\r\n      xAxisUpdateTimeStamp,\r\n      viewSize,\r\n      displayTickCommonWidth,\r\n      displayTickCommonpixWidth,\r\n      /* 移动量 */\r\n      moveAmount,\r\n      x,\r\n      xAxisUpdateMoveMentTimeStamp,\r\n      xAxisUpdateScaleTimeStamp,\r\n      mouseSpeedSec,\r\n    },\r\n    funcs: {\r\n      /**\r\n       * 设置初始时间范围\r\n       */\r\n      setlastTimeScope,\r\n      /**\r\n       * 设置当前时间范围\r\n       */\r\n      setcurrentTimeScope,\r\n      /**\r\n       * 设置line的位置（上左定位）\r\n       *内容区和label区的分割线的位置\r\n       */\r\n      setlinePosition,\r\n      /**\r\n       * 设置line的尺寸\r\n       */\r\n      setlineSize,\r\n      /**\r\n       * 设置line的颜色\r\n       */\r\n      setlineColor,\r\n      /**\r\n       * 设置网格线的最大数量\r\n       */\r\n      setnetLineMaxCount,\r\n      /**\r\n       * 设置网格线组\r\n       */\r\n      setnetLineArr,\r\n      /**\r\n       * 设置轴网格线最小数量\r\n       */\r\n      setnetLineMinCount,\r\n      /**\r\n       * 设置真实tick组（实际的tick空间）\r\n       */\r\n      settickArr,\r\n      /**\r\n       * 设置显示tick组（用于显示的tick）\r\n       */\r\n      setdisplayTickArr,\r\n      /**\r\n       * 初始化轴\r\n       *@param {TtimeType} timeType 时间类型\r\n       *@param  {number} viewWidth 界面的全量宽度\r\n       *@param  {number} viewHeight 界面的全量高度\r\n       *@param {number | string} yAxisLabelSpace y轴的label空间\r\n       *@returns {void}\r\n       */\r\n      initAxisSates,\r\n      /**\r\n       * 更新轴\r\n       *@param  {number} viewWidth 界面的全量宽度\r\n       *@param  {number} viewHeight 界面的全量高度\r\n       *@param {number | string} yAxisLabelSpace y轴的label空间\r\n       *@returns {void}\r\n       */\r\n      updateAxisSates,\r\n      /**\r\n       * 移动轴\r\n       */\r\n      moveAxis,\r\n      moveContainer,\r\n      /**\r\n       * 缩放轴\r\n       */\r\n      scale,\r\n      /**\r\n       * tooltip移动\r\n       */\r\n      tooltipMove,\r\n      setx,\r\n      setcandleObj,\r\n      setinitArgs: function(arg: Iaxis) {\r\n        setinitArgs(Object.assign(true, initArgs, arg));\r\n        setinitArgsChange(+new Date());\r\n      },\r\n    },\r\n\r\n    /**\r\n     *初始化时用到的参数\r\n     */\r\n    initArgs,\r\n  };\r\n};\r\n\r\nexport default usexAxis;\r\n","import { createContext, useState, useContext, useRef, useCallback, useEffect, FC, ReactElement } from \"react\";\r\n\r\nimport {} from \"../interface/contextInterFace\";\r\nimport { pointCoord } from \"../interface/itemsInterFace\";\r\nimport {\r\n\tgetDecimalOfLength,\r\n\tgetIntOfLength,\r\n\tgetSpaceSize,\r\n\troundToNearestTenBigNumber,\r\n\tshiftNumber,\r\n} from \"../utils/consts\";\r\nimport _bigNumber from \"bignumber.js\";\r\nimport { Iaxis } from \"../interface/configInterFaces\";\r\nimport { IAxisobj, IyAxisobj } from \"../interface/hooksInterFace\";\r\nimport { DEFAULTAXISVALUES } from \"../utils/defaultValues\";\r\nimport { IToolTipItem, netLineItem, numberScope, numberScopeString, tickItem } from \"../interface/itemsInterFace\";\r\n\r\n/**\r\n * y轴钩子\r\n */\r\nconst useyAxis = function (args: Iaxis, xAxis?: IAxisobj): IyAxisobj {\r\n\txAxis = xAxis!;\r\n\t/**\r\n\t *默认参数状态\r\n\t */\r\n\tconst [initArgs, setinitArgs] = useState<Iaxis>(Object.assign(true, DEFAULTAXISVALUES, args));\r\n\tconst [initArgsChange, setinitArgsChange] = useState<number>(-1);\r\n\t/**\r\n\t * ============================state===========================\r\n\t */\r\n\tconst [isMounted, setIsMounted] = useState<boolean>(false);\r\n\t/**\r\n\t * 是否已完成初始化\r\n\t */\r\n\tconst [isFinishedInit, setisFinishedInit] = useState<boolean>(false);\r\n\t/**\r\n\t * y轴的更新\r\n\t */\r\n\tconst [yAxisUpdateTimeStamp, setyAxisUpdateTimeStamp] = useState<number>(-1);\r\n\r\n\t/**\r\n\t * ============================tooltip state===========================\r\n\t */\r\n\r\n\t/**\r\n\t * tooltip状态\r\n\t */\r\n\tconst [tooltipState, setTooltipState] = useState<IToolTipItem | null>({} as IToolTipItem);\r\n\t/**\r\n\t * tooltip显示状态\r\n\t */\r\n\tconst [tooltipIsShow, settooltipIsShow] = useState<boolean>(false);\r\n\r\n\t/**\r\n\t * ============================数据 state===========================\r\n\t */\r\n\r\n\t/**\r\n\t * 当前数据范围\r\n\t */\r\n\tconst [currentDataScope, setcurrentDataScope] = useState<numberScopeString>({\r\n\t\t/**\r\n\t\t * 最下面的值\r\n\t\t */\r\n\t\tstart: \"0\",\r\n\t\t/**\r\n\t\t * 最上面的值\r\n\t\t */\r\n\t\tend: \"0\",\r\n\t});\r\n\r\n\t/**\r\n\t * 当前数据整体长度（从0开始）\r\n\t */\r\n\tconst [currentDataSpace, setcurrentDataSpace] = useState<string>(\"0\");\r\n\r\n\t/**\r\n\t * 当前数据相对0的位置(以start为基准 )\r\n\t */\r\n\tconst [currentDataPositionOfStart, setcurrentDataPositionofStart] = useState<string>(\"0\");\r\n\r\n\t/**\r\n\t * ============================line 属性state===========================\r\n\t */\r\n\r\n\t/**\r\n\t * view的全量尺寸\r\n\t */\r\n\tconst [viewSize, setviewSize] = useState<{ width: number; height: number }>({\r\n\t\twidth: 0,\r\n\t\theight: 0,\r\n\t});\r\n\r\n\t/**\r\n\t * line的位置（上左定位）\r\n\t *内容区和label区的分割线的位置\r\n\t */\r\n\tconst [linePosition, setlinePosition] = useState<pointCoord>({ x: 0, y: 0 });\r\n\tconst [labelSpace, setlabelSpace] = useState<number>(0);\r\n\r\n\t/**\r\n\t * line的尺寸\r\n\t */\r\n\tconst [lineSize, setlineSize] = useState<{\r\n\t\t/**\r\n\t\t * line的长度\r\n\t\t */\r\n\t\theight: number;\r\n\t\t/**\r\n\t\t * line的粗细\r\n\t\t */\r\n\t\tsize: number;\r\n\t}>({\r\n\t\theight: 0,\r\n\t\tsize: 0,\r\n\t});\r\n\r\n\t/**\r\n\t * line的颜色\r\n\t */\r\n\tconst [lineColor, setlineColor] = useState<string>(\"\");\r\n\r\n\t/**\r\n\t * ============================网格线 属性state===========================\r\n\t */\r\n\r\n\t/**\r\n\t * 网格线组\r\n\t */\r\n\tconst [netLineArr, setnetLineArr] = useState<Array<netLineItem>>([]);\r\n\r\n\t/**\r\n\t * 网格线的最大数量\r\n\t */\r\n\tconst [netLineMaxCount, setnetLineMaxCount] = useState<number>(0);\r\n\r\n\t/**\r\n\t * 轴网格线最小数量\r\n\t */\r\n\tconst [netLineMinCount, setnetLineMinCount] = useState<number>(0);\r\n\r\n\t/**\r\n\t * ============================tick 属性state===========================\r\n\t */\r\n\r\n\t/**\r\n\t * 显示tick组（用于显示的tick）\r\n\t */\r\n\tconst [displayTickArr, setdisplayTickArr] = useState<Array<tickItem>>([]);\r\n\tconst [tickLength, settickLength] = useState<number>(0);\r\n\r\n\t/**\r\n\t * ==========================静态常量==============================\r\n\t */\r\n\r\n\t//计算用的缩进\r\n\tconst _shiftLength = 18;\r\n\t//显示时取小数点后几位\r\n\tconst displayFix = 7;\r\n\t/**\r\n\t * ==========================函数==============================\r\n\t */\r\n\r\n\t/**\r\n\t * 更新轴 (所有数字都依据_shiftLength转换成大数字用BigNumber.js进行计算 )\r\n\t *@param  {number} viewWidth 界面的全量宽度\r\n\t *@param  {number} viewHeight 界面的全量高度\r\n\t *@param {numberScope} dataScope 数据范围\r\n\t *@returns {void}\r\n\t */\r\n\tconst updateAxisSates = function (viewWidth: number, viewHeight: number, dataScope: numberScope) {\r\n\t\tconsole.log(dataScope);\r\n\t\tlet _dataScope: numberScopeString = {\r\n\t\t\tstart: new _bigNumber(dataScope.start)\r\n\t\t\t\t.times(new _bigNumber(10).exponentiatedBy(_shiftLength).toFixed())\r\n\t\t\t\t.toFixed(0),\r\n\t\t\tend: new _bigNumber(dataScope.end)\r\n\t\t\t\t.times(new _bigNumber(10).exponentiatedBy(_shiftLength).toFixed())\r\n\t\t\t\t.toFixed(0),\r\n\t\t};\r\n\t\tlet scopeResult = expandDataSpanceEdge(_dataScope);\r\n\r\n\t\tif (\r\n\t\t\tviewWidth === viewSize.width &&\r\n\t\t\tviewHeight === viewSize.height &&\r\n\t\t\tscopeResult.dataScope === currentDataScope\r\n\t\t) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t/* 设置各项属性 */\r\n\t\tsetviewSize({\r\n\t\t\twidth: viewWidth,\r\n\t\t\theight: viewHeight,\r\n\t\t});\r\n\r\n\t\tsetlinePosition({\r\n\t\t\tx: viewWidth - getSpaceSize(initArgs.labelSpace!, viewWidth),\r\n\t\t\ty: 0,\r\n\t\t});\r\n\t\tsetlineSize({\r\n\t\t\theight: viewHeight - getSpaceSize(xAxis.initArgs.labelSpace!, viewHeight) + 1,\r\n\t\t\tsize: initArgs.lineSize!,\r\n\t\t});\r\n\t\tsetlabelSpace(getSpaceSize(initArgs.labelSpace!, viewHeight));\r\n\r\n\t\t//计算数据边距\r\n\t\t//let _currentDataSpace = new _bigNumber(shiftNumber(dataScope.end - dataScope.start, _shiftLength)).toString();\r\n\r\n\t\t////\r\n\t\t// dataScope.start - _currentDataSpace * initArgs.displayPadding!,\r\n\t\tsetcurrentDataScope(scopeResult.dataScope);\r\n\t\tsetcurrentDataSpace(scopeResult.currentDataSpace);\r\n\t\tsetcurrentDataPositionofStart(new _bigNumber(dataScope.start).minus(\"0\").toString());\r\n\t\tsettickLength(getSpaceSize(initArgs.tickLength!, viewWidth));\r\n\t\tsetlineColor(initArgs.lineColor!);\r\n\t\tsetnetLineMaxCount(initArgs.netLineMaxCount!);\r\n\t\tsetnetLineMinCount(initArgs.netLineMinCount!);\r\n\t};\r\n\r\n\tconst update = function (viewWidth: number, viewHeight: number) {\r\n\t\t/* 设置各项属性 */\r\n\t\tsetviewSize({\r\n\t\t\twidth: viewWidth,\r\n\t\t\theight: viewHeight,\r\n\t\t});\r\n\t\tsetlinePosition({\r\n\t\t\tx: viewWidth - getSpaceSize(initArgs.labelSpace!, viewWidth),\r\n\t\t\ty: 0,\r\n\t\t});\r\n\t\tsetlineSize({\r\n\t\t\theight: viewHeight - getSpaceSize(xAxis.initArgs.labelSpace!, viewHeight) + 1,\r\n\t\t\tsize: initArgs.lineSize!,\r\n\t\t});\r\n\t\tsetlabelSpace(getSpaceSize(initArgs.labelSpace!, viewHeight));\r\n\t\tsettickLength(getSpaceSize(initArgs.tickLength!, viewWidth));\r\n\t\tsetlineColor(initArgs.lineColor!);\r\n\t\tsetnetLineMaxCount(initArgs.netLineMaxCount!);\r\n\t\tsetnetLineMinCount(initArgs.netLineMinCount!);\r\n\t};\r\n\r\n\t//扩展数据范围边界（使得显示范围不显得局促）\r\n\tconst expandDataSpanceEdge = function <T extends numberScopeString>(\r\n\t\tinput: T\r\n\t): {\r\n\t\tdataScope: T;\r\n\t\tcurrentDataSpace: string;\r\n\t} {\r\n\t\tlet result = { ...input };\r\n\t\tlet currentDataSpace = new _bigNumber(input.end).minus(input.start).toString();\r\n\r\n\t\tlet _expandAmount = new _bigNumber(currentDataSpace).times(initArgs.displayPadding!);\r\n\r\n\t\tcurrentDataSpace = new _bigNumber(currentDataSpace).plus(_expandAmount).toString();\r\n\r\n\t\tresult.start = new _bigNumber(input.start).minus(new _bigNumber(_expandAmount).div(2)).toString();\r\n\t\tresult.end = new _bigNumber(input.end).plus(new _bigNumber(_expandAmount).div(2)).toString();\r\n\t\treturn { dataScope: result, currentDataSpace };\r\n\t};\r\n\r\n\t//扩展像素范围边界（使得显示范围不显得局促）\r\n\tconst expandDataSpanceEdgePIX = function <T extends numberScope>(\r\n\t\tinput: T\r\n\t): {\r\n\t\tdataScope: T;\r\n\t\tcurrentDataSpace: string;\r\n\t} {\r\n\t\tlet result = { ...input };\r\n\t\tlet currentDataSpace = new _bigNumber(input.start).minus(input.end).toString();\r\n\r\n\t\tlet _expandAmount = new _bigNumber(currentDataSpace).times(initArgs.displayPadding!);\r\n\r\n\t\tcurrentDataSpace = new _bigNumber(currentDataSpace).plus(_expandAmount).toString();\r\n\r\n\t\tresult.start = Number(new _bigNumber(input.start).plus(new _bigNumber(_expandAmount).div(2)).toString());\r\n\t\tresult.end = Number(new _bigNumber(input.end).minus(new _bigNumber(_expandAmount).div(2)).toString());\r\n\t\treturn { dataScope: result, currentDataSpace };\r\n\t};\r\n\r\n\t/**\r\n\t * tick种子计算\r\n\t * 给定一个区间【开始，结束】，这是一段范围，需要在这个范围里找到8~4个tick\r\n\t * 这个tick需要满足以下条件\r\n\t * 1.显示tick的空间只能显示7位数字加一个小数点\r\n\t * 2.需要考虑到大于7位数字显示的情况\r\n\t * 3.需要考虑1位数字+6位小数的情况\r\n\t * (所有数字都依据_shiftLength转换成大数字用BigNumber.js进行计算 )\r\n\t *\r\n\t *\r\n\t * 解决思路：\r\n\t * 1.【开始，结束】【1.123456，4.215463】里的数字都*1000000 就算碰到1.123456遮掩的数字，也能进行整除处理 =》 【1123456，4215463】\r\n\t * 2.给“开始”数字例如 1123456 进行取整，从10位开始，先取成1123460,先计算跨度 4215463 - 1123460 =3092003 然后计算3092003/10 得到309200.3 我们的目标是<8，所以继续以此类推...\r\n\t * 3.上一个数字继续取整 1123460 进行取整，但是这次 10*2=20，那么先取成 1123480 ,先计算跨度 4215463 - 1123480 =3091983,然后计算3091983/20 得到154599.15 我们的目标是<8，所以继续以此类推...\r\n\t * 4.上一个数字继续取整 1123480 进行取整，但是这次 20*2=40，那么先取成 1123520 ,先计算跨度 4215463 - 1123520 =3091943,然后计算3091943/40 得到77298.575 我们的目标是<8，所以继续以此类推...\r\n\t * 5.上一个数字继续取整 1123520 进行取整，但是这次 40*2=80，那么先取成 1123600 ,先计算跨度 4215463 - 1123600 =3091863,然后计算3091863/80 得到38648.2875 我们的目标是<8，所以继续以此类推...\r\n\t * 6.上一个数字继续取整 1123600 进行取整，但是这次 80*2=160，那么先取成 1123760 ,先计算跨度 4215463 - 1123760 =3091703,然后计算3091703/160 得到19323.14375 我们的目标是<8，所以继续以此类推...\r\n\t * 7.上一个数字继续取整 1123760 进行取整，但是这次 160*2=380，那么先取成 1121140 ,先计算跨度 4215463 - 1121140 =3094323,然后计算 3094323/380 得到8142.9552631578945 我们的目标是<8，所以继续以此类推...\r\n\t * 8.上一个数字继续取整 1121140 进行取整，但是这次 380*2=760，那么先取成 1121800 ,先计算跨度 4215463 - 1121800 =3093663,然后计算 3093663/760 得到4070.6092105263156 我们的目标是<8，所以继续以此类推...\r\n\t * 9.上一个数字继续取整 1121800 进行取整，但是这次 760*2=1520，那么先取成 1123300 ,先计算跨度 4215463 - 1123300 =3092163,然后计算 3092163/1520 得到2034.3177631578947 我们的目标是<8，所以继续以此类推...\r\n\t * 10.上一个数字继续取整 1123300 进行取整，但是这次 1520*2=3040，那么先取成 1126340 ,先计算跨度 4215463 - 1126340 =3089123,然后计算 3089123/3040 得到1016.1588815789473 我们的目标是<8，所以继续以此类推...\r\n\t * 11.上一个数字继续取整 1126340 进行取整，但是这次 3040*2=6080，那么先取成 1132420 ,先计算跨度 4215463 - 1132420 =3083043,然后计算 3083043/6080 得到507.07944078947367 我们的目标是<8，所以继续以此类推...\r\n\t * 12.上一个数字继续取整 1132420 进行取整，但是这次 6080*2=12160，那么先取成 1144580 ,先计算跨度 4215463 - 1144580 =3070883,然后计算 3070883/12160 得到252.53972039473683 我们的目标是<8，所以继续以此类推...\r\n\t * 13.上一个数字继续取整 1144580 进行取整，但是这次 12160*2=24320，那么先取成 1168900 ,先计算跨度 4215463 - 1168900 =3046563,然后计算 3046563/24320 得到125.26986019736842 我们的目标是<8，所以继续以此类推...\r\n\t * 14.上一个数字继续取整 1168900 进行取整，但是这次 24320*2=48640，那么先取成 1217540 ,先计算跨度 4215463 - 1217540 =2997923,然后计算 2997923/48640 得到61.63493009868421 我们的目标是<8，所以继续以此类推...\r\n\t * 15.上一个数字继续取整 1217540 进行取整，但是这次 48640*2=97280，那么先取成 1217540 ,先计算跨度 4215463 - 1314820 =2900643,然后计算 2900643/97280 得到61.63493009868421 我们的目标是<8，所以继续以此类推...\r\n\t * 16.上一个数字继续取整 1217540 进行取整，但是这次 97280*2=194560 ，那么先取成 1412100 ,先计算跨度 4215463 - 1412100 =2803363,然后计算 2803363/194560 得到14.408732524671052 我们的目标是<8，所以继续以此类推...\r\n\t * 17.上一个数字继续取整 1412100 进行取整，但是这次 194560*2=389120 ，那么先取成 1801220 ,先计算跨度 4215463 - 1801220 =2414243,然后计算 2414243/389120 得到6.204366262335526 我们的目标是<8，任务完成；\r\n\t * 1801220 / 6.204366262335526 得到每步\r\n\t * 然后再用 【每步的数字】 / 1000000\r\n\t *\r\n\t * 实际计算和上面写的算法有一点点不太一样，每次计算完成后不再是step * 2  而是 step + “0” 也就是加一位数\r\n\t *\r\n\t */\r\n\tconst getTickSeed = function (): string[] {\r\n\t\tlet dataScope = { ...currentDataScope };\r\n\r\n\t\tlet resultTickArr: string[] = [];\r\n\r\n\t\t//范围的计算数值(直接加权7位数进行运算，算完再换算回来 )\r\n\t\tlet scope = {\r\n\t\t\tstart: dataScope.start,\r\n\t\t\tend: dataScope.end,\r\n\t\t};\r\n\r\n\t\t//步数\r\n\t\tlet step = \"10\";\r\n\t\tlet stepAdd = \"10\";\r\n\t\t//取整范围\r\n\t\tlet intGetPar = \"10\";\r\n\t\tvar tickCount = \"8\";\r\n\t\tvar startInteger: string = roundToNearestTenBigNumber(scope.start, Number(intGetPar));\r\n\t\tvar integerTimes = 0;\r\n\t\twhile (true) {\r\n\t\t\t//算跨度\r\n\t\t\t//scope.end - startInteger\r\n\t\t\tlet scDf = new _bigNumber(scope.end).minus(startInteger).toString();\r\n\t\t\t//算数量\r\n\t\t\t//scDf / step\r\n\t\t\ttickCount = new _bigNumber(scDf).div(step).toFixed().toString();\r\n\r\n\t\t\t//看算出来的数量是否大于最大数量，大于的话就继续算\r\n\t\t\tif (new _bigNumber(tickCount).gt(initArgs.netLineMaxCount!)) {\r\n\t\t\t\t//把step 加一个0\r\n\t\t\t\tlet postStep = (Number(step) + Number(stepAdd)).toString();\r\n\t\t\t\t/**\r\n\t\t\t\t * 这里的思路较原思路有所改变\r\n\t\t\t\t * 当step每多一个位 就将每个step的步进多加一位 例如原来的步进是10 如果现在step是100 那么步进就要来到100\r\n\t\t\t\t * 取整范围也是，比如之前是个位数取整，步进多了一位就要变成十位取整，以此类推\r\n\t\t\t\t */\r\n\t\t\t\tif (postStep.length > step.length) {\r\n\t\t\t\t\tstepAdd = stepAdd + \"0\";\r\n\t\t\t\t\tintGetPar = intGetPar + \"0\";\r\n\t\t\t\t\tstartInteger = roundToNearestTenBigNumber(scope.start, Number(intGetPar));\r\n\t\t\t\t\tintegerTimes = integerTimes + 1;\r\n\t\t\t\t}\r\n\t\t\t\tstep = postStep;\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//算出每个tick的数据\r\n\t\tfor (var i = 0; i < Number(tickCount); i++) {\r\n\t\t\t//startInteger + (step * i)\r\n\t\t\tresultTickArr.push(new _bigNumber(startInteger).plus(new _bigNumber(step).times(i)).toString());\r\n\t\t}\r\n\r\n\t\treturn resultTickArr;\r\n\t};\r\n\r\n\t/**\r\n\t * 取得显示tick\r\n\t */\r\n\tconst computDisplayTicks = function (tickSeed: string[]): tickItem[] {\r\n\t\tlet result: tickItem[] = [];\r\n\t\tlet index = 0;\r\n\t\tfor (var item of tickSeed) {\r\n\t\t\tresult.push({\r\n\t\t\t\tindex: index,\r\n\t\t\t\tcolor: initArgs.tickColor!,\r\n\t\t\t\tlength: getSpaceSize(initArgs.tickLength!, viewSize.width),\r\n\t\t\t\tsize: initArgs.tickSize!,\r\n\t\t\t\tcPosition: {\r\n\t\t\t\t\tx: linePosition.x,\r\n\t\t\t\t\ty: (function () {\r\n\t\t\t\t\t\tlet pre = Number(\r\n\t\t\t\t\t\t\tnew _bigNumber(item)\r\n\t\t\t\t\t\t\t\t.minus(currentDataScope.start)\r\n\t\t\t\t\t\t\t\t.div(currentDataSpace)\r\n\t\t\t\t\t\t\t\t.toFixed(_shiftLength)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\treturn lineSize.height - lineSize.height * pre;\r\n\t\t\t\t\t})(),\r\n\t\t\t\t},\r\n\t\t\t\tvalue: item,\r\n\t\t\t\tdisplayValue: new _bigNumber(shiftNumber(item, -_shiftLength)).toFixed(displayFix),\r\n\t\t\t});\r\n\t\t\tindex++;\r\n\t\t}\r\n\t\treturn result;\r\n\t};\r\n\r\n\t/**\r\n\t * 取得显示line\r\n\t */\r\n\tconst computDisplayLines = function (tickSeed: string[]): netLineItem[] {\r\n\t\tlet result: netLineItem[] = [];\r\n\t\tlet index = 0;\r\n\t\tfor (var item of tickSeed) {\r\n\t\t\tresult.push({\r\n\t\t\t\tcolor: initArgs.netLineColor!,\r\n\t\t\t\tlength: linePosition.x,\r\n\t\t\t\tsize: initArgs.netLineSize!,\r\n\t\t\t\tcPosition: {\r\n\t\t\t\t\tx: 0,\r\n\t\t\t\t\ty: (function () {\r\n\t\t\t\t\t\tlet pre = Number(\r\n\t\t\t\t\t\t\tnew _bigNumber(item)\r\n\t\t\t\t\t\t\t\t.minus(currentDataScope.start)\r\n\t\t\t\t\t\t\t\t.div(currentDataSpace)\r\n\t\t\t\t\t\t\t\t.toFixed(_shiftLength)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\treturn lineSize.height - lineSize.height * pre;\r\n\t\t\t\t\t})(),\r\n\t\t\t\t},\r\n\t\t\t\tvalue: item,\r\n\t\t\t});\r\n\t\t\tindex++;\r\n\t\t}\r\n\t\treturn result;\r\n\t};\r\n\r\n\t/**\r\n\t * 计算tick\r\n\t */\r\n\tconst computTicks = function () {\r\n\t\t//获得当前轴的整数列（种子）\r\n\t\tlet tickSeed: string[] = getTickSeed();\r\n\t\tlet _displayTickArr = computDisplayTicks(tickSeed);\r\n\t\tlet _netLineArr = computDisplayLines(tickSeed);\r\n\r\n\t\tsetdisplayTickArr(_displayTickArr);\r\n\t\tsetnetLineArr(_netLineArr);\r\n\t\tsetisFinishedInit(true);\r\n\t\tsetyAxisUpdateTimeStamp(+new Date());\r\n\t};\r\n\r\n\t/**\r\n\t * 计算tooltip\r\n\t */\r\n\tconst tooltipMove = function (position: pointCoord, isShowTooltip: boolean) {\r\n\t\tlet tooltipY = position.y;\r\n\t\tif (tooltipY > lineSize.height) {\r\n\t\t\tisShowTooltip = false;\r\n\t\t}\r\n\r\n\t\tsettooltipIsShow(isShowTooltip);\r\n\t\tif (isShowTooltip === false) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet pre = 1 - tooltipY / lineSize.height;\r\n\t\tlet value = new _bigNumber(currentDataScope.start).plus(new _bigNumber(currentDataSpace).times(pre)).toString();\r\n\r\n\t\tlet _tooltipState: IToolTipItem = {\r\n\t\t\tposition: {\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: tooltipY,\r\n\t\t\t},\r\n\t\t\tlength: linePosition.x,\r\n\t\t\tvalue: value,\r\n\t\t\tdisplayValue: new _bigNumber(shiftNumber(value, -_shiftLength)).toFixed(displayFix),\r\n\t\t\trelatedTickItem: null,\r\n\t\t\tsize: getSpaceSize(initArgs.tooltip!.lineSize!, viewSize.width),\r\n\t\t};\r\n\t\tsetTooltipState(_tooltipState);\r\n\t};\r\n\r\n\t/**\r\n\t * ==================================Effects===============================\r\n\t */\r\n\tuseEffect(function (): ReturnType<React.EffectCallback> {\r\n\t\tif (isMounted === false) {\r\n\t\t\tsetIsMounted(true);\r\n\t\t}\r\n\t\treturn function (): void {\r\n\t\t\tsetIsMounted(false);\r\n\t\t};\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, []);\r\n\r\n\tuseEffect(\r\n\t\tfunction (): ReturnType<React.EffectCallback> {\r\n\t\t\tif (currentDataSpace !== \"0\") {\r\n\t\t\t\tcomputTicks();\r\n\t\t\t}\r\n\t\t},\r\n\t\t[currentDataScope]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\tfunction (): ReturnType<React.EffectCallback> {\r\n\t\t\tif (initArgsChange !== -1) {\r\n\t\t\t\tupdate(viewSize.width, viewSize.height);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[initArgsChange]\r\n\t);\r\n\r\n\treturn {\r\n\t\tdata: {\r\n\t\t\tisFinishedInit,\r\n\t\t\ttooltipState,\r\n\t\t\ttooltipIsShow,\r\n\t\t\tcurrentDataScope,\r\n\t\t\tcurrentDataSpace,\r\n\t\t\tcurrentDataPositionOfStart,\r\n\t\t\tviewSize,\r\n\t\t\tlinePosition,\r\n\t\t\tlabelSpace,\r\n\t\t\tlineColor,\r\n\t\t\tnetLineArr,\r\n\t\t\tnetLineMaxCount,\r\n\t\t\tnetLineMinCount,\r\n\t\t\tdisplayTickArr,\r\n\t\t\tlineSize,\r\n\t\t\ttickLength,\r\n\t\t\tyAxisUpdateTimeStamp,\r\n\t\t},\r\n\t\tfuncs: {\r\n\t\t\tupdateAxisSates,\r\n\t\t\ttooltipMove,\r\n\t\t\texpandDataSpanceEdge,\r\n\t\t\texpandDataSpanceEdgePIX,\r\n\t\t\tsetinitArgs: function (arg: Iaxis) {\r\n\t\t\t\tsetinitArgs(Object.assign(true, initArgs, arg));\r\n\t\t\t\tsetinitArgsChange(+new Date());\r\n\t\t\t},\r\n\t\t},\r\n\t\tinitArgs,\r\n\t};\r\n};\r\n\r\nexport default useyAxis;\r\n","import {\r\n  createContext,\r\n  useState,\r\n  useContext,\r\n  useRef,\r\n  useCallback,\r\n  useEffect,\r\n  FC,\r\n  ReactElement,\r\n} from 'react';\r\n\r\nimport {\r\n  GMT0000TolocalTime,\r\n  anyTimeToGMT0000ToTarget,\r\n  findIntersectionByKey,\r\n  findIntersectionCandle,\r\n  getRightDate,\r\n  getSpaceSize,\r\n  localTimeToGMT0000,\r\n} from '../utils/consts';\r\nimport _bigNumber from 'bignumber.js';\r\nimport { merge } from 'lodash';\r\nimport useDebounce from './debounceHook';\r\nimport useThrottle from './throttleHook';\r\nimport { IdataConfig, IuseCandleView } from '../interface/configInterFaces';\r\nimport {\r\n  IAxisobj,\r\n  IuseCandleHook,\r\n  IyAxisobj,\r\n} from '../interface/hooksInterFace';\r\nimport { DEFAULTDATAVALUES } from '../utils/defaultValues';\r\nimport {\r\n  IToolTipItem,\r\n  IcandleData,\r\n  IcandleItem,\r\n  IcandleUpdateItem,\r\n  numberScope,\r\n  numberScopeString,\r\n  tickItem,\r\n} from '../interface/itemsInterFace';\r\nimport { TtimeType } from '../interface/timeDefineInterFace';\r\n\r\ninterface MessageEventInit<T = any> extends EventInit {\r\n  lastEventId?: string;\r\n  channel?: string;\r\n  data?: T;\r\n  origin?: string;\r\n  ports?: MessagePort[];\r\n  source?: Window;\r\n}\r\ninterface MessageEvent<T = any> extends Event {\r\n  readonly data: T;\r\n  readonly origin: string;\r\n  readonly ports: any;\r\n  readonly source: Window;\r\n  initMessageEvent(\r\n    typeArg: string,\r\n    canBubbleArg: boolean,\r\n    cancelableArg: boolean,\r\n    dataArg: T,\r\n    originArg: string,\r\n    lastEventIdArg: string,\r\n    sourceArg: Window\r\n  ): void;\r\n}\r\n\r\ndeclare var MessageEvent: {\r\n  prototype: MessageEvent;\r\n  new <T>(type: string, eventInitDict?: MessageEventInit<T>): MessageEvent<T>;\r\n};\r\n\r\n/**\r\n * 数据处理钩子\r\n *\r\n * 1.静态模式下拿到数据的处理步骤\r\n *   1.1 全部由过去到现在进行一遍排序\r\n *   1.2 检查 data[0] ~ data[1] 的时间范围是否为当前设置的时间类型的时间范围：\r\n *      1.2.1 如果比当前设置的时间范围小，就进行归并\r\n *      1.2.3 归并之后的数据放进allComputedCandleData堆里\r\n *      1.2.4 如果比当前设置的时间范围大，就不进行任何操作，直接停止更新。\r\n *      1.2.4 如果等于当前设置的时间范围，就不进行归并操作，放进allComputedCandleData堆里。\r\n *   1.3 根据x轴的tick 在 allComputedCandleData里找到的数据生成并计算完位置等信息后放进 displayCandleData\r\n *   1.4 根据上面1.3的计算更新y轴的范围\r\n *\r\n *\r\n * 2.静态模式下移动和缩放时响应的方式：\r\n *   2.1 根据x轴的tick 在 allComputedCandleData里找到的数据生成并计算完位置等信息后放进 displayCandleData\r\n *   2.2 根据上面1.3的计算更新y轴的范围\r\n *\r\n * 但不是每次移动都这样，需要一个响亮来进行控制，当拖动速度很快时只进行移动计算，不往 displayarr里加入任何东西 只计算视图内的数据，同时发起webworker离线计算接下来可能要更新的数据\r\n *当速度小于某个值的时候，就把webworker算好的数据更新进来\r\n */\r\nconst useCandleHook = function(\r\n  args: IdataConfig,\r\n  xAxis: IAxisobj,\r\n  yAxis: IyAxisobj,\r\n  baseConfig: IuseCandleView\r\n): IuseCandleHook {\r\n  xAxis = xAxis!;\r\n  yAxis = yAxis!;\r\n  const [initArgs, setinitArgs] = useState<IdataConfig>(\r\n    merge(DEFAULTDATAVALUES, args)\r\n  );\r\n  let updateThrottlereComputAllDisplayedCandleData = useThrottle();\r\n  let updateThrottle = useThrottle();\r\n  /**\r\n   * ============================state===========================\r\n   */\r\n  const [isMounted, setIsMounted] = useState<boolean>(false);\r\n  const [currentTimeTypeName, setcurrentTimeTypeName] = useState<string>('');\r\n  const [miny, setminy] = useState<number>(0);\r\n  const [isFetchingData, setisFetchingData] = useState<boolean>(true);\r\n  const [fetchDataStemp, setfetchDataStemp] = useState<number>(-1);\r\n  const [streamData, setstreamData] = useState<IcandleUpdateItem | null>(null);\r\n  const [stopDynamicFetching, setstopDynamicFetching] = useState<boolean>(\r\n    false\r\n  );\r\n  const [lastMaxMiny, setlastMaxMiny] = useState<numberScope>({\r\n    start: 0,\r\n    end: 0,\r\n  });\r\n\r\n  const [workMessage, seworkMessage] = useState<MessageEvent<any>>();\r\n  const [LastScopeddcData, setLastScopeddcData] = useState<IcandleData[]>([]);\r\n\r\n  /**\r\n   * 动态数据暂存处\r\n   */\r\n  const [TempDynamicData, setTempDynamicData] = useState<IcandleItem[] | null>(\r\n    null\r\n  );\r\n  const [isFirstTimeUpdate, setisFirstTimeUpdate] = useState<boolean>(false);\r\n\r\n  /**\r\n   * 是否已完成初始化\r\n   */\r\n  const [isFinishedInit, setisFinishedInit] = useState<boolean>(false);\r\n  const [isDQuickUpdateing, setisDQuickUpdateing] = useState<boolean>(false);\r\n\r\n  const [cursorCandleItem, setCursorCandleItem] = useState<IcandleData | null>(\r\n    null\r\n  );\r\n  const [latestCandleItem, setlatestCandleItem] = useState<IcandleData | null>(\r\n    null\r\n  );\r\n\r\n  /**\r\n   * 上次更新的X轴时间戳\r\n   */\r\n  const [lastTimexAsixStemp, setlastTimexAsixStemp] = useState<number>(798);\r\n\r\n  /**\r\n   * volume 数据图表的高度\r\n   */\r\n  const [volumChartPixHeight, setvolumChartPixHeight] = useState<number>(0);\r\n  /**\r\n   * volume 数据图表 当前视窗区域的最大值\r\n   */\r\n  const [volumChartViewMax, setvolumChartViewMax] = useState<number>(0);\r\n\r\n  /**\r\n   * 是否为静态数据模式\r\n   */\r\n  const [isStaticData, setisStaticData] = useState<boolean>(false);\r\n\r\n  /**\r\n   * 所有的candle数据（原始数据，未经过加工）\r\n   */\r\n  const [orgCandleData, setorgCandleData] = useState<IcandleItem[]>([]);\r\n\r\n  /**\r\n   * 用于显示的candle数据(经过加工和归并之后的数据 )\r\n   */\r\n  const [displayCandleData, setdisplayCandleData] = useState<IcandleData[]>([]);\r\n\r\n  /**\r\n   * 记录当前视窗内y轴数据的最大值和最小值\r\n   */\r\n  const [displayCandleMaxMin, setdisplayCandleMaxMin] = useState<\r\n    numberScopeString\r\n  >({ start: '0', end: '0' });\r\n  const [org_displayCandleMaxMin, setorg_displayCandleMaxMin] = useState<\r\n    numberScopeString\r\n  >({ start: '0', end: '0' });\r\n  const [yScale, setyScale] = useState<number>(1);\r\n\r\n  /**\r\n   * latestCandle\r\n   * 最新的candle\r\n   * 最末尾的Candle\r\n   */\r\n  const [latestCandle, setlatestCandle] = useState<IcandleData>();\r\n  const [\r\n    latestCandleToolTip,\r\n    setlatestCandleToolTip,\r\n  ] = useState<IToolTipItem | null>(null);\r\n  const [\r\n    latestVolumeToolTip,\r\n    setlatestVolumeToolTip,\r\n  ] = useState<IToolTipItem | null>(null);\r\n\r\n  /**\r\n   * 视图范围内最末尾的candle\r\n   * 最新的candle\r\n   */\r\n  const [\r\n    displayLatestCandle,\r\n    setdisplayLatestCandle,\r\n  ] = useState<IcandleData | null>(null);\r\n  const [\r\n    latestdisplayLatestCandle,\r\n    setlatestdisplayLatestCandle,\r\n  ] = useState<IToolTipItem | null>(null);\r\n  const [\r\n    latestdisplayLatestVolume,\r\n    setlatestdisplayLatestVolume,\r\n  ] = useState<IToolTipItem | null>(null);\r\n\r\n  /**\r\n   * view的全量尺寸\r\n   */\r\n  const [viewSize, setviewSize] = useState<{ width: number; height: number }>({\r\n    width: 0,\r\n    height: 0,\r\n  });\r\n\r\n  const [updateStamp, setupdateStamp] = useState<number>(-1);\r\n  const [initDyStamp, setinitDyStamp] = useState<number>(-1);\r\n\r\n  /**\r\n   * ==================================Ref===============================\r\n   */\r\n\r\n  /**\r\n   * 所有的归并后的数据(数据来源于orgCandleData )\r\n   */\r\n  let allComputedCandleData = useRef<{ [propName: string]: IcandleItem }>(\r\n    {} as { [propName: string]: IcandleItem }\r\n  );\r\n  let isUpdateing = useRef<boolean>(false);\r\n  let isQuickUpdateing = useRef<boolean>(false);\r\n  let isEscapeItems = useRef<boolean>(false);\r\n  let mWorker = useRef<Worker>();\r\n\r\n  /**\r\n   * ==========================静态常量==============================\r\n   */\r\n  //显示时取小数点后几位\r\n  const displayFix = 7;\r\n\r\n  /**\r\n   * ==========================函数==============================\r\n   */\r\n\r\n  /**\r\n   * 判断数据的事件跨度是否和当前设置的时间跨度相符\r\n   */\r\n  const determineTimeSpaceConsistent = function(\r\n    data: IcandleItem[]\r\n  ): 'same' | 'bigger' | 'smaller' {\r\n    if (data.length === 1) {\r\n      return 'smaller';\r\n    }\r\n    let inputDataTimeSpace =\r\n      getRightDate(data[1].time) - getRightDate(data[0].time);\r\n    let configDataTimeSpace = xAxis.data.currentTimeType!.timeGap;\r\n    if (inputDataTimeSpace === configDataTimeSpace) {\r\n      return 'same';\r\n    } else if (inputDataTimeSpace > configDataTimeSpace) {\r\n      return 'bigger';\r\n    }\r\n    return 'smaller';\r\n  };\r\n\r\n  const getMin = function(item: IcandleItem, start: number): number {\r\n    let result: number = start;\r\n    if (result > Number(item.open)) {\r\n      result = Number(item.open);\r\n    }\r\n\r\n    if (result > Number(item.close)) {\r\n      result = Number(item.close);\r\n    }\r\n\r\n    if (result > Number(item.high)) {\r\n      result = Number(item.high);\r\n    }\r\n\r\n    if (result > Number(item.low)) {\r\n      result = Number(item.low);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const getMax = function(item: IcandleItem, end: number): number {\r\n    let result: number = end;\r\n    if (result < Number(item.open)) {\r\n      result = Number(item.open);\r\n    }\r\n\r\n    if (result < Number(item.close)) {\r\n      result = Number(item.close);\r\n    }\r\n\r\n    if (result < Number(item.high)) {\r\n      result = Number(item.high);\r\n    }\r\n\r\n    if (result < Number(item.low)) {\r\n      result = Number(item.low);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  //按照当前的时间刻度归并数据（确保数据已经排序）\r\n  //数据只支持比当前设置的最小单位小的\r\n  //合并完数据就直接把数据放进allComputedCandleData堆里去了\r\n  const mergeData = function(data: IcandleItem[]): numberScopeString {\r\n    //归并的方式是这样的，首先确保数据已经排序，排序顺序为从最早到最晚\r\n    //那么我们可以从数组的最晚数据开始进行归并\r\n    //拿取最后一个数据的时间，通过时间配置对象取到整数\r\n    //将这个整数进行保存。然后归并到一个新的IcandleData对象里\r\n    //继续下一个，\r\n    //拿取下一个数据的时间，通过时间配置对象取到整数\r\n    //通过当前的项目的整数时间和上一个对象的整数时间进行比对\r\n    //一致就归并到一起\r\n    //不一致就另起一个新的IcandleData 将数据放进去，以此类推到数组循环结束\r\n    let _currentCandleStick: IcandleData = ({\r\n      time: -1,\r\n      open: -1,\r\n      close: -1,\r\n      high: -1,\r\n      low: -1,\r\n      volume: 0,\r\n    } as unknown) as IcandleData;\r\n\r\n    let prevItem: IcandleItem = data[data.length - 1];\r\n    //let result: IcandleData[] = [];\r\n\r\n    let _displayCandleMaxMin: numberScopeString = {\r\n      /**\r\n       * 最低点\r\n       * */\r\n      start: '9999999999999999999999',\r\n      /**\r\n       * 最高点\r\n       * */\r\n      end: '-9999999999999999999999',\r\n    };\r\n    for (let i = data.length - 1; i > -1; i--) {\r\n      let item = data[i];\r\n      let time = xAxis.data.currentTimeType!.roundingFunction(\r\n        getRightDate(item.time),\r\n        baseConfig.timeZone!.displayTimeZone!\r\n      );\r\n\r\n      if (\r\n        _currentCandleStick.time === -1 ||\r\n        time !== _currentCandleStick.time\r\n      ) {\r\n        if (\r\n          time !== _currentCandleStick.time &&\r\n          _currentCandleStick.time !== -1 &&\r\n          typeof allComputedCandleData.current[_currentCandleStick.time] ===\r\n            'undefined'\r\n        ) {\r\n          allComputedCandleData.current[\r\n            _currentCandleStick.time\r\n          ] = _currentCandleStick;\r\n          //result.push(_currentCandleStick);\r\n        }\r\n\r\n        _currentCandleStick = {\r\n          time: time,\r\n          open: -1,\r\n          close: -1,\r\n          high: '-9999999999999999999999',\r\n          low: '9999999999999999999999',\r\n          volume: 0,\r\n        };\r\n      }\r\n\r\n      _currentCandleStick.open = item.open;\r\n      if (\r\n        time <\r\n          xAxis.data.currentTimeType!.roundingFunction(\r\n            getRightDate(prevItem.time),\r\n            baseConfig!.timeZone!.displayTimeZone!\r\n          ) ||\r\n        _currentCandleStick.close === -1\r\n      ) {\r\n        _currentCandleStick.close = item.close;\r\n      }\r\n      if (Number(_currentCandleStick.high) < Number(item.high)) {\r\n        _currentCandleStick.high = item.high;\r\n      }\r\n\r\n      if (Number(_currentCandleStick.low) > Number(item.low)) {\r\n        _currentCandleStick.low = item.low;\r\n      }\r\n\r\n      _displayCandleMaxMin.start = getMin(\r\n        item,\r\n        Number(_displayCandleMaxMin.start)\r\n      ).toString();\r\n      _displayCandleMaxMin.end = getMax(\r\n        item,\r\n        Number(_displayCandleMaxMin.end)\r\n      ).toString();\r\n\r\n      _currentCandleStick.volume =\r\n        Number(_currentCandleStick.volume) + Number(item.volume);\r\n      prevItem = item;\r\n\r\n      if (i === 0) {\r\n        allComputedCandleData.current[\r\n          _currentCandleStick.time\r\n        ] = _currentCandleStick;\r\n        //result.push(_currentCandleStick);\r\n      }\r\n    }\r\n\r\n    return _displayCandleMaxMin;\r\n  };\r\n\r\n  /**\r\n   * 将数据直接放进allComputedCandleData\r\n   * @param data 输入数据\r\n   */\r\n  const putDataIntoAllComputedCandleData = function(\r\n    data: IcandleItem[]\r\n  ): numberScopeString {\r\n    let _displayCandleMaxMin: numberScopeString = {\r\n      /**\r\n       * 最低点\r\n       * */\r\n      start: '9999999999999999999999',\r\n      /**\r\n       * 最高点\r\n       * */\r\n      end: '-9999999999999999999999',\r\n    };\r\n    for (var item of data) {\r\n      if (typeof allComputedCandleData.current[item.time] === 'undefined') {\r\n        _displayCandleMaxMin.start = getMin(\r\n          item,\r\n          Number(_displayCandleMaxMin.start)\r\n        ).toString();\r\n        _displayCandleMaxMin.end = getMax(\r\n          item,\r\n          Number(_displayCandleMaxMin.end)\r\n        ).toString();\r\n        allComputedCandleData.current[item.time] = { ...item };\r\n      }\r\n    }\r\n\r\n    return _displayCandleMaxMin;\r\n  };\r\n\r\n  const getCandleColor = function(\r\n    start: string,\r\n    end: string,\r\n    type: 'wick' | 'candle'\r\n  ): string {\r\n    if (Number(start) > Number(end)) {\r\n      if (type === 'wick') return initArgs.candleStyles!.wickFallColor!;\r\n      if (type === 'candle') return initArgs.candleStyles!.candleFallColor!;\r\n    }\r\n    if (type === 'wick') return initArgs.candleStyles!.wickRiseColor!;\r\n    if (type === 'candle') return initArgs.candleStyles!.candleRiseColor!;\r\n    return '#fff';\r\n  };\r\n\r\n  const getCandleStatus = function(\r\n    start: string,\r\n    end: string,\r\n    type: 'wick' | 'candle'\r\n  ): 'rise' | 'fall' {\r\n    if (Number(start) > Number(end)) {\r\n      if (type === 'wick') return 'fall';\r\n      if (type === 'candle') return 'fall';\r\n    }\r\n    if (type === 'wick') return 'rise';\r\n    if (type === 'candle') return 'rise';\r\n    return 'rise';\r\n  };\r\n\r\n  const getDataSpaceFromNumberScope = function(\r\n    dataScope: numberScopeString,\r\n    start: number,\r\n    end: number\r\n  ) {\r\n    let space = Number(dataScope.end) - Number(dataScope.start);\r\n    let cspace = end - start;\r\n    let precent = Number((cspace / space).toFixed(5));\r\n    let yHeight =\r\n      xAxis.data.viewSize.height -\r\n      getSpaceSize(xAxis.initArgs.labelSpace!, xAxis.data.viewSize.height);\r\n    return yHeight * precent;\r\n  };\r\n\r\n  const getDataY = function(\r\n    dataScope: numberScopeString,\r\n    dataPoint: string\r\n  ): number {\r\n    let space = Number(dataScope.end) - Number(dataScope.start);\r\n    let precent = Number(\r\n      ((Number(dataPoint) - Number(dataScope.start)) / space).toFixed(5)\r\n    );\r\n    let yHeight =\r\n      xAxis.data.viewSize.height -\r\n      getSpaceSize(xAxis.initArgs.labelSpace!, xAxis.data.viewSize.height);\r\n    return yHeight - yHeight * precent;\r\n  };\r\n\r\n  //用y轴数据计算单个指标的各种属性\r\n  const computSingalCandledata = function(\r\n    //进行计算的项目\r\n    dataitem: IcandleData,\r\n    //扩展后的范围（数据）\r\n    dataScope: numberScopeString,\r\n    //未扩展的范围（数据）\r\n    orgScope: numberScopeString\r\n  ): IcandleData {\r\n    dataitem.candleColor = getCandleColor(\r\n      dataitem.open as string,\r\n      dataitem.close as string,\r\n      'candle'\r\n    );\r\n    dataitem.wickColor = getCandleColor(\r\n      dataitem.open as string,\r\n      dataitem.close as string,\r\n      'wick'\r\n    );\r\n    dataitem.candleStateus = getCandleStatus(\r\n      dataitem.open as string,\r\n      dataitem.close as string,\r\n      'candle'\r\n    );\r\n    dataitem.wickStateus = getCandleStatus(\r\n      dataitem.open as string,\r\n      dataitem.close as string,\r\n      'wick'\r\n    );\r\n    //快速渲染\r\n    if (isQuickUpdateing.current == true) {\r\n      dataitem.wickWidth = 1.2;\r\n      dataitem.candlePixPosition = {\r\n        x: 0,\r\n        y: getDataY(\r\n          dataScope,\r\n          Math.max(Number(dataitem.close), Number(dataitem.open)).toString()\r\n        ),\r\n      };\r\n      dataitem.wickPixPosition = {\r\n        x: 0, //x在渲染时直接取currentTick这里就不用计算了\r\n        y: getDataY(dataScope, dataitem.high.toString()),\r\n      };\r\n      dataitem.wickLength = getDataSpaceFromNumberScope(\r\n        dataScope,\r\n        Number(dataitem.low),\r\n        Number(dataitem.high)\r\n      );\r\n      //全量渲染\r\n    } else {\r\n      try {\r\n        dataitem.candleWidth = getSpaceSize(\r\n          initArgs.candleStyles!.candleWidth!,\r\n          xAxis.data.displayTickCommonpixWidth!\r\n        );\r\n        dataitem.wickWidth = getSpaceSize(\r\n          initArgs.candleStyles!.wickWidth!,\r\n          xAxis.data.displayTickCommonpixWidth!\r\n        );\r\n      } catch (_e) {}\r\n\r\n      dataitem.candlePixPosition = {\r\n        x: 0, //x在渲染时直接取currentTick这里就不用计算了\r\n        y: getDataY(\r\n          dataScope,\r\n          Math.max(Number(dataitem.close), Number(dataitem.open)).toString()\r\n        ),\r\n      };\r\n      dataitem.wickPixPosition = {\r\n        x: 0, //x在渲染时直接取currentTick这里就不用计算了\r\n        y: getDataY(dataScope, dataitem.high.toString()),\r\n      };\r\n      dataitem.candleLength = getDataSpaceFromNumberScope(\r\n        dataScope,\r\n        Math.min(Number(dataitem.open), Number(dataitem.close)),\r\n        Math.max(Number(dataitem.open), Number(dataitem.close))\r\n      );\r\n      if (dataitem.candleLength < 1) {\r\n        dataitem.candleLength = 1;\r\n      }\r\n      dataitem.wickLength = getDataSpaceFromNumberScope(\r\n        dataScope,\r\n        Number(dataitem.low),\r\n        Number(dataitem.high)\r\n      );\r\n    }\r\n    try {\r\n      //顺便计算单个tick的数据空间是否在最左边边缘\r\n      //记录视图范围内最末尾的candle\r\n      if (\r\n        xAxis.data.lineSize.width -\r\n          xAxis.data.x -\r\n          dataitem.currentTick!.pixSpace!.start >=\r\n          0 &&\r\n        dataitem.currentTick!.pixSpace!.end -\r\n          (xAxis.data.lineSize.width - xAxis.data.x) <=\r\n          dataitem.currentTick!.pixSpace!.end -\r\n            dataitem.currentTick!.pixSpace!.start\r\n      ) {\r\n        setdisplayLatestCandle(dataitem);\r\n      }\r\n    } catch (_e) {}\r\n    dataitem.updateTag = orgScope.start + orgScope.end;\r\n    return dataitem;\r\n  };\r\n\r\n  //用y轴数据计算单个指标的各种属性\r\n  const computSingalCandledataMini = function(\r\n    //candle项目\r\n    dataitem: IcandleData,\r\n    //未扩展的范围（数据）\r\n    orgScope: numberScopeString\r\n  ): void {\r\n    try {\r\n      //顺便计算单个tick的数据空间是否在最左边边缘\r\n      //记录视图范围内最末尾的candle\r\n      if (\r\n        xAxis.data.lineSize.width -\r\n          xAxis.data.x -\r\n          dataitem.currentTick!.pixSpace!.start >=\r\n          0 &&\r\n        dataitem.currentTick!.pixSpace!.end -\r\n          (xAxis.data.lineSize.width - xAxis.data.x) <=\r\n          dataitem.currentTick!.pixSpace!.end -\r\n            dataitem.currentTick!.pixSpace!.start\r\n      ) {\r\n        setdisplayLatestCandle(dataitem);\r\n      }\r\n    } catch (_e) {}\r\n  };\r\n\r\n  /**\r\n   * 从x轴指针里查找数据\r\n   * @param tickArr x轴指针\r\n   * @param dataScope 范围\r\n   * @returns\r\n   */\r\n  const findDataByTicks = function(\r\n    tickArr: tickItem[]\r\n  ): IcandleData[] | { data: IcandleData[]; scope: numberScopeString } {\r\n    let result: IcandleData[] = [];\r\n    let _displayCandleMaxMin: numberScopeString = {\r\n      /**\r\n       * 最低点\r\n       * */\r\n      start: '9999999999999999999999',\r\n      /**\r\n       * 最高点\r\n       * */\r\n      end: '-9999999999999999999999',\r\n    };\r\n    let maxVolume: number = -99999999999999;\r\n    for (let inde_i = 0; inde_i < tickArr.length; inde_i++) {\r\n      let item = tickArr[inde_i];\r\n      if (typeof allComputedCandleData.current[item.value] !== 'undefined') {\r\n        let dataitem: IcandleData = allComputedCandleData.current[\r\n          item.value\r\n        ] as IcandleData;\r\n        dataitem!.currentTick! = item;\r\n\r\n        _displayCandleMaxMin.start = getMin(\r\n          dataitem,\r\n          Number(_displayCandleMaxMin.start)\r\n        ).toString();\r\n        _displayCandleMaxMin.end = getMax(\r\n          dataitem,\r\n          Number(_displayCandleMaxMin.end)\r\n        ).toString();\r\n\r\n        if (maxVolume < Number(dataitem.volume)) {\r\n          maxVolume = Number(dataitem.volume);\r\n        }\r\n\r\n        result.push(dataitem);\r\n      }\r\n    }\r\n    setvolumChartViewMax(maxVolume);\r\n\r\n    return { data: result, scope: _displayCandleMaxMin };\r\n  };\r\n\r\n  //将数据里所有的时间按照用户设置的数据源时区还原GMT +0000，然后再设置到显示时区\r\n  const seAllDataDateToUserConfigedGMT = function(data: IcandleData[]) {\r\n    for (let item of data) {\r\n      //如果填写的是\"本地时间\"，就不做任何操作\r\n      if (baseConfig.timeZone!.dataSourceTimeZone === 'local') {\r\n        item.time = Number(item.time);\r\n      } else {\r\n        //否则，先把时间按照用户设置的归零，然后再设置到显示时间\r\n        item.time = anyTimeToGMT0000ToTarget(\r\n          Number(item.time),\r\n          baseConfig.timeZone!.dataSourceTimeZone,\r\n          baseConfig.timeZone!.displayTimeZone\r\n        );\r\n      }\r\n    }\r\n\r\n    return data;\r\n  };\r\n\r\n  /**\r\n   * 初始化动态数据\r\n   */\r\n  const initDynamicData = async function() {\r\n    //清空堆数据\r\n    Object.keys(allComputedCandleData.current).forEach(\r\n      key => delete allComputedCandleData.current[key]\r\n    );\r\n    setupdateStamp(-1);\r\n    setorgCandleData([]);\r\n    setdisplayCandleData([]);\r\n    setyScale(1);\r\n    setminy(0);\r\n    setisFetchingData(true);\r\n    setCursorCandleItem(null);\r\n    setlatestCandleItem(null);\r\n    setvolumChartPixHeight(0);\r\n    setvolumChartViewMax(0);\r\n    setdisplayCandleMaxMin({ start: '0', end: '0' });\r\n    setorg_displayCandleMaxMin({ start: '0', end: '0' });\r\n    setlatestCandleToolTip(null);\r\n    setlatestVolumeToolTip(null);\r\n    setdisplayLatestCandle(null);\r\n    setlatestdisplayLatestCandle(null);\r\n    setlatestdisplayLatestVolume(null);\r\n    allComputedCandleData.current = {};\r\n    isUpdateing.current = false;\r\n    isQuickUpdateing.current = false;\r\n    isEscapeItems.current = false;\r\n    setisFinishedInit(false);\r\n    setstopDynamicFetching(false);\r\n    // TODO: 1.获得时间范围，获得当前x轴时间范围的end,然后往后推用户设置的数据条数（也就是时间单位）\r\n    let endTime = xAxis.data.currentTimeScope.end;\r\n    /**\r\n     * 当前的整数时间\r\n     */\r\n    let _timeInteger = xAxis.data.currentTimeType!.roundingFunction(\r\n      endTime,\r\n      baseConfig!.timeZone!.displayTimeZone!\r\n    );\r\n\r\n    /**\r\n     * 获得末尾时间\r\n     */\r\n    let startTime = xAxis.data.currentTimeType!.backwardTimeUnit!(\r\n      _timeInteger,\r\n      initArgs.dynamicData!.dataFetchCountPreTime!,\r\n      baseConfig!.timeZone!.displayTimeZone!\r\n    );\r\n    let result: IcandleItem[] = await initArgs.dynamicData!.dataFetchCallback!(\r\n      (xAxis.data.currentTimeType!.name as unknown) as TtimeType,\r\n      startTime,\r\n      endTime\r\n    );\r\n    if (result.length !== 0) {\r\n      setTempDynamicData(seAllDataDateToUserConfigedGMT(result));\r\n      setisFirstTimeUpdate(true);\r\n    }\r\n    //计算volum图的像素高度\r\n    let heightPixVolumArea = getSpaceSize(\r\n      initArgs.candleStyles?.volumChart?.volumeChartHeight!,\r\n      xAxis.data.linePosition.y\r\n    );\r\n    setvolumChartPixHeight(heightPixVolumArea);\r\n    setisFetchingData(false);\r\n\r\n    setisFinishedInit(true);\r\n  };\r\n\r\n  /**\r\n   * 在数据滚动或者缩放时发起的动态数据拉取\r\n   */\r\n  const lunchDynamicData = async function(endTime: number) {\r\n    if (isFetchingData) {\r\n      return;\r\n    }\r\n    setisFetchingData(true);\r\n    /**\r\n     * 获得末尾时间\r\n     */\r\n    let startTime = xAxis.data.currentTimeType!.backwardTimeUnit!(\r\n      endTime,\r\n      initArgs.dynamicData!.dataFetchCountPreTime!,\r\n      baseConfig!.timeZone!.displayTimeZone!\r\n    );\r\n\r\n    let timeZoneD = 0;\r\n\r\n    if (baseConfig.timeZone!.displayTimeZone === 'local') {\r\n      let date = new Date();\r\n      let localtimeZone = Math.abs(date.getTimezoneOffset() / 60);\r\n      timeZoneD = localtimeZone;\r\n    } else {\r\n      timeZoneD = baseConfig.timeZone!.displayTimeZone;\r\n    }\r\n    //如果设置了时间归零\r\n    //查询时间会被错开，所以查询的时候就再还原一下时间\r\n    startTime = anyTimeToGMT0000ToTarget(\r\n      startTime,\r\n      timeZoneD,\r\n      baseConfig.timeZone!.fetchConditionTimeZone\r\n    );\r\n    endTime = anyTimeToGMT0000ToTarget(\r\n      endTime,\r\n      timeZoneD,\r\n      baseConfig.timeZone!.fetchConditionTimeZone\r\n    );\r\n\r\n    let result: IcandleItem[] = await initArgs.dynamicData!.dataFetchCallback!(\r\n      (xAxis.data.currentTimeType!.name as unknown) as TtimeType,\r\n      startTime,\r\n      endTime\r\n    );\r\n\r\n    //返回数据为0或为空\r\n    //停止拉取数据了\r\n    if (typeof result === 'undefined' || result === null) {\r\n      setstopDynamicFetching(true);\r\n      return;\r\n    }\r\n\r\n    //如果result的结果等于1\r\n    //然后这个结果在显示candle集合里的最末尾\r\n    if (result.length === 1) {\r\n      let intTime = anyTimeToGMT0000ToTarget(\r\n        Number(result[0].time),\r\n        baseConfig.timeZone!.dataSourceTimeZone,\r\n        baseConfig.timeZone!.displayTimeZone\r\n      );\r\n      //说明数据已经到头了\r\n      if (intTime === displayCandleData[0].time) {\r\n        setstopDynamicFetching(true);\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (result.length !== 0) {\r\n      setTempDynamicData(seAllDataDateToUserConfigedGMT(result));\r\n    }\r\n    setisFetchingData(false);\r\n  };\r\n\r\n  /**\r\n   * 更新动态数据\r\n   */\r\n  const updateDynamicData = function(data: IcandleItem[]) {\r\n    if (isFetchingData) {\r\n      return;\r\n    }\r\n    if (!isFinishedInit) {\r\n      return;\r\n    }\r\n\r\n    //排序\r\n    let _data = data.sort(function(a, b) {\r\n      return getRightDate(a.time) - getRightDate(b.time);\r\n    });\r\n\r\n    //判断时间类型是不是一致，还是大了还是小了\r\n    var isConsistentOfDateType = determineTimeSpaceConsistent(data);\r\n\r\n    //大了就没办法了，直接return\r\n    if (isConsistentOfDateType === 'bigger') {\r\n      console.log(\r\n        'The time interval of the data is inconsistent with the given configured time interval!'\r\n      );\r\n      return;\r\n    }\r\n\r\n    //将新数据加入到当前现有的数据里去\r\n    //小了的话就按照配置的时间类型进行归并\r\n    if (isConsistentOfDateType === 'smaller') {\r\n      mergeData(_data);\r\n    } else {\r\n      //如果是一致的，就直接将这些数据放进堆里\r\n      putDataIntoAllComputedCandleData(_data);\r\n    }\r\n\r\n    //新老数据合并做个备份\r\n    let _orgCandleData = [..._data, ...orgCandleData];\r\n\r\n    setorgCandleData(_orgCandleData);\r\n    if (isFirstTimeUpdate) {\r\n      setisFirstTimeUpdate(false);\r\n      setinitDyStamp(+new Date());\r\n    } else {\r\n      setfetchDataStemp(+new Date());\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 初始化静态数据\r\n   */\r\n  const initStaticData = function() {\r\n    //清空堆数据\r\n    Object.keys(allComputedCandleData.current).forEach(\r\n      key => delete allComputedCandleData.current[key]\r\n    );\r\n    //排序\r\n    let _orgCandleData = seAllDataDateToUserConfigedGMT(\r\n      initArgs.staticData!.sort(function(a, b) {\r\n        return getRightDate(a.time) - getRightDate(b.time);\r\n      })\r\n    );\r\n\r\n    //判断时间类型是不是一致，还是大了还是小了\r\n    var isConsistentOfDateType = determineTimeSpaceConsistent(_orgCandleData);\r\n\r\n    //大了就没办法了，直接return\r\n    if (isConsistentOfDateType === 'bigger') {\r\n      console.log(\r\n        'The time interval of the data is inconsistent with the given configured time interval!'\r\n      );\r\n      return;\r\n    }\r\n\r\n    let dataScope: numberScopeString = { start: '500', end: '700' };\r\n    //小了的话就按照配置的时间类型进行归并\r\n    if (isConsistentOfDateType === 'smaller') {\r\n      dataScope = mergeData(_orgCandleData);\r\n    } else {\r\n      //如果是一致的，就直接将这些数据放进堆里\r\n      dataScope = putDataIntoAllComputedCandleData(_orgCandleData);\r\n    }\r\n\r\n    //dataScope  这个scope是指所有数据的scope,并不是当前屏幕显示范围的scope\r\n\r\n    //用于显示的数据\r\n    let result = findDataByTicks(xAxis.data.tickArr) as {\r\n      data: IcandleData[];\r\n      scope: numberScopeString;\r\n    };\r\n\r\n    for (let item of result.data) {\r\n      item = computSingalCandledata(item, result.scope, result.scope);\r\n    }\r\n    dataScope = result.scope;\r\n\r\n    //计算volum图的像素高度\r\n    let heightPixVolumArea = getSpaceSize(\r\n      initArgs.candleStyles?.volumChart?.volumeChartHeight!,\r\n      xAxis.data.linePosition.y\r\n    );\r\n\r\n    setvolumChartPixHeight(heightPixVolumArea);\r\n\r\n    setorgCandleData(_orgCandleData);\r\n    setdisplayCandleData(result.data);\r\n    setviewSize(xAxis.data.viewSize);\r\n    setisFinishedInit(true);\r\n    setorg_displayCandleMaxMin(result.scope);\r\n    setyScale(1);\r\n    setminy(0);\r\n    //更新y轴\r\n    yAxis.funcs.updateAxisSates(\r\n      xAxis.data.viewSize.width,\r\n      xAxis.data.viewSize.height,\r\n      {\r\n        start: Number(dataScope.start),\r\n        end: Number(dataScope.end),\r\n      }\r\n    );\r\n    setdisplayCandleMaxMin(dataScope);\r\n    setupdateStamp(+new Date());\r\n    setisFetchingData(false);\r\n  };\r\n\r\n  //只计算缩放和刚进来的数据，不进行全量更新\r\n  //这个算法主要的运算方式是：\r\n  //1.重新用xAxis.data.tickArr循环一遍，从哈希表里直接取到当前的显示canle组\r\n  //2.然后循环取出来的列表再循环一次计算位置，\r\n  //3.计算位置的时候判断这个列表里有哪些candle项目已经被计算过计算过的就不算了，没计算过的计算一下\r\n  const updatePartialCandleData = function() {\r\n    let _xAxisdatatickArr = [...xAxis.data.tickArr];\r\n    let _viewSize = { ...xAxis.data.viewSize };\r\n    let _org_displayCandleMaxMin = { ...org_displayCandleMaxMin };\r\n    let isEscapeItems_current = isEscapeItems.current;\r\n    let isQuickUpdateing_current = isQuickUpdateing.current;\r\n\r\n    //用于显示的数据\r\n    let result = findDataByTicks(_xAxisdatatickArr) as {\r\n      data: IcandleData[];\r\n      scope: numberScopeString;\r\n    };\r\n\r\n    //result.data 为 和目前x轴tick的交集displaycandles\r\n    //result.scope 为扩展之前的数据范围 真实的数据范围\r\n    if (result.data.length === 0) {\r\n      //没找到\r\n      setdisplayCandleData([]);\r\n      checkDynamicData();\r\n      return;\r\n    }\r\n\r\n    //先通知y轴更新了\r\n    requestAnimationFrame(function() {\r\n      //更新y轴\r\n      yAxis.funcs.updateAxisSates(_viewSize.width, _viewSize.height, {\r\n        start: Number(result.scope.start),\r\n        end: Number(result.scope.end),\r\n      });\r\n    });\r\n\r\n    //上次缩放或重置后使用的最大值最小值(数据范围，不是像素 )\r\n    //而且是未经扩展过的数据范围（素）的\r\n\r\n    let currentTag =\r\n      _org_displayCandleMaxMin.start + _org_displayCandleMaxMin.end;\r\n    let orgMaxMiny: numberScope = {\r\n      //start 找 y+length 最大的\r\n      start: -9999999999999999,\r\n      //end找y最小的\r\n      end: 99999999999999,\r\n    };\r\n    //进行数据计算\r\n    let index = 0;\r\n\r\n    for (var item of result.data) {\r\n      //如果已经打开了省略模式\r\n\r\n      //如果已经打开了省略模式\r\n      if (isEscapeItems_current) {\r\n        if (Number(index) % 2) {\r\n          //全部进行全量计算\r\n          //如果上次更新的tag和现在当前的值不一致，说明是上次缩放后还没来得及计算的元素\r\n          //这样的元素就需要重新进行计算，\r\n          //否则就不需要进行计算\r\n          if (\r\n            typeof item.updateTag === 'undefined' ||\r\n            item.updateTag !== currentTag\r\n          ) {\r\n            item = computSingalCandledata(\r\n              item,\r\n              _org_displayCandleMaxMin,\r\n              _org_displayCandleMaxMin\r\n            );\r\n          } else {\r\n            computSingalCandledataMini(item, _org_displayCandleMaxMin);\r\n          }\r\n          item.isEscaped = false;\r\n        } else {\r\n          //省略过的只收集数据\r\n          computSingalCandledataMini(item, result.scope);\r\n          item.isEscaped = true;\r\n        }\r\n      } else {\r\n        //全部进行全量计算\r\n        //如果上次更新的tag和现在当前的值不一致，说明是上次缩放后还没来得及计算的元素\r\n        //这样的元素就需要重新进行计算，\r\n        //否则就不需要进行计算\r\n        if (\r\n          typeof item.updateTag === 'undefined' ||\r\n          item.updateTag !== currentTag\r\n        ) {\r\n          item = computSingalCandledata(\r\n            item,\r\n            _org_displayCandleMaxMin,\r\n            _org_displayCandleMaxMin\r\n          );\r\n        } else {\r\n          computSingalCandledataMini(item, _org_displayCandleMaxMin);\r\n        }\r\n        item.isEscaped = false;\r\n      }\r\n\r\n      if (isQuickUpdateing_current) {\r\n        if (\r\n          Number(item.wickPixPosition?.y) + Number(item.wickLength) >\r\n          orgMaxMiny.start\r\n        ) {\r\n          //求（像素）y最大值\r\n          orgMaxMiny.start =\r\n            Number(item.wickPixPosition?.y) + Number(item.wickLength);\r\n        }\r\n        //求（像素）y最小值\r\n        if (Number(item.wickPixPosition?.y) < orgMaxMiny.end) {\r\n          orgMaxMiny.end = Number(item.wickPixPosition?.y);\r\n        }\r\n      } else {\r\n        if (\r\n          Math.max(\r\n            Number(item.candlePixPosition?.y) + Number(item.candleLength),\r\n            Number(item.wickPixPosition?.y) + Number(item.wickLength)\r\n          ) > orgMaxMiny.start\r\n        ) {\r\n          //求（像素）y最大值\r\n          orgMaxMiny.start = Math.max(\r\n            Number(item.candlePixPosition?.y) + Number(item.candleLength),\r\n            Number(item.wickPixPosition?.y) + Number(item.wickLength)\r\n          );\r\n        }\r\n        //求（像素）y最小值\r\n        if (\r\n          Math.min(\r\n            Number(item.candlePixPosition?.y),\r\n            Number(item.wickPixPosition?.y)\r\n          ) < orgMaxMiny.end\r\n        ) {\r\n          orgMaxMiny.end = Math.min(\r\n            Number(item.candlePixPosition?.y),\r\n            Number(item.wickPixPosition?.y)\r\n          );\r\n        }\r\n      }\r\n\r\n      index++;\r\n    }\r\n\r\n    //对查找出来的边界进行扩展\r\n    ///let expandedMaxMin = yAxis.funcs.expandDataSpanceEdgePIX(orgMaxMiny);\r\n\r\n    let currentheight = orgMaxMiny.start - orgMaxMiny.end;\r\n    let expendHeight =\r\n      currentheight + currentheight * yAxis.initArgs.displayPadding!;\r\n    let scale = yAxis.data.lineSize.height / expendHeight;\r\n    let y =\r\n      -orgMaxMiny.end + (currentheight * yAxis.initArgs.displayPadding!) / 2;\r\n\r\n    setdisplayCandleData(result.data);\r\n\r\n    setdisplayCandleMaxMin(result.scope);\r\n\r\n    if (result.data.length !== 0) {\r\n      setminy(y * scale);\r\n      setyScale(scale);\r\n      checkDynamicData(result.data);\r\n      setupdateStamp(+new Date());\r\n    }\r\n  };\r\n\r\n  /*\r\n\t第三版结合所有优点根据情况决定是计算还是更新\r\n\t*/\r\n  const updatePartialCandleDataV3 = function() {\r\n    let onlyUpdatePositionAndScale = function(_cArr?: IcandleData[]) {\r\n      let isFromAppend = false;\r\n      if (typeof _cArr === 'undefined') {\r\n        _cArr = [...displayCandleData];\r\n        _cArr = _cArr.sort(function(a, b) {\r\n          return Number(a.time) - Number(b.time);\r\n        });\r\n      } else {\r\n        isFromAppend = true;\r\n      }\r\n      if (_cArr.length === 0) {\r\n        return;\r\n      }\r\n      let _LastScopeddcData = [...LastScopeddcData];\r\n      let barr = [];\r\n      /* if (_LastScopeddcData.length !== 0) {\r\n\t\t\t\tbarr = _LastScopeddcData;\r\n\t\t\t} else { */\r\n      barr = _cArr;\r\n      /* } */\r\n      let currentScopeDisplayCandleData = findIntersectionCandle(\r\n        barr,\r\n        xAxis.data.currentTimeScope\r\n      );\r\n      if (isFromAppend) {\r\n        currentScopeDisplayCandleData = _cArr;\r\n      } else {\r\n        currentScopeDisplayCandleData = findIntersectionCandle(\r\n          barr,\r\n          xAxis.data.currentTimeScope\r\n        );\r\n      }\r\n      let orgMaxMiny: numberScope = {\r\n        //start 找 y+length 最大的\r\n        start: -9999999999999999,\r\n        //end找y最小的\r\n        end: 99999999999999,\r\n      };\r\n      let _displayCandleMaxMin: numberScopeString = {\r\n        /**\r\n         * 最低点\r\n         * */\r\n        start: '9999999999999999999999',\r\n        /**\r\n         * 最高点\r\n         * */\r\n        end: '-9999999999999999999999',\r\n      };\r\n      let maxVolume: number = -99999999999999;\r\n\r\n      let i = 0;\r\n      while (i < currentScopeDisplayCandleData.length) {\r\n        let item = currentScopeDisplayCandleData[i];\r\n        if (isQuickUpdateing.current) {\r\n          if (\r\n            Number(item.wickPixPosition?.y) + Number(item.wickLength) >\r\n            orgMaxMiny.start\r\n          ) {\r\n            //求（像素）y最大值\r\n            orgMaxMiny.start =\r\n              Number(item.wickPixPosition?.y) + Number(item.wickLength);\r\n          }\r\n          //求（像素）y最小值\r\n          if (Number(item.wickPixPosition?.y) < orgMaxMiny.end) {\r\n            orgMaxMiny.end = Number(item.wickPixPosition?.y);\r\n          }\r\n        } else {\r\n          if (\r\n            Math.max(\r\n              Number(item.candlePixPosition?.y) + Number(item.candleLength),\r\n              Number(item.wickPixPosition?.y) + Number(item.wickLength)\r\n            ) > orgMaxMiny.start\r\n          ) {\r\n            //求（像素）y最大值\r\n            orgMaxMiny.start = Math.max(\r\n              Number(item.candlePixPosition?.y) + Number(item.candleLength),\r\n              Number(item.wickPixPosition?.y) + Number(item.wickLength)\r\n            );\r\n          }\r\n          //求（像素）y最小值\r\n          if (\r\n            Math.min(\r\n              Number(item.candlePixPosition?.y),\r\n              Number(item.wickPixPosition?.y)\r\n            ) < orgMaxMiny.end\r\n          ) {\r\n            orgMaxMiny.end = Math.min(\r\n              Number(item.candlePixPosition?.y),\r\n              Number(item.wickPixPosition?.y)\r\n            );\r\n          }\r\n        }\r\n        i++;\r\n      }\r\n\r\n      let currentheight = orgMaxMiny.start - orgMaxMiny.end;\r\n      let expendHeight =\r\n        currentheight + currentheight * yAxis.initArgs.displayPadding!;\r\n      let scale = yAxis.data.lineSize.height / expendHeight;\r\n      let y =\r\n        -orgMaxMiny.end + (currentheight * yAxis.initArgs.displayPadding!) / 2;\r\n\r\n      setminy(y * scale);\r\n      setyScale(scale);\r\n      /* setLastScopeddcData(() => currentScopeDisplayCandleData); */\r\n\r\n      for (let i = 0; i < currentScopeDisplayCandleData.length; i++) {\r\n        let item = currentScopeDisplayCandleData[i];\r\n        computSingalCandledataMini(item, org_displayCandleMaxMin);\r\n\r\n        _displayCandleMaxMin.start = getMin(\r\n          item,\r\n          Number(_displayCandleMaxMin.start)\r\n        ).toString();\r\n        _displayCandleMaxMin.end = getMax(\r\n          item,\r\n          Number(_displayCandleMaxMin.end)\r\n        ).toString();\r\n        if (maxVolume < Number(item.volume)) {\r\n          maxVolume = Number(item.volume);\r\n        }\r\n      }\r\n\r\n      //先通知y轴更新了\r\n      requestAnimationFrame(function() {\r\n        if (currentScopeDisplayCandleData.length === 0) {\r\n          return;\r\n        }\r\n        //更新y轴\r\n        yAxis.funcs.updateAxisSates(viewSize.width, viewSize.height, {\r\n          start: Number(_displayCandleMaxMin.start),\r\n          end: Number(_displayCandleMaxMin.end),\r\n        });\r\n      });\r\n\r\n      setdisplayCandleMaxMin(_displayCandleMaxMin);\r\n      setvolumChartViewMax(maxVolume);\r\n      setupdateStamp(+new Date());\r\n    };\r\n\r\n    let updateAndAppendNewCandle = function() {\r\n      let _totalCandleDisplayArr = [...displayCandleData];\r\n      if (_totalCandleDisplayArr.length === 0) {\r\n        return;\r\n      }\r\n      let orgMaxMiny: numberScope = {\r\n        //start 找 y+length 最大的\r\n        start: -9999999999999999,\r\n        //end找y最小的\r\n        end: 99999999999999,\r\n      };\r\n      let backwardDCArr: IcandleData[] = [];\r\n      //判断是前面少了还是后面少了\r\n      if (xAxis.data.tickArr[0].value !== _totalCandleDisplayArr[0].time) {\r\n        let index = 0;\r\n        while (\r\n          typeof xAxis.data.tickArr[index] !== 'undefined' &&\r\n          xAxis.data.tickArr[index].value < _totalCandleDisplayArr[0].time\r\n        ) {\r\n          let item = (allComputedCandleData.current[\r\n            xAxis.data.tickArr[index].value\r\n          ] as unknown) as IcandleData;\r\n          if (typeof item !== 'undefined') {\r\n            item.currentTick = xAxis.data.tickArr[index];\r\n            backwardDCArr.push(item);\r\n          }\r\n          index++;\r\n        }\r\n      }\r\n\r\n      let forwardDCArr: IcandleData[] = [];\r\n      if (\r\n        xAxis.data.tickArr[xAxis.data.tickArr.length - 1].value !==\r\n        _totalCandleDisplayArr[_totalCandleDisplayArr.length - 1].time\r\n      ) {\r\n        let index = xAxis.data.tickArr.length - 1;\r\n        while (\r\n          typeof xAxis.data.tickArr[index] !== 'undefined' &&\r\n          xAxis.data.tickArr[index].value >\r\n            _totalCandleDisplayArr[_totalCandleDisplayArr.length - 1].time\r\n        ) {\r\n          let item = (allComputedCandleData.current[\r\n            xAxis.data.tickArr[index].value\r\n          ] as unknown) as IcandleData;\r\n          if (typeof item !== 'undefined') {\r\n            item.currentTick = xAxis.data.tickArr[index];\r\n            forwardDCArr.unshift(item);\r\n          }\r\n          index--;\r\n        }\r\n      }\r\n\r\n      let _displayCandleData = [\r\n        ...backwardDCArr,\r\n        ..._totalCandleDisplayArr,\r\n        ...forwardDCArr,\r\n      ];\r\n\r\n      let currentScopeDisplayCandleData = findIntersectionCandle(\r\n        _displayCandleData,\r\n        xAxis.data.currentTimeScope\r\n      );\r\n\r\n      let _org_displayCandleMaxMin = org_displayCandleMaxMin;\r\n      let currentTag =\r\n        _org_displayCandleMaxMin.start + _org_displayCandleMaxMin.end;\r\n\r\n      for (var item of currentScopeDisplayCandleData) {\r\n        if (\r\n          typeof item.updateTag === 'undefined' ||\r\n          item.updateTag !== currentTag\r\n        ) {\r\n          item = computSingalCandledata(\r\n            item,\r\n            _org_displayCandleMaxMin,\r\n            _org_displayCandleMaxMin\r\n          );\r\n        } else {\r\n          computSingalCandledataMini(item, _org_displayCandleMaxMin);\r\n        }\r\n      }\r\n      setdisplayCandleData(_displayCandleData);\r\n      checkDynamicData(_displayCandleData);\r\n      return currentScopeDisplayCandleData;\r\n    };\r\n    window.requestAnimationFrame(function() {\r\n      if (xAxis.data.tickArr.length > 120) {\r\n        let inputArr: IcandleData[] | undefined = undefined;\r\n        if (\r\n          xAxis.data.lastTimeScope.start !==\r\n            xAxis.data.currentTimeScope.start &&\r\n          xAxis.data.lastTimeScope.end !== xAxis.data.currentTimeScope.end\r\n        ) {\r\n          if (Math.abs(xAxis.data.mouseSpeedSec) < 3) {\r\n            inputArr = updateAndAppendNewCandle();\r\n          }\r\n        } else {\r\n          inputArr = updateAndAppendNewCandle();\r\n        }\r\n\r\n        onlyUpdatePositionAndScale(inputArr);\r\n      } else {\r\n        updatePartialCandleData();\r\n      }\r\n    });\r\n  };\r\n\r\n  //只计算缩放和刚进来的数据，不进行全量更新\r\n  //这个算法主要的运算方式是：\r\n  //1.重新用xAxis.data.tickArr循环一遍，从哈希表里直接取到当前的显示canle组\r\n  //2.然后循环取出来的列表再循环一次计算位置，\r\n  //3.计算位置的时候判断这个列表里有哪些candle项目已经被计算过计算过的就不算了，没计算过的计算一下\r\n  //多线程版本\r\n  const updatePartialCandleDataWorker = function() {\r\n    let _xAxisdatatickArr = [...xAxis.data.tickArr];\r\n    let _viewSize = { ...xAxis.data.viewSize };\r\n    let _org_displayCandleMaxMin = { ...org_displayCandleMaxMin };\r\n    let isEscapeItems_current = isEscapeItems.current;\r\n    let isQuickUpdateing_current = isQuickUpdateing.current;\r\n    let allComputedCandleData_current = allComputedCandleData.current;\r\n    let xAxis_initArgs_labelSpace = xAxis.initArgs.labelSpace;\r\n    let initArgs_candleStyles_wickFallColor = initArgs.candleStyles!\r\n      .wickFallColor!;\r\n    let initArgs_candleStyles_candleFallColor = initArgs.candleStyles!\r\n      .candleFallColor!;\r\n    let initArgs_candleStyles_wickRiseColor = initArgs.candleStyles!\r\n      .wickRiseColor!;\r\n    let initArgs_candleStyles_candleRiseColor = initArgs.candleStyles!\r\n      .candleRiseColor!;\r\n    let initArgs_candleStyles_candleWidth = initArgs.candleStyles!.candleWidth!;\r\n    let initArgs_candleStyles_wickWidth = initArgs.candleStyles!.wickWidth!;\r\n    let xAxis_data_displayTickCommonpixWidth = xAxis.data\r\n      .displayTickCommonpixWidth!;\r\n    let xAxis_data_lineSize_width = xAxis.data.lineSize.width;\r\n    let xAxis_data_x = xAxis.data.x;\r\n\r\n    mWorker.current?.postMessage({\r\n      message: 'move',\r\n      _xAxisdatatickArr: _xAxisdatatickArr,\r\n      _viewSize: _viewSize,\r\n      _org_displayCandleMaxMin: _org_displayCandleMaxMin,\r\n      isEscapeItems_current: isEscapeItems_current,\r\n      isQuickUpdateing_current: isQuickUpdateing_current,\r\n      allComputedCandleData_current: allComputedCandleData_current,\r\n      xAxis_initArgs_labelSpace: xAxis_initArgs_labelSpace,\r\n      initArgs_candleStyles_wickFallColor: initArgs_candleStyles_wickFallColor,\r\n      initArgs_candleStyles_candleFallColor: initArgs_candleStyles_candleFallColor,\r\n      initArgs_candleStyles_wickRiseColor: initArgs_candleStyles_wickRiseColor,\r\n      initArgs_candleStyles_candleRiseColor: initArgs_candleStyles_candleRiseColor,\r\n      initArgs_candleStyles_candleWidth: initArgs_candleStyles_candleWidth,\r\n      initArgs_candleStyles_wickWidth: initArgs_candleStyles_wickWidth,\r\n      xAxis_data_displayTickCommonpixWidth: xAxis_data_displayTickCommonpixWidth,\r\n      xAxis_data_lineSize_width: xAxis_data_lineSize_width,\r\n      xAxis_data_x: xAxis_data_x,\r\n    });\r\n\r\n    //let currentheight = orgMaxMiny.start - orgMaxMiny.end;\r\n    //let expendHeight = currentheight + currentheight * yAxis.initArgs.displayPadding!;\r\n    //let scale = yAxis.data.lineSize.height / expendHeight;\r\n    //let y = -orgMaxMiny.end + (currentheight * yAxis.initArgs.displayPadding!) / 2;\r\n    //\r\n    //setdisplayCandleData(() => {\r\n    //\treturn result.data;\r\n    //});\r\n    //\r\n    //setdisplayCandleMaxMin(() => {\r\n    //\treturn result.scope;\r\n    //});\r\n    //\r\n    //if (result.data.length !== 0) {\r\n    //\tsetminy(y * scale);\r\n    //\tsetyScale(scale);\r\n    //\tcheckDynamicData(result.data);\r\n    //\tsetupdateStamp(+new Date());\r\n    //}\r\n  };\r\n\r\n  //只计算刚进来的数据，不做全量更新\r\n  //第二个版本\r\n  //1.用二分查找直接取到剩下还能用的candle\r\n  //2.使用推进法扩展candle\r\n  /* const updatePartialCandleDataV2 = function () {\r\n\t\tlet _cArr = [...displayCandleData];\r\n\t\tlet lastDisplayCandleData = findIntersectionCandle(_cArr, xAxis.data.currentTimeScope);\r\n\r\n\t\tlet backwardDCArr: IcandleData[] = [];\r\n\t\t//判断是前面少了还是后面少了\r\n\t\tif (xAxis.data.tickArr[0].value !== lastDisplayCandleData[0].time) {\r\n\t\t\tlet index = 0;\r\n\t\t\twhile (xAxis.data.tickArr[index].value < lastDisplayCandleData[0].time) {\r\n\t\t\t\tlet item = allComputedCandleData.current[xAxis.data.tickArr[index].value] as unknown as IcandleData;\r\n\t\t\t\tif (typeof item !== \"undefined\") {\r\n\t\t\t\t\titem.currentTick = xAxis.data.tickArr[index];\r\n\t\t\t\t\tbackwardDCArr.push(item);\r\n\t\t\t\t}\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet forwardDCArr: IcandleData[] = [];\r\n\t\tif (\r\n\t\t\txAxis.data.tickArr[xAxis.data.tickArr.length - 1].value !==\r\n\t\t\tlastDisplayCandleData[lastDisplayCandleData.length - 1].time\r\n\t\t) {\r\n\t\t\tlet index = xAxis.data.tickArr.length - 1;\r\n\t\t\twhile (xAxis.data.tickArr[index].value > lastDisplayCandleData[lastDisplayCandleData.length - 1].time) {\r\n\t\t\t\tlet item = allComputedCandleData.current[xAxis.data.tickArr[index].value] as unknown as IcandleData;\r\n\t\t\t\tif (typeof item !== \"undefined\") {\r\n\t\t\t\t\titem.currentTick = xAxis.data.tickArr[index];\r\n\t\t\t\t\tforwardDCArr.unshift(item);\r\n\t\t\t\t}\r\n\t\t\t\tindex--;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (backwardDCArr.length === 0 && forwardDCArr.length === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//上次缩放或重置后使用的最大值最小值(数据范围，不是像素 )\r\n\t\t//而且是未经扩展过的数据范围（素）的\r\n\t\tlet _org_displayCandleMaxMin = org_displayCandleMaxMin;\r\n\t\tlet currentTag = _org_displayCandleMaxMin.start + _org_displayCandleMaxMin.end;\r\n\r\n\t\t//继承上一次的结果，并从这次的新结果里查找最大的y和最小的y\r\n\t\tlet orgMaxMiny: numberScope = { ...lastMaxMiny };\r\n\t\t//继承上一次的\r\n\t\tlet _displayCandleMaxMin: numberScopeString = { ...displayCandleMaxMin };\r\n\r\n\t\t///计算新选出来的displaycandle项目\r\n\t\tlet comp = function (arrayCD: IcandleData[]): IcandleData[] {\r\n\t\t\t//进行数据计算\r\n\t\t\tlet index = 0;\r\n\t\t\tisEscapeItems.current = false;\r\n\t\t\tfor (var item of arrayCD) {\r\n\t\t\t\t//如果已经打开了省略模式\r\n\r\n\t\t\t\t//全部进行全量计算\r\n\t\t\t\t//如果上次更新的tag和现在当前的值不一致，说明是上次缩放后还没来得及计算的元素\r\n\t\t\t\t//这样的元素就需要重新进行计算，\r\n\t\t\t\t//否则就不需要进行计算\r\n\t\t\t\tif (typeof item.updateTag === \"undefined\" || item.updateTag !== currentTag) {\r\n\t\t\t\t\titem = computSingalCandledata(item, _org_displayCandleMaxMin, _org_displayCandleMaxMin);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcomputSingalCandledataMini(item, _org_displayCandleMaxMin);\r\n\t\t\t\t}\r\n\t\t\t\titem.isEscaped = false;\r\n\r\n\t\t\t\tif (isQuickUpdateing.current) {\r\n\t\t\t\t\tif (Number(item.wickPixPosition?.y) + Number(item.wickLength) > orgMaxMiny.start) {\r\n\t\t\t\t\t\t//求（像素）y最大值\r\n\t\t\t\t\t\torgMaxMiny.start = Number(item.wickPixPosition?.y) + Number(item.wickLength);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//求（像素）y最小值\r\n\t\t\t\t\tif (Number(item.wickPixPosition?.y) < orgMaxMiny.end) {\r\n\t\t\t\t\t\torgMaxMiny.end = Number(item.wickPixPosition?.y);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tMath.max(\r\n\t\t\t\t\t\t\tNumber(item.candlePixPosition?.y) + Number(item.candleLength),\r\n\t\t\t\t\t\t\tNumber(item.wickPixPosition?.y) + Number(item.wickLength)\r\n\t\t\t\t\t\t) > orgMaxMiny.start\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\t//求（像素）y最大值\r\n\t\t\t\t\t\torgMaxMiny.start = Math.max(\r\n\t\t\t\t\t\t\tNumber(item.candlePixPosition?.y) + Number(item.candleLength),\r\n\t\t\t\t\t\t\tNumber(item.wickPixPosition?.y) + Number(item.wickLength)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//求（像素）y最小值\r\n\t\t\t\t\tif (Math.min(Number(item.candlePixPosition?.y), Number(item.wickPixPosition?.y)) < orgMaxMiny.end) {\r\n\t\t\t\t\t\torgMaxMiny.end = Math.min(Number(item.candlePixPosition?.y), Number(item.wickPixPosition?.y));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_displayCandleMaxMin.start = getMin(item, Number(_displayCandleMaxMin.start)).toString();\r\n\t\t\t\t_displayCandleMaxMin.end = getMax(item, Number(_displayCandleMaxMin.end)).toString();\r\n\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\t\t\treturn arrayCD;\r\n\t\t};\r\n\r\n\t\tlet _displayCandleData = comp(backwardDCArr).concat(lastDisplayCandleData).concat(comp(forwardDCArr));\r\n\r\n\t\tlet currentheight = orgMaxMiny.start - orgMaxMiny.end;\r\n\t\tlet expendHeight = currentheight + currentheight * yAxis.initArgs.displayPadding!;\r\n\t\tlet scale = yAxis.data.lineSize.height / expendHeight;\r\n\t\tlet y = -orgMaxMiny.end + (currentheight * yAxis.initArgs.displayPadding!) / 2;\r\n\r\n\t\tsetdisplayCandleData(_displayCandleData);\r\n\r\n\t\tsetdisplayCandleMaxMin(() => {\r\n\t\t\treturn _displayCandleMaxMin;\r\n\t\t});\r\n\r\n\t\tif (_displayCandleData.length !== 0) {\r\n\t\t\tsetminy(y * scale);\r\n\t\t\tsetyScale(scale);\r\n\t\t\tcheckDynamicData(_displayCandleData);\r\n\t\t\tsetupdateStamp(+new Date());\r\n\t\t\tsetlastMaxMiny(orgMaxMiny);\r\n\t\t}\r\n\t}; */\r\n\r\n  //进行全量更新\r\n  const reComputAllDisplayedCandleData = function() {\r\n    //用于显示的数据\r\n    let result = findDataByTicks(xAxis.data.tickArr) as {\r\n      data: IcandleData[];\r\n      scope: numberScopeString;\r\n    };\r\n    if (result.data.length === 0) {\r\n      setdisplayCandleData([]);\r\n      checkDynamicData();\r\n      return;\r\n    }\r\n\r\n    requestAnimationFrame(function() {\r\n      //更新y轴\r\n      yAxis.funcs.updateAxisSates(\r\n        xAxis.data.viewSize.width,\r\n        xAxis.data.viewSize.height,\r\n        {\r\n          start: Number(result.scope.start),\r\n          end: Number(result.scope.end),\r\n        }\r\n      );\r\n    });\r\n\r\n    setdisplayCandleMaxMin(() => {\r\n      return result.scope;\r\n    });\r\n\r\n    //if (xAxis.data.tickArr.length > 2000) {\r\n    //\tisEscapeItems.current = true;\r\n    //} else {\r\n    //\tisEscapeItems.current = false;\r\n    //}\r\n\r\n    let index = 0;\r\n    for (let item of result.data) {\r\n      //如果已经打开了省略模式\r\n      if (isEscapeItems.current) {\r\n        if (Number(index) % 2) {\r\n          //没有被省略的进行全量计算\r\n          item = computSingalCandledata(item, result.scope, result.scope);\r\n          item.isEscaped = false;\r\n        } else {\r\n          //省略过的只收集数据\r\n          computSingalCandledataMini(item, result.scope);\r\n          item.isEscaped = true;\r\n        }\r\n      } else {\r\n        //全部进行全量计算\r\n        item = computSingalCandledata(item, result.scope, result.scope);\r\n        item.isEscaped = false;\r\n      }\r\n      index++;\r\n    }\r\n\r\n    setdisplayCandleData(result.data);\r\n    setviewSize(xAxis.data.viewSize);\r\n\r\n    if (result.data.length !== 0) {\r\n      let scale =\r\n        xAxis.data.linePosition.y /\r\n        (xAxis.data.linePosition.y! * yAxis.initArgs.displayPadding! +\r\n          xAxis.data.linePosition.y);\r\n      let y = (xAxis.data.linePosition.y! * yAxis.initArgs.displayPadding!) / 2;\r\n      setminy(y * scale);\r\n      setyScale(scale);\r\n      setorg_displayCandleMaxMin(result.scope);\r\n      checkDynamicData(result.data);\r\n      setupdateStamp(+new Date());\r\n      setlastMaxMiny({\r\n        start: xAxis.data.linePosition.y,\r\n        end: 0,\r\n      });\r\n    }\r\n  };\r\n\r\n  const checkDynamicData = async function(data?: IcandleData[]) {\r\n    //如果当前缩放、拖动超过所有内存中数据能显示的范围\r\n    //判断是否为动态数据加载模式\r\n    if (\r\n      initArgs.dynamicData!.enabled! &&\r\n      !isStaticData &&\r\n      !stopDynamicFetching\r\n    ) {\r\n      if (typeof data !== 'undefined') {\r\n        if (Number(data[0].time) - Number(xAxis.data.tickArr[0].value) > 0) {\r\n          //往下拉取数据\r\n          lunchDynamicData(Number(data[0].time));\r\n        }\r\n      } else {\r\n        lunchDynamicData(\r\n          Number(xAxis.data.tickArr[xAxis.data.tickArr.length - 1].value)\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 缩放的更新\r\n   */\r\n  const scaleUpdate = function() {\r\n    if (!isUpdateing.current) {\r\n      isUpdateing.current = true;\r\n      //如果数据太多就设置为简便更新\r\n      if (xAxis.data.tickArr.length > 500) {\r\n        setisDQuickUpdateing(true);\r\n        isQuickUpdateing.current = true;\r\n      } else {\r\n        setisDQuickUpdateing(false);\r\n        isQuickUpdateing.current = false;\r\n      }\r\n\r\n      if (isQuickUpdateing.current) {\r\n        updateThrottlereComputAllDisplayedCandleData(function() {\r\n          reComputAllDisplayedCandleData();\r\n          xAxis.funcs.setx(0);\r\n        }, 50);\r\n      } else {\r\n        reComputAllDisplayedCandleData();\r\n        xAxis.funcs.setx(0);\r\n      }\r\n      isUpdateing.current = false;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 移动的更新\r\n   */\r\n  const moveUpdate = function() {\r\n    if (!isUpdateing.current) {\r\n      isUpdateing.current = true;\r\n      //如果数据太多就设置为简便更新\r\n      if (xAxis.data.tickArr.length > 500) {\r\n        setisDQuickUpdateing(true);\r\n        isQuickUpdateing.current = true;\r\n      } else {\r\n        setisDQuickUpdateing(false);\r\n        isQuickUpdateing.current = false;\r\n      }\r\n      if (isQuickUpdateing.current) {\r\n        updatePartialCandleDataV3();\r\n      } else {\r\n        updatePartialCandleDataV3();\r\n      }\r\n      isUpdateing.current = false;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 更新最末尾的Candle\r\n   */\r\n  let updateLatestCandleData = function(candleItem: IcandleUpdateItem): void {\r\n    setstreamData(candleItem);\r\n  };\r\n\r\n  let updateStreamData = function() {\r\n    if (!isFinishedInit) {\r\n      return;\r\n    }\r\n    if (displayCandleData.length === 0) {\r\n      return;\r\n    }\r\n    if (streamData === null) {\r\n      return;\r\n    }\r\n    if (latestCandleItem === null) {\r\n      return null;\r\n    }\r\n\r\n    let { time, open, close, high, low, volume, isMergeMode } = {\r\n      ...streamData,\r\n    };\r\n\r\n    //将新进来的数据的时间，归零到格林威治时间\r\n    if (baseConfig.timeZone!.dataSourceTimeZone === 'local') {\r\n      time = Number(new Date(time).getTime());\r\n    } else {\r\n      time = anyTimeToGMT0000ToTarget(\r\n        Number(new Date(time).getTime()),\r\n        baseConfig.timeZone!.dataSourceTimeZone,\r\n        baseConfig.timeZone!.displayTimeZone\r\n      );\r\n    }\r\n    let _displayCandleData = [...displayCandleData];\r\n    let currentRoundTime = xAxis.data.currentTimeType?.roundingFunction!(\r\n      Number(time),\r\n      baseConfig!.timeZone!.displayTimeZone!\r\n    )!;\r\n    let _latestCandleItem = { ...latestCandleItem };\r\n    let isNew = false;\r\n    _latestCandleItem.isEscaped = false;\r\n\r\n    let isChangeDisplayCandleArr = false;\r\n\r\n    //如果只是更新现有的\r\n    if (currentRoundTime === _latestCandleItem?.time!) {\r\n      //是否为快速合并模式\r\n      if (typeof isMergeMode !== 'undefined' && isMergeMode === true) {\r\n        _latestCandleItem.close = close;\r\n        _latestCandleItem.high = Math.max(\r\n          Number(_latestCandleItem.high),\r\n          Number(close)\r\n        );\r\n        _latestCandleItem.low = Math.min(\r\n          Number(_latestCandleItem.low),\r\n          Number(close)\r\n        );\r\n        _latestCandleItem.volume = volume;\r\n      } else {\r\n        _latestCandleItem.time = currentRoundTime;\r\n        //_latestCandleItem.open = open!; //可以不用填open的，如果用户数据源没设置好还能兼容一下\r\n        _latestCandleItem.close = close!;\r\n        _latestCandleItem.high = high!;\r\n        _latestCandleItem.low = low!;\r\n        _latestCandleItem.volume = volume;\r\n      }\r\n\r\n      //匹配displayCandleData\r\n      for (var i = _displayCandleData.length - 1; i > -1; i--) {\r\n        if (_displayCandleData[i].time === currentRoundTime) {\r\n          _latestCandleItem.currentTick = _displayCandleData[i].currentTick;\r\n\r\n          _latestCandleItem = computSingalCandledata(\r\n            _latestCandleItem,\r\n            org_displayCandleMaxMin,\r\n            org_displayCandleMaxMin\r\n          );\r\n          _displayCandleData[i] = _latestCandleItem;\r\n          isChangeDisplayCandleArr = true;\r\n          _latestCandleItem.updateTag = '0';\r\n          break;\r\n        }\r\n      }\r\n    } else if (currentRoundTime > Number(_latestCandleItem?.time!)) {\r\n      //如果是下一个时间刻度\r\n      //是否为快速合并模式\r\n      if (typeof isMergeMode !== 'undefined' && isMergeMode === true) {\r\n        _latestCandleItem.time = currentRoundTime;\r\n        _latestCandleItem.open = close;\r\n        _latestCandleItem.close = close;\r\n        _latestCandleItem.high = close;\r\n        _latestCandleItem.low = close;\r\n        _latestCandleItem.volume = volume;\r\n      } else {\r\n        _latestCandleItem.time = currentRoundTime;\r\n        _latestCandleItem.open = open!;\r\n        _latestCandleItem.close = close!;\r\n        _latestCandleItem.high = high!;\r\n        _latestCandleItem.low = low!;\r\n        _latestCandleItem.volume = volume;\r\n        _latestCandleItem.updateTag = '0';\r\n      }\r\n\r\n      //查找ticks\r\n      for (var i = xAxis.data.tickArr.length - 1; i > -1; i--) {\r\n        let tick = xAxis.data.tickArr[i];\r\n        if (tick.value === _latestCandleItem.time) {\r\n          _latestCandleItem.currentTick = tick;\r\n          break;\r\n        }\r\n      }\r\n\r\n      _latestCandleItem = computSingalCandledata(\r\n        _latestCandleItem,\r\n        org_displayCandleMaxMin,\r\n        org_displayCandleMaxMin\r\n      );\r\n\r\n      //在可见范围内更新，不可见就不更新\r\n      if (\r\n        xAxis.data.currentTimeScope.start <= currentRoundTime &&\r\n        xAxis.data.currentTimeScope.end >= currentRoundTime\r\n      ) {\r\n        _displayCandleData.push(_latestCandleItem);\r\n        isChangeDisplayCandleArr = true;\r\n      }\r\n\r\n      isNew = true;\r\n    } else {\r\n      //既不等于\r\n      //又不大于\r\n      //那就有可能是上次时间类型的数据流响应 直接忽略\r\n      return;\r\n    }\r\n\r\n    allComputedCandleData.current[currentRoundTime] = _latestCandleItem;\r\n    setvolumChartViewMax(\r\n      Math.max(Number(_latestCandleItem.volume), volumChartViewMax)\r\n    );\r\n    setlatestCandleItem({ ..._latestCandleItem });\r\n    if (!isNew) {\r\n      let newMaxMin = {\r\n        start: Math.min(\r\n          Number(displayCandleMaxMin.start),\r\n          Number(_latestCandleItem.close)\r\n        ).toString(),\r\n        end: Math.max(\r\n          Number(displayCandleMaxMin.end),\r\n          Number(_latestCandleItem.close)\r\n        ).toString(),\r\n      };\r\n      if (\r\n        newMaxMin.start !== displayCandleMaxMin.start ||\r\n        newMaxMin.end !== displayCandleMaxMin.end\r\n      ) {\r\n        setfetchDataStemp(+new Date());\r\n      } else {\r\n        if (isChangeDisplayCandleArr) {\r\n          setdisplayCandleData(_displayCandleData);\r\n        }\r\n        //更新tooltip\r\n        setupdateStamp(+new Date());\r\n      }\r\n    } else {\r\n      //可见范围内的话就移动一下\r\n      if (\r\n        xAxis.data.currentTimeScope.start <= currentRoundTime &&\r\n        xAxis.data.currentTimeScope.end >= currentRoundTime\r\n      ) {\r\n        xAxis.funcs.moveContainer!(\r\n          0,\r\n          0 -\r\n            (_latestCandleItem!.currentTick!.pixSpace!.end -\r\n              _latestCandleItem!.currentTick!.pixSpace!.start),\r\n          true\r\n        );\r\n      }\r\n      if (isChangeDisplayCandleArr) {\r\n        setdisplayCandleData(_displayCandleData);\r\n      }\r\n      //更新tooltip\r\n      setupdateStamp(+new Date());\r\n    }\r\n\r\n    return _latestCandleItem;\r\n  };\r\n\r\n  /**\r\n   * 更新最末尾的tooltip\r\n   */\r\n  let updateLatestCandleTooltip = function() {\r\n    if (orgCandleData.length !== 0 && displayCandleData.length !== 0) {\r\n      var dataItem: IcandleData;\r\n      if (latestCandleItem === null) {\r\n        if (isStaticData) {\r\n          let soted = orgCandleData.sort(function(a, b) {\r\n            return getRightDate(a.time) - getRightDate(b.time);\r\n          });\r\n          let intTime = xAxis.data.currentTimeType!.roundingFunction!(\r\n            getRightDate(orgCandleData[orgCandleData.length - 1].time!),\r\n            baseConfig.timeZone!.displayTimeZone!\r\n          )!;\r\n          dataItem = allComputedCandleData.current[intTime] as IcandleData;\r\n        } else {\r\n          dataItem = allComputedCandleData.current[\r\n            displayCandleData[displayCandleData.length - 1].time\r\n          ] as IcandleData;\r\n        }\r\n      } else {\r\n        dataItem = latestCandleItem;\r\n      }\r\n\r\n      if (typeof dataItem !== 'undefined') {\r\n        let copyedItem = { ...dataItem };\r\n\r\n        let orgScope = { ...displayCandleMaxMin };\r\n        ////这里的数据是给tooltip计算的\r\n        ////如果后面不复原的话，会影响搭配lastcandle\r\n        let edgeScope = yAxis.funcs.expandDataSpanceEdge(orgScope);\r\n        computSingalCandledata(copyedItem, edgeScope.dataScope, orgScope);\r\n\r\n        let _tooltipState: IToolTipItem = {\r\n          position: {\r\n            x: 0,\r\n            y: (function() {\r\n              if (Number(copyedItem.close) > Number(copyedItem.open)) {\r\n                return copyedItem.candlePixPosition!.y!;\r\n              }\r\n              return (\r\n                copyedItem.candlePixPosition!.y! + copyedItem.candleLength!\r\n              );\r\n            })(),\r\n          },\r\n          length: xAxis.data.lineSize.width,\r\n          value: copyedItem.close,\r\n          displayValue: new _bigNumber(copyedItem.close).toFixed(displayFix),\r\n          relatedTickItem: null,\r\n          size: getSpaceSize(\r\n            initArgs.candleStyles!.currentPriceTooltip!.lineSize!,\r\n            viewSize.width\r\n          ),\r\n        };\r\n\r\n        setlatestCandleToolTip(_tooltipState);\r\n\r\n        //这里给lastcandle进行复原计算\r\n        //computSingalCandledata(copyedItem, org_displayCandleMaxMin, org_displayCandleMaxMin);\r\n        setlatestCandleItem(copyedItem);\r\n\r\n        let currentHeight =\r\n          volumChartPixHeight * (Number(copyedItem.volume) / volumChartViewMax);\r\n        let _latestVolumeToolTip: IToolTipItem = {\r\n          position: {\r\n            x: 0,\r\n            y: xAxis.data.linePosition.y - currentHeight,\r\n          },\r\n          length: xAxis.data.lineSize.width,\r\n          value: copyedItem.volume,\r\n          displayValue: new _bigNumber(copyedItem.volume).toFixed(displayFix),\r\n          relatedTickItem: null,\r\n          size: getSpaceSize(\r\n            initArgs.candleStyles!.volumChart?.currentPriceTooltip.lineSize!,\r\n            viewSize.width\r\n          ),\r\n        };\r\n        setlatestVolumeToolTip(_latestVolumeToolTip);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 视图范围内最末尾的candle\r\n   */\r\n  let updateLatestdisplayLatestCandle = function() {\r\n    if (displayLatestCandle !== null) {\r\n      let edgeScope = yAxis.funcs.expandDataSpanceEdge(displayCandleMaxMin);\r\n      let _displayLatestCandle = computSingalCandledata(\r\n        { ...displayLatestCandle },\r\n        edgeScope.dataScope,\r\n        displayCandleMaxMin\r\n      );\r\n      if (_displayLatestCandle.isEscaped! === true) {\r\n        return;\r\n      }\r\n      let _tooltipState: IToolTipItem = {\r\n        position: {\r\n          x: 0,\r\n          y: (function() {\r\n            let y = 0;\r\n            if (\r\n              Number(_displayLatestCandle.close) >\r\n              Number(_displayLatestCandle.open)\r\n            ) {\r\n              y = _displayLatestCandle.candlePixPosition!.y!;\r\n            } else {\r\n              y =\r\n                _displayLatestCandle.candlePixPosition!.y! +\r\n                _displayLatestCandle.candleLength!;\r\n              if (isNaN(y)) {\r\n                y = _displayLatestCandle.candlePixPosition!.y! + 0;\r\n              }\r\n            }\r\n            return y;\r\n          })(),\r\n        },\r\n        length: xAxis.data.lineSize.width,\r\n        value: _displayLatestCandle.close,\r\n        displayValue: new _bigNumber(_displayLatestCandle.close).toFixed(\r\n          displayFix\r\n        ),\r\n        relatedTickItem: null,\r\n        size: getSpaceSize(\r\n          initArgs.candleStyles!.viewLastPriceTooltip!.lineSize!,\r\n          viewSize.width\r\n        ),\r\n      };\r\n      setlatestdisplayLatestCandle(_tooltipState);\r\n\r\n      let currentHeight =\r\n        volumChartPixHeight *\r\n        (Number(_displayLatestCandle.volume) / volumChartViewMax);\r\n      let _latestdisplayLatestVolume: IToolTipItem = {\r\n        position: {\r\n          x: 0,\r\n          y: xAxis.data.linePosition.y - currentHeight,\r\n        },\r\n        length: xAxis.data.lineSize.width,\r\n        value: _displayLatestCandle.volume,\r\n        displayValue: new _bigNumber(_displayLatestCandle.volume).toFixed(\r\n          displayFix\r\n        ),\r\n        relatedTickItem: null,\r\n        size: getSpaceSize(\r\n          initArgs.candleStyles!.volumChart?.viewLastPriceTooltip.lineSize!,\r\n          viewSize.width\r\n        ),\r\n      };\r\n      setlatestdisplayLatestVolume(_latestdisplayLatestVolume);\r\n    }\r\n  };\r\n\r\n  let getCurrentCursorCandle = function() {\r\n    if (\r\n      xAxis.data.tooltipIsShow &&\r\n      typeof xAxis.data.tooltipState !== 'undefined' &&\r\n      xAxis.data.tooltipState !== null &&\r\n      typeof xAxis.data.tooltipState!.relatedTickItem !== 'undefined' &&\r\n      xAxis.data.tooltipState!.relatedTickItem !== null\r\n    ) {\r\n      let key = xAxis.data.tooltipState!.relatedTickItem!.value!.toString();\r\n      let item = allComputedCandleData.current[key] as IcandleItem;\r\n      setCursorCandleItem(item);\r\n    }\r\n  };\r\n\r\n  let workerReciveMessage = function(e: MessageEvent<any>) {\r\n    let data = e.data;\r\n\r\n    if (data.message === 'setdisplayLatestCandle') {\r\n      setdisplayLatestCandle(data.data);\r\n      return;\r\n    }\r\n\r\n    if (data.message === 'not found') {\r\n      //没找到\r\n      setdisplayCandleData([]);\r\n      checkDynamicData();\r\n      return;\r\n    }\r\n\r\n    if (data.message === 'updateYaxis') {\r\n      requestAnimationFrame(function() {\r\n        //更新y轴\r\n        yAxis.funcs.updateAxisSates(\r\n          xAxis.data.viewSize.width,\r\n          xAxis.data.viewSize.height,\r\n          {\r\n            start: Number(data.data.start),\r\n            end: Number(data.data.end),\r\n          }\r\n        );\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (data.message === 'finishWork') {\r\n      let currentheight = data.data.orgMaxMiny.start - data.data.orgMaxMiny.end;\r\n      let expendHeight =\r\n        currentheight + currentheight * yAxis.initArgs.displayPadding!;\r\n      let scale = yAxis.data.lineSize.height / expendHeight;\r\n      let y =\r\n        -data.data.orgMaxMiny.end +\r\n        (currentheight * yAxis.initArgs.displayPadding!) / 2;\r\n      //\r\n      setdisplayCandleData(data.data.result.data);\r\n      //\r\n      setdisplayCandleMaxMin(data.data.result.scope);\r\n      //\r\n      if (data.data.result.data.length !== 0) {\r\n        setminy(y * scale);\r\n        setyScale(scale);\r\n        checkDynamicData(data.data.result.data);\r\n        setupdateStamp(+new Date());\r\n      }\r\n      return;\r\n    }\r\n  };\r\n\r\n  let openMoveWorker = function() {\r\n    mWorker.current = new Worker(\r\n      new URL('../webWorkers/moveWorker', import.meta.url)\r\n    );\r\n    mWorker.current.addEventListener('message', (e: MessageEvent<any>) => {\r\n      seworkMessage(e);\r\n    });\r\n  };\r\n\r\n  /**\r\n   * ==================================Effects===============================\r\n   */\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      if (typeof workMessage !== 'undefined') {\r\n        workerReciveMessage(workMessage);\r\n      }\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },\r\n    [workMessage]\r\n  );\r\n  useEffect(function(): ReturnType<React.EffectCallback> {\r\n    if (isMounted === false) {\r\n      setIsMounted(true);\r\n      if (\r\n        typeof initArgs.staticData !== 'undefined' &&\r\n        initArgs.staticData!.length > 0\r\n      ) {\r\n        setisStaticData(true);\r\n      } else {\r\n        setisStaticData(false);\r\n      }\r\n      openMoveWorker();\r\n    }\r\n    return function(): void {\r\n      setIsMounted(false);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  //这里专门用于第一次载入时的更新\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      //静态模式是依据initArgs.staticData.length 进行的\r\n      //如果initArgs.staticData.length > 0 就说明现在需要进行静态数据的展示\r\n      if (\r\n        isMounted === true &&\r\n        xAxis.data.isFinishedInit &&\r\n        yAxis.data.isFinishedInit\r\n      ) {\r\n        //记录一下当前的时间类型\r\n        setcurrentTimeTypeName(xAxis.data.currentTimeType?.name!);\r\n        //如果是静态数据\r\n        if (isStaticData) {\r\n          //初始化静态数据\r\n          initStaticData();\r\n        } else if (initArgs.dynamicData!.enabled) {\r\n          //否则进入动态数据模式\r\n          initDynamicData();\r\n        }\r\n      }\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },\r\n    [xAxis.data.isFinishedInit, yAxis.data.isFinishedInit]\r\n  );\r\n\r\n  //数据动态载入完成以后需要重新渲染一下数据\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      //静态模式是依据initArgs.staticData.length 进行的\r\n      //如果initArgs.staticData.length > 0 就说明现在需要进行静态数据的展示\r\n      if (fetchDataStemp !== -1) {\r\n        moveUpdate();\r\n      }\r\n\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },\r\n    [fetchDataStemp]\r\n  );\r\n\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      //静态模式是依据initArgs.staticData.length 进行的\r\n      //如果initArgs.staticData.length > 0 就说明现在需要进行静态数据的展示\r\n      if (initDyStamp !== -1) {\r\n        window.requestAnimationFrame(function() {\r\n          scaleUpdate();\r\n        });\r\n      }\r\n\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },\r\n    [initDyStamp]\r\n  );\r\n\r\n  //这里专门用户时间类型切换时的更新\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      if (\r\n        xAxis.data.xAxisUpdateTimeStamp !== -1 &&\r\n        xAxis.data.xAxisUpdateTimeStamp !== lastTimexAsixStemp\r\n      ) {\r\n        if (xAxis.data.currentTimeType !== null && currentTimeTypeName !== '') {\r\n          //这里判断是否更新了时间类型（就是时间单位）\r\n          if (xAxis.data.currentTimeType.name !== currentTimeTypeName) {\r\n            //记录一下当前的时间类型\r\n            setcurrentTimeTypeName(xAxis.data.currentTimeType?.name);\r\n            //如果是静态数据\r\n            if (isStaticData) {\r\n              //初始化静态数据\r\n              initStaticData();\r\n            } else if (initArgs.dynamicData!.enabled) {\r\n              //否则进入动态数据模式\r\n              initDynamicData();\r\n            }\r\n          }\r\n          setlastTimexAsixStemp(xAxis.data.xAxisUpdateTimeStamp);\r\n        }\r\n      }\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },\r\n    [xAxis.data.xAxisUpdateTimeStamp, xAxis.data.currentTimeType]\r\n  );\r\n\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      if (xAxis.data.xAxisUpdateMoveMentTimeStamp !== -1) {\r\n        moveUpdate();\r\n      }\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },\r\n    [xAxis.data.xAxisUpdateMoveMentTimeStamp]\r\n  );\r\n\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      if (xAxis.data.xAxisUpdateScaleTimeStamp !== -1) {\r\n        window.requestAnimationFrame(function() {\r\n          scaleUpdate();\r\n        });\r\n      }\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },\r\n    [xAxis.data.xAxisUpdateScaleTimeStamp]\r\n  );\r\n\r\n  //这里专门用于计算完candle之后的操作\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      if (updateStamp !== -1) {\r\n        updateLatestCandleTooltip();\r\n        updateLatestdisplayLatestCandle();\r\n      }\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },\r\n    [updateStamp]\r\n  );\r\n\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      getCurrentCursorCandle();\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },\r\n    [xAxis.data.tooltipState]\r\n  );\r\n\r\n  //ws动态更新第一个数据\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      if (\r\n        streamData !== null &&\r\n        //\r\n        streamData.time !== -1 &&\r\n        isFinishedInit === true &&\r\n        isFetchingData === false\r\n      ) {\r\n        updateStreamData();\r\n      }\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },\r\n    [streamData, isFinishedInit, isFetchingData]\r\n  );\r\n\r\n  useEffect(\r\n    function(): ReturnType<React.EffectCallback> {\r\n      if (TempDynamicData !== null) {\r\n        updateDynamicData([...TempDynamicData]);\r\n      }\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },\r\n    [TempDynamicData]\r\n  );\r\n\r\n  return {\r\n    data: {\r\n      displayCandleData,\r\n      isDQuickUpdateing,\r\n      latestCandleToolTip,\r\n      latestdisplayLatestCandle,\r\n      volumChartPixHeight,\r\n      volumChartViewMax,\r\n      latestVolumeToolTip,\r\n      latestdisplayLatestVolume,\r\n      cursorCandleItem,\r\n      latestCandleItem,\r\n      yScale,\r\n      miny,\r\n      updateStamp,\r\n      isFetchingData,\r\n      isFinishedInit,\r\n    },\r\n    funcs: {\r\n      updateLatestCandleData,\r\n      setinitArgs: function(arg: IdataConfig) {\r\n        setinitArgs(merge(initArgs, arg));\r\n      },\r\n    },\r\n    initArgs,\r\n  };\r\n};\r\n\r\nexport default useCandleHook;\r\n"],"names":["runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","arg","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","globalThis","Function","formatDate","date","format","Date","replace","getFullYear","toString","substring","getMonth","getDate","getHours","getMinutes","getSeconds","anyTimeToGMT0000ToTarget","time","currentTimeZone","targetTimeZone","localtimeZone","Math","abs","getTimezoneOffset","setHours","getTime","getSpaceSize","indexOf","Number","console","log","getRangePosition","range","pixWidth","start","end","findIntersection","tickArr","scope","item","findIntersectionByKey","findIntersectionCandle","candle","shiftNumber","_number","_shiftLength","_bigNumber","times","exponentiatedBy","arrayToHash","arr","keyProperty","reduce","hash","index","roundToNearestTenBigNumber","num","intGetPar","bigNum","remainder","modulo","minus","plus","integerValue","ROUND_FLOOR","binarySearchByKeyStrictlyEqual","inputArr","target","targetType","getItem","mid","left","right","floor","binarySearchByKey","startIndex","endIndex","getRightDate","dateTime","thousandsSplit","numStr","trim","split","output","j","getUnitNumber","_num","_lan","_fix","translateNumberT","translateNumberF","translateNumberK","toFixed","nIARR","dividedBy","getLength","p1","p2","sqrt","pow","x","y","useThrottle","useState","isMounted","setIsMounted","ThrottleFunction","useRef","ThrottleTimeOut","useEffect","_func","_time","current","setTimeout","DEFAULTAXISVALUES","labelSpace","fontColor","fontSize","netLineColor","lineColor","tickColor","tickLength","netLineMaxCount","netLineMinCount","netLineSize","lineSize","tickSize","backgroundColor","tooltip","enabled","color","dashLength","spaceLength","label","fontsize","backGroundColor","backGroundAlpha","formatter","axisItem","initTimePoint","displayPadding","DEFAULTDATAVALUES","staticData","dynamicData","showLoading","stopUserOperateWhenLoading","dataFetchCountPreTime","dataFetchCallback","candleStyles","candleWidth","wickWidth","candleRiseColor","candleFallColor","wickRiseColor","wickFallColor","currentPriceTooltip","displayValue","viewLastPriceTooltip","volumChart","volumeChartHeight","alpha","riseColor","fallColor","language","DEFAULTVALUES","title","enableTitle","enableinfo","timeFormat","width","height","resizeDebounceTime","timeZone","dataSourceTimeZone","fetchConditionTimeZone","displayTimeZone","yAxis","xAxis","data","LANGUAGES","zh","today","yesterday","unitsecond","unitminute","unithour","unithalfOur","unitoclock","unitday","unitdayst","unitdaynd","unitdayrd","thisMonth","nextMonth","January","February","March","April","May","June","July","August","September","October","November","December","year","thisyear","lastyear","oneMin","twoMin","threeMin","fiveMin","tenMin","fifteenMin","halfhour","oneHour","oneday","oneWeek","onemonth","oneYear","en","getshifttime","hourShift","ONEMIN","lang","timeGap","roundingFunction","timeStamp","now","setSeconds","setMilliseconds","forwardSingleUnit","setMinutes","backwardSingleUnit","forwardTimeUnit","backwardTimeUnit","getInitTimeScope","initTime","lan","TENMIN","FIFMIN","HALFHOUR","HOUR","DAY","setDate","MONTH","setMonth","YEAR","setFullYear","timeTypeMap","1min","2min","3min","5min","10min","15min","30min","1h","1d","1w","currentDay","getDay","offsetDays","1m","1y","findRoundTimeCountFromArray","array","timeShift","currentType","getItemTime","getTimeShift","gap","_timeTypeMap","findRoundTimeCount","timeType","result_c","count","step","round","latestEqualIndex","nextRound","nextEqualIndex","stepCount","countSelectedElements","timeTypeItem","candleViewContext","createContext","useCandleViewContext","useContext","Rectangle","PixiComponent","Graphics","applyProps","instance","oldProps","props","new_props","assign","DEFAULTRECTANGLE","newxy","xyComput","clear","beginFill","opacity","drawRect","size","endFill","position","alignX","alignY","utils","string2hex","DashedLine","_","newProps","defaults","positionStart","positionStop","lineStyle","x1","y1","x2","y2","hyp","units","dashSpaceRatio","dashX","spaceX","dashY","spaceY","moveTo","lineTo","drawDash","XAxis","_ref","CVData","useCandleViewPixiContext","tooltipTextRef","xBackground","useMemo","React","PIXI","hookObjs","xAxisObj","initArgs","viewSize","linePosition","yAxisObj","xAsixElem","ticks","displayTickArr","Fragment","cPosition","makeTicks","labels","Text","anchor","text","_item$displayValue","resolution","style","align","fill","makeLabels","tooltipState","tooltipIsShow","_CVData$hookObjs$xAxi","_CVData$hookObjs$xAxi2","labelPadding","relatedTickItem","_CVData$hookObjs$xAxi3","_CVData$hookObjs$xAxi4","ref","_CVData$hookObjs$xAxi5","_CVData$hookObjs$xAxi6","_CVData$hookObjs$xAxi7","_CVData$hookObjs$xAxi8","_CVData$hookObjs$xAxi9","_CVData$hookObjs$xAxi10","Container","memo","DataTooltop","updateTemp","setupdateTemp","lastDataTooltipTextRef","lastDataTooltipTextRef2","lastDataTooltipTextRef3","lastDataTooltipTextRef4","latestCandleToolTip","candleObj","_CVData$hookObjs$cand16","latestdisplayLatestCandle","_CVData$hookObjs$cand17","_CVData$hookObjs$cand18","_CVData$hookObjs$cand19","_CVData$hookObjs$cand20","_CVData$hookObjs$cand21","_CVData$hookObjs$cand22","_CVData$hookObjs$cand23","_CVData$hookObjs$cand24","_CVData$hookObjs$cand25","_CVData$hookObjs$cand26","_CVData$hookObjs$cand27","_CVData$hookObjs$cand28","_CVData$hookObjs$cand29","_CVData$hookObjs$cand30","_CVData$hookObjs$cand31","_CVData$hookObjs$cand32","_CVData$hookObjs$cand33","_CVData$hookObjs$cand34","_CVData$hookObjs$cand73","lastCandleTooltip","latestCandleItem","_CVData$hookObjs$cand","candleColor","_CVData$hookObjs$cand2","_CVData$hookObjs$cand3","_CVData$hookObjs$cand4","_CVData$hookObjs$cand5","_CVData$hookObjs$cand6","_CVData$hookObjs$cand7","_CVData$hookObjs$cand8","_CVData$hookObjs$cand9","_CVData$hookObjs$cand10","_CVData$hookObjs$cand11","_CVData$hookObjs$cand12","_CVData$hookObjs$cand13","_CVData$hookObjs$cand14","_CVData$hookObjs$cand15","_CVData$hookObjs$cand74","LastVolumeTooltip","_CVData$hookObjs$cand35","latestVolumeToolTip","_CVData$hookObjs$cand36","_CVData$hookObjs$cand37","_CVData$hookObjs$cand38","_CVData$hookObjs$cand39","_CVData$hookObjs$cand40","_CVData$hookObjs$cand41","_CVData$hookObjs$cand42","_CVData$hookObjs$cand43","_CVData$hookObjs$cand44","_CVData$hookObjs$cand45","_CVData$hookObjs$cand46","_CVData$hookObjs$cand47","_CVData$hookObjs$cand48","_CVData$hookObjs$cand49","_CVData$hookObjs$cand50","_CVData$hookObjs$cand51","_CVData$hookObjs$cand52","_CVData$hookObjs$cand53","_CVData$hookObjs$cand75","LatestVolumeToolTip","_CVData$hookObjs$cand54","latestdisplayLatestVolume","_CVData$hookObjs$cand55","_CVData$hookObjs$cand56","_CVData$hookObjs$cand57","_CVData$hookObjs$cand58","_CVData$hookObjs$cand59","_CVData$hookObjs$cand60","_CVData$hookObjs$cand61","_CVData$hookObjs$cand62","_CVData$hookObjs$cand63","_CVData$hookObjs$cand64","_CVData$hookObjs$cand65","_CVData$hookObjs$cand66","_CVData$hookObjs$cand67","_CVData$hookObjs$cand68","_CVData$hookObjs$cand69","_CVData$hookObjs$cand70","_CVData$hookObjs$cand71","_CVData$hookObjs$cand72","_CVData$hookObjs$cand76","YAxis","yBackground","yTicks","yLabels","_CVData$hookObjs$yAxi","_CVData$hookObjs$yAxi2","_CVData$hookObjs$yAxi3","_CVData$hookObjs$yAxi4","_CVData$hookObjs$yAxi5","_CVData$hookObjs$yAxi6","_CVData$hookObjs$yAxi7","_CVData$hookObjs$yAxi8","_CVData$hookObjs$yAxi9","_CVData$hookObjs$yAxi10","DataToolTip","Data","getColor","status","_CVData$initArgs$data","_CVData$initArgs$data2","_CVData$initArgs$data3","_CVData$initArgs$data4","_CVData$initArgs$data5","_CVData$initArgs$data6","_CVData$initArgs$data7","_CVData$initArgs$data8","displayCandleData","isDQuickUpdateing","candleStateus","candleLength","currentTick","candlePixPosition","makeCandle","wick","isEscaped","wickLength","wickPixPosition","makeWick","miny","scale","yScale","NetLines","netLinesx","netLineArr","makeNetLinesx","netLinesy","makeNetLinesy","VolumChat","chat","currentHeight","volumChartPixHeight","volume","volumChartViewMax","_loop","makeChat","Info","className","infoLayer","cursorCandleItem","_tooltipState","currentTimeType","_CVData$initArgs$time","BigNumber","open","close","high","low","currentItem","_CVData$initArgs$time2","makeInfo","Loading","isFetchingData","isFinishedInit","candleViewPixiContext","CandleView","$","useJquery","resizeDebounce","debounceFunction","debounceTimeOut","clearTimeout","useDebounce","offset","setoffset","relativePosition","isMouseDown","setisMouseDown","mouseDownPosition","setmouseDownPosition","mousePosition","setmousePosition","touchScaleStartLength","settouchScaleStartLength","isTouchScale","setisTouchScale","canvasConatiner","resizeObserverRef","initCandleView","getCanvasSize","createResizeObserver","funcs","setcanvasBackgroundColor","parent","css","setcanvasWidth","setcanvasHeight","top","ResizeObserver","entries","observe","preventDefault","e","addEventListener","disconnect","removeEventListener","canvasWidth","canvasHeight","onMouseDown","event","pageX","pageY","setrelativePosition","onMouseMove","moveContainer","tooltipMove","onMouseUp","onWheel","movement","deltaY","scaleStep","nativeEvent","stopPropagation","onMouseEnter","onMouseLeave","onTouchStart","targetTouches","onTouchMove","cancelable","min","point","max","onTouchEnd","Stage","options","backgroundAlpha","raf","renderOnComponentChange","Provider","VolumChart","args","merge","setinitArgs","igorn","config","initArgsChange","setinitArgsChange","lastmousePosition","setlastmousePosition","mouseSpeedSec","setmouseSpeedSec","mouseSpeedTemp","setmouseSpeedTemp","mouseSpeedTimmer","setmouseSpeedTimmer","setisFinishedInit","xAxisUpdateTimeStamp","setxAxisUpdateTimeStamp","xAxisUpdateMoveMentTimeStamp","setxAxisUpdateMoveMentTimeStamp","xAxisUpdateScaleTimeStamp","setxAxisUpdateScaleTimeStamp","setTooltipState","settooltipIsShow","moveAmount","setmoveAmount","setx","scaleValue","orgScope","setorgScope","tickStep","settickStep","setcurrentTimeType","lastTimeScope","setlastTimeScope","currentTimeScope","setcurrentTimeScope","setviewSize","yAxisSpace","setlinePosition","setlabelSpace","setlineSize","setlineColor","setnetLineArr","setnetLineMaxCount","setnetLineMinCount","settickArr","setdisplayTickArr","displayTickCommonWidth","setdisplayTickCommonWidth","displayTickCommonpixWidth","setdisplayTickCommonpixWidth","setcandleObj","timeSpeculation_backrward","timeInteger","initTimeScopeStart","currentTime","timeScopeArr","unshift","updateTicks","targetTickArr","timeScope","isComputCommonProp","_moveAmount","moveDir","forwardArr","initTimeScopeEnd","timeSpeculation_forward","createTickers","backwardArr","commonPixProperties","computTickCommonProp","dataWidth","incriseWidth","computDataPixTick","sort","a","b","totalArrLength","dataSpace","pixSpace","resultItem","createDisplayTickers","_tickStep","cArr","createNetLines","displaytickItems","results","createDisplayTickersByDate","displayTickRoundValuesArray","displayTickArr1","displayTickArr2","isFind","getTickWithFormated","displayTickArr2Map","xCondition","currentIndex","moveAxis","isSaveScope","_config$data","_config$data$dynamicD","pureLength","sign","changeScope","_displayTickerArr","_currentTimeScope","resultInterArr","newTicks","resultInterDisplayArr","newTickArr","newTickHash","nextStep","Array","from","Set","updateDisplayTicks","_netLineArr","precent","_config$data2","_config$data2$dynamic","leftPrecent","rightPrecent","total","q","_tickArr","setscaleValue","setUpMouseSpeedDetecor","timeOut","_flexTimeScope","_timeInteger","realTimeArr","_tickerArr","createAxisData","window","requestAnimationFrame","tooltipUpdate","initAxisSates","viewWidth","viewHeight","yAxisLabelSpace","setyAxisSpace","updateAxisSates","isShowTooltip","tooltipX","_tickItem","tickerArr","centerIndex","midTick","findTick","usexAxis","yAxisUpdateTimeStamp","setyAxisUpdateTimeStamp","currentDataScope","setcurrentDataScope","currentDataSpace","setcurrentDataSpace","currentDataPositionOfStart","setcurrentDataPositionofStart","settickLength","expandDataSpanceEdge","input","_expandAmount","div","dataScope","tickSeed","_displayTickArr","pre","computDisplayTicks","resultTickArr","stepAdd","tickCount","startInteger","scDf","gt","postStep","getTickSeed","computDisplayLines","_dataScope","scopeResult","tooltipY","expandDataSpanceEdgePIX","useyAxis","baseConfig","updateThrottlereComputAllDisplayedCandleData","currentTimeTypeName","setcurrentTimeTypeName","setminy","setisFetchingData","fetchDataStemp","setfetchDataStemp","streamData","setstreamData","stopDynamicFetching","setstopDynamicFetching","lastMaxMiny","workMessage","seworkMessage","TempDynamicData","setTempDynamicData","isFirstTimeUpdate","setisFirstTimeUpdate","setisDQuickUpdateing","setCursorCandleItem","setlatestCandleItem","lastTimexAsixStemp","setlastTimexAsixStemp","setvolumChartPixHeight","setvolumChartViewMax","isStaticData","setisStaticData","orgCandleData","setorgCandleData","setdisplayCandleData","displayCandleMaxMin","setdisplayCandleMaxMin","org_displayCandleMaxMin","setorg_displayCandleMaxMin","setyScale","setlatestCandleToolTip","setlatestVolumeToolTip","displayLatestCandle","setdisplayLatestCandle","setlatestdisplayLatestCandle","setlatestdisplayLatestVolume","updateStamp","setupdateStamp","initDyStamp","setinitDyStamp","allComputedCandleData","isUpdateing","isQuickUpdateing","isEscapeItems","mWorker","determineTimeSpaceConsistent","inputDataTimeSpace","configDataTimeSpace","getMin","getMax","mergeData","_currentCandleStick","prevItem","_displayCandleMaxMin","putDataIntoAllComputedCandleData","getCandleColor","getCandleStatus","getDataSpaceFromNumberScope","space","getDataY","dataPoint","yHeight","computSingalCandledata","dataitem","wickColor","wickStateus","_e","updateTag","computSingalCandledataMini","findDataByTicks","maxVolume","inde_i","seAllDataDateToUserConfigedGMT","initDynamicData","endTime","startTime","_context","heightPixVolumArea","_initArgs$candleStyle","_initArgs$candleStyle2","lunchDynamicData","_context2","timeZoneD","initStaticData","_orgCandleData","isConsistentOfDateType","_initArgs$candleStyle3","_initArgs$candleStyle4","reComputAllDisplayedCandleData","checkDynamicData","setlastMaxMiny","scaleUpdate","moveUpdate","updateAndAppendNewCandle","_totalCandleDisplayArr","backwardDCArr","forwardDCArr","_displayCandleData","currentScopeDisplayCandleData","_org_displayCandleMaxMin","currentTag","_cArr","isFromAppend","barr","orgMaxMiny","_item$wickPixPosition9","_item$wickPixPosition10","_item$wickPixPosition11","_item$wickPixPosition12","_item$candlePixPositi5","_item$wickPixPosition13","_item$candlePixPositi6","_item$wickPixPosition14","_item$candlePixPositi7","_item$wickPixPosition15","_item$candlePixPositi8","_item$wickPixPosition16","currentheight","onlyUpdatePositionAndScale","_xAxisdatatickArr","_viewSize","isEscapeItems_current","isQuickUpdateing_current","_item$wickPixPosition","_item$wickPixPosition2","_item$wickPixPosition3","_item$wickPixPosition4","_item$candlePixPositi","_item$wickPixPosition5","_item$candlePixPositi2","_item$wickPixPosition6","_item$candlePixPositi3","_item$wickPixPosition7","_item$candlePixPositi4","_item$wickPixPosition8","updatePartialCandleData","message","workerReciveMessage","Worker","URL","_xAxis$data$currentTi2","_xAxis$data$currentTi3","dataItem","intTime","copyedItem","edgeScope","_latestVolumeToolTip","_initArgs$candleStyle5","updateLatestCandleTooltip","_displayLatestCandle","_latestdisplayLatestVolume","_initArgs$candleStyle6","updateLatestdisplayLatestCandle","getCurrentCursorCandle","isMergeMode","currentRoundTime","_xAxis$data$currentTi","_latestCandleItem","isNew","isChangeDisplayCandleArr","_latestCandleItem2","_latestCandleItem3","tick","newMaxMin","updateStreamData","_data","updateDynamicData","updateLatestCandleData","candleItem","useCandleHook","canvasBackgroundColor","dataArea","setdataArea","_initArgs$yAxis2","_initArgs$yAxis","_initArgs$yAxis3","_initArgs$yAxis4","setInitArgs","appendData","setTimeFormat","_initArgs"],"mappings":"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"}